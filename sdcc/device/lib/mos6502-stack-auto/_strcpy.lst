                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler
                                      3 ; Version 4.5.10 #15691 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _strcpy
                                      6 	
                                      7 	.optsdcc -mmos6502
                                      8 
                                      9 ;--------------------------------------------------------
                                     10 ;  Ordering of segments for the linker.
                                     11 ;--------------------------------------------------------
                                     12 	.area ZP      (PAG)
                                     13 	.area OSEG    (PAG, OVR)
                                     14 	.area _CODE
                                     15 	.area GSINIT
                                     16 	.area GSFINAL
                                     17 	.area CODE
                                     18 	.area RODATA
                                     19 	.area XINIT
                                     20 	.area _DATA
                                     21 	.area DATA
                                     22 	.area BSS
                                     23 ;--------------------------------------------------------
                                     24 ; Public variables in this module
                                     25 ;--------------------------------------------------------
                                     26 	.globl _strcpy
                                     27 ;--------------------------------------------------------
                                     28 ; ZP ram data
                                     29 ;--------------------------------------------------------
                                     30 	.area ZP      (PAG)
                                     31 ;--------------------------------------------------------
                                     32 ; overlayable items in ram
                                     33 ;--------------------------------------------------------
                                     34 ;--------------------------------------------------------
                                     35 ; uninitialized external ram data
                                     36 ;--------------------------------------------------------
                                     37 	.area BSS
                                     38 ;--------------------------------------------------------
                                     39 ; absolute external ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area DABS    (ABS)
                                     42 ;--------------------------------------------------------
                                     43 ; initialized external ram data
                                     44 ;--------------------------------------------------------
                                     45 	.area DATA
                                     46 ;--------------------------------------------------------
                                     47 ; global & static initialisations
                                     48 ;--------------------------------------------------------
                                     49 	.area _CODE
                                     50 	.area GSINIT
                                     51 	.area GSFINAL
                                     52 	.area GSINIT
                                     53 ;--------------------------------------------------------
                                     54 ; Home
                                     55 ;--------------------------------------------------------
                                     56 	.area _CODE
                                     57 	.area _CODE
                                     58 ;--------------------------------------------------------
                                     59 ; code
                                     60 ;--------------------------------------------------------
                                     61 	.area CODE
                                     62 ;------------------------------------------------------------
                                     63 ;Allocation info for local variables in function 'strcpy'
                                     64 ;------------------------------------------------------------
                                     65 ;s             Allocated to stack - sp +9 +2 
                                     66 ;d             Allocated to stack - sp +5 +2 
                                     67 ;d1            Allocated to stack - sp +3 +2 
                                     68 ;sloc0         Allocated to stack - sp +1 +2 
                                     69 ;------------------------------------------------------------
                                     70 ;	../_strcpy.c: 36: char * strcpy ( char * d, const char * s )
                                     71 ;	genLabel
                                     72 ;	Raw cost for generated ic 0 : (0, 0.000000) count=1.000000
                                     73 ;	-----------------------------------------
                                     74 ;	 function strcpy
                                     75 ;	-----------------------------------------
                                     76 ;	Register assignment is optimal.
                                     77 ;	Stack space usage: 6 bytes.
      000000                         78 _strcpy:
                                     79 ;	genReceive: size=2
                                     80 ;	pushreg: ofs=1
      000000 85*00            [ 3]   81 	sta	*(REGTEMP+0)
      000002 8A               [ 2]   82 	txa
      000003 48               [ 3]   83 	pha
      000004 A5*00            [ 3]   84 	lda	*(REGTEMP+0)
                                     85 ;	pushreg: ofs=0
      000006 48               [ 3]   86 	pha
                                     87 ;	  adjustStack : cycles stk:12  incdec:12  adc:12
      000007 48               [ 3]   88 	pha
      000008 48               [ 3]   89 	pha
      000009 48               [ 3]   90 	pha
      00000A 48               [ 3]   91 	pha
                                     92 ;	Raw cost for generated ic 1 : (11, 26.000000) count=1.000000
                                     93 ;	skipping generated iCode
                                     94 ;	Raw cost for generated ic 2 : (0, 0.000000) count=1.000000
                                     95 ;	../_strcpy.c: 40: while (*d1++ = *s++) ;
                                     96 ;	genAssign
                                     97 ;	genCopy
      00000B BA               [ 2]   98 	tsx
      00000C BD 0A 01         [ 5]   99 	lda	0x10a,x
      00000F 9D 02 01         [ 5]  100 	sta	0x102,x
      000012 BD 09 01         [ 5]  101 	lda	0x109,x
      000015 9D 01 01         [ 5]  102 	sta	0x101,x
                                    103 ;	Raw cost for generated ic 22 : (13, 20.000000) count=1.000000
                                    104 ;	genAssign
                                    105 ;	genCopy
      000018 BD 06 01         [ 5]  106 	lda	0x106,x
      00001B 9D 04 01         [ 5]  107 	sta	0x104,x
      00001E BD 05 01         [ 5]  108 	lda	0x105,x
      000021 9D 03 01         [ 5]  109 	sta	0x103,x
                                    110 ;	Raw cost for generated ic 25 : (12, 18.000000) count=1.000000
                                    111 ;	genLabel
      000024                        112 00101$:
                                    113 ;	Raw cost for generated ic 4 : (0, 0.000000) count=3.999999
                                    114 ;	genPointerGet
                                    115 ;	  setupDPTR - off=0 remat=(null) savea=0
      000024 BA               [ 2]  116 	tsx
      000025 BD 01 01         [ 5]  117 	lda	0x101,x
      000028 85*00            [ 3]  118 	sta	*(DPTR+0)
      00002A BD 02 01         [ 5]  119 	lda	0x102,x
      00002D 85*01            [ 3]  120 	sta	*(DPTR+1)
      00002F A0 00            [ 2]  121 	ldy	#0x00
      000031 B1*00            [ 6]  122 	lda	[DPTR],y
      000033 A8               [ 2]  123 	tay
                                    124 ;	Raw cost for generated ic 11 : (16, 25.000000) count=3.999999
                                    125 ;	genPlus
                                    126 ;	  genPlusInc
      000034 BD 01 01         [ 5]  127 	lda	0x101,x
      000037 18               [ 2]  128 	clc
      000038 69 01            [ 2]  129 	adc	#0x01
      00003A 9D 01 01         [ 5]  130 	sta	0x101,x
      00003D BD 02 01         [ 5]  131 	lda	0x102,x
      000040 69 00            [ 2]  132 	adc	#0x00
      000042 9D 02 01         [ 5]  133 	sta	0x102,x
                                    134 ;	Raw cost for generated ic 9 : (17, 24.000000) count=3.999999
                                    135 ;	genPointerSet
      000045 84*00            [ 3]  136 	sty	*(REGTEMP+0)
                                    137 ;	  setupDPTR - off=0 remat=(null) savea=0
      000047 BD 03 01         [ 5]  138 	lda	0x103,x
      00004A 85*00            [ 3]  139 	sta	*(DPTR+0)
      00004C BD 04 01         [ 5]  140 	lda	0x104,x
      00004F 85*01            [ 3]  141 	sta	*(DPTR+1)
      000051 A4*00            [ 3]  142 	ldy	*(REGTEMP+0)
      000053 98               [ 2]  143 	tya
      000054 A0 00            [ 2]  144 	ldy	#0x00
      000056 91*00            [ 6]  145 	sta	[DPTR],y
      000058 A4*00            [ 3]  146 	ldy	*(REGTEMP+0)
                                    147 ;	Raw cost for generated ic 12 : (21, 33.000000) count=3.999999
                                    148 ;	genPlus
                                    149 ;	  genPlusInc
      00005A BD 03 01         [ 5]  150 	lda	0x103,x
      00005D 18               [ 2]  151 	clc
      00005E 69 01            [ 2]  152 	adc	#0x01
      000060 9D 03 01         [ 5]  153 	sta	0x103,x
      000063 BD 04 01         [ 5]  154 	lda	0x104,x
      000066 69 00            [ 2]  155 	adc	#0x00
      000068 9D 04 01         [ 5]  156 	sta	0x104,x
                                    157 ;	Raw cost for generated ic 6 : (17, 24.000000) count=3.999999
                                    158 ;	genIfx
      00006B C0 00            [ 2]  159 	cpy	#0x00
                                    160 ;	genIfxJump : z
      00006D D0 B5            [ 4]  161 	bne	00101$
                                    162 ;	Raw cost for generated ic 13 : (7, 7.600000) count=3.999999
                                    163 ;	../_strcpy.c: 42: return d;
                                    164 ;	genRet
      00006F BD 06 01         [ 5]  165 	lda	0x106,x
      000072 85*00            [ 3]  166 	sta	*(REGTEMP+0)
      000074 BD 05 01         [ 5]  167 	lda	0x105,x
                                    168 ;	Raw cost for generated ic 18 : (10, 14.000000) count=1.000000
                                    169 ;	genLabel
                                    170 ;	Raw cost for generated ic 19 : (0, 0.000000) count=1.000000
                                    171 ;	../_strcpy.c: 43: }
                                    172 ;	genEndFunction
                                    173 ;	  adjustStack : cycles stk:30  incdec:22  adc:24
      000077 BA               [ 2]  174 	tsx
      000078 E8               [ 2]  175 	inx
      000079 E8               [ 2]  176 	inx
      00007A E8               [ 2]  177 	inx
      00007B E8               [ 2]  178 	inx
      00007C E8               [ 2]  179 	inx
      00007D E8               [ 2]  180 	inx
      00007E 9A               [ 2]  181 	txs
      00007F A6*00            [ 3]  182 	ldx	*(REGTEMP+0)
      000081 60               [ 6]  183 	rts
                                    184 ;	Raw cost for generated ic 20 : (13, 28.000000) count=1.000000
                                    185 	.area CODE
                                    186 	.area RODATA
                                    187 	.area XINIT
                                    188 	.area CABS    (ABS)
