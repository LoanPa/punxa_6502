                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler
                                      3 ; Version 4.5.10 #15691 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module isalnum
                                      6 	
                                      7 	.optsdcc -mmos6502
                                      8 
                                      9 ;--------------------------------------------------------
                                     10 ;  Ordering of segments for the linker.
                                     11 ;--------------------------------------------------------
                                     12 	.area ZP      (PAG)
                                     13 	.area OSEG    (PAG, OVR)
                                     14 	.area _CODE
                                     15 	.area GSINIT
                                     16 	.area GSFINAL
                                     17 	.area CODE
                                     18 	.area RODATA
                                     19 	.area XINIT
                                     20 	.area _DATA
                                     21 	.area DATA
                                     22 	.area BSS
                                     23 ;--------------------------------------------------------
                                     24 ; Public variables in this module
                                     25 ;--------------------------------------------------------
                                     26 	.globl _isalpha
                                     27 	.globl _isalnum
                                     28 ;--------------------------------------------------------
                                     29 ; ZP ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area ZP      (PAG)
                                     32 ;--------------------------------------------------------
                                     33 ; overlayable items in ram
                                     34 ;--------------------------------------------------------
                                     35 ;--------------------------------------------------------
                                     36 ; uninitialized external ram data
                                     37 ;--------------------------------------------------------
                                     38 	.area BSS
                                     39 ;--------------------------------------------------------
                                     40 ; absolute external ram data
                                     41 ;--------------------------------------------------------
                                     42 	.area DABS    (ABS)
                                     43 ;--------------------------------------------------------
                                     44 ; initialized external ram data
                                     45 ;--------------------------------------------------------
                                     46 	.area DATA
                                     47 ;--------------------------------------------------------
                                     48 ; global & static initialisations
                                     49 ;--------------------------------------------------------
                                     50 	.area _CODE
                                     51 	.area GSINIT
                                     52 	.area GSFINAL
                                     53 	.area GSINIT
                                     54 ;--------------------------------------------------------
                                     55 ; Home
                                     56 ;--------------------------------------------------------
                                     57 	.area _CODE
                                     58 	.area _CODE
                                     59 ;--------------------------------------------------------
                                     60 ; code
                                     61 ;--------------------------------------------------------
                                     62 	.area CODE
                                     63 ;------------------------------------------------------------
                                     64 ;Allocation info for local variables in function 'isalnum'
                                     65 ;------------------------------------------------------------
                                     66 ;c             Allocated to stack - sp +1 +2 
                                     67 ;__200000001   Allocated to registers 
                                     68 ;__200000002   Allocated to registers 
                                     69 ;c             Allocated to registers 
                                     70 ;------------------------------------------------------------
                                     71 ;	../isalnum.c: 37: int isalnum (int c)
                                     72 ;	genLabel
                                     73 ;	Raw cost for generated ic 0 : (0, 0.000000) count=1.000000
                                     74 ;	-----------------------------------------
                                     75 ;	 function isalnum
                                     76 ;	-----------------------------------------
                                     77 ;	Register assignment is optimal.
                                     78 ;	Stack space usage: 2 bytes.
      000000                         79 _isalnum:
                                     80 ;	genReceive: size=2
                                     81 ;	pushreg: ofs=1
      000000 85*00            [ 3]   82 	sta	*(REGTEMP+0)
      000002 8A               [ 2]   83 	txa
      000003 48               [ 3]   84 	pha
      000004 A5*00            [ 3]   85 	lda	*(REGTEMP+0)
                                     86 ;	pushreg: ofs=0
      000006 48               [ 3]   87 	pha
                                     88 ;	Raw cost for generated ic 1 : (7, 14.000000) count=1.000000
                                     89 ;	skipping generated iCode
                                     90 ;	Raw cost for generated ic 2 : (0, 0.000000) count=1.000000
                                     91 ;	../isalnum.c: 39: return (isalpha (c) || isdigit (c));
                                     92 ;	Raw cost for generated ic 3 : (0, 0.000000) count=1.000000
                                     93 ;	genCall
                                     94 ;	genSend
      000007 BA               [ 2]   95 	tsx
      000008 BD 01 01         [ 5]   96 	lda	0x101,x
      00000B A8               [ 2]   97 	tay
      00000C BD 02 01         [ 5]   98 	lda	0x102,x
      00000F AA               [ 2]   99 	tax
      000010 98               [ 2]  100 	tya
      000011 20r00r00         [ 6]  101 	jsr	_isalpha
                                    102 ;	assignResultValue
                                    103 ;	Raw cost for generated ic 4 : (13, 22.000000) count=1.000000
                                    104 ;	genIfx
      000014 C9 00            [ 2]  105 	cmp	#0x00
                                    106 ;	genIfxJump : z
      000016 D0 17            [ 4]  107 	bne	00105$
      000018 E0 00            [ 2]  108 	cpx	#0x00
      00001A D0 13            [ 4]  109 	bne	00105$
                                    110 ;	Raw cost for generated ic 5 : (11, 12.200000) count=1.000000
                                    111 ;	./../../include/ctype.h: 62: return ((unsigned char)c >= '0' && (unsigned char)c <= '9');
                                    112 ;	genCast
                                    113 ;	genCopy
      00001C BA               [ 2]  114 	tsx
      00001D BD 01 01         [ 5]  115 	lda	0x101,x
                                    116 ;	Raw cost for generated ic 8 : (4, 6.000000) count=0.750000
                                    117 ;	genCmp
      000020 C9 30            [ 2]  118 	cmp	#0x30
      000022 90 06            [ 4]  119 	bcc	00109$
                                    120 ;	Raw cost for generated ic 9 : (7, 7.600000) count=0.750000
                                    121 ;	skipping generated iCode
                                    122 ;	Raw cost for generated ic 11 : (0, 0.000000) count=0.750000
                                    123 ;	genCmp
      000024 C9 39            [ 2]  124 	cmp	#0x39
      000026 F0 07            [ 4]  125 	beq	00105$
      000028 90 05            [ 4]  126 	bcc	00105$
                                    127 ;	Raw cost for generated ic 13 : (9, 10.200000) count=0.562500
                                    128 ;	skipping generated iCode
                                    129 ;	Raw cost for generated ic 15 : (0, 0.000000) count=0.562500
                                    130 ;	genLabel
      00002A                        131 00109$:
                                    132 ;	Raw cost for generated ic 21 : (0, 0.000000) count=0.609375
                                    133 ;	../isalnum.c: 39: return (isalpha (c) || isdigit (c));
                                    134 ;	genAssign
                                    135 ;	genCopy
      00002A A9 00            [ 2]  136 	lda	#0x00
                                    137 ;	Raw cost for generated ic 28 : (2, 2.000000) count=0.609375
                                    138 ;	genGoto
      00002C 4Cr31r00         [ 3]  139 	jmp	00106$
                                    140 ;	Raw cost for generated ic 29 : (3, 3.000000) count=0.609375
                                    141 ;	genLabel
      00002F                        142 00105$:
                                    143 ;	Raw cost for generated ic 30 : (0, 0.000000) count=0.390625
                                    144 ;	genAssign
                                    145 ;	genCopy
      00002F A9 01            [ 2]  146 	lda	#0x01
                                    147 ;	Raw cost for generated ic 31 : (2, 2.000000) count=0.390625
                                    148 ;	genLabel
      000031                        149 00106$:
                                    150 ;	Raw cost for generated ic 32 : (0, 0.000000) count=1.000000
                                    151 ;	genCast
                                    152 ;	genCopy
      000031 A2 00            [ 2]  153 	ldx	#0x00
                                    154 ;	Raw cost for generated ic 33 : (2, 2.000000) count=1.000000
                                    155 ;	genRet
                                    156 ;	Raw cost for generated ic 34 : (0, 0.000000) count=1.000000
                                    157 ;	genLabel
                                    158 ;	Raw cost for generated ic 35 : (0, 0.000000) count=1.000000
                                    159 ;	../isalnum.c: 40: }
                                    160 ;	genEndFunction
                                    161 ;	  adjustStack : cycles stk:14  incdec:14  adc:24
      000033 85*00            [ 3]  162 	sta	*(REGTEMP+0)
      000035 68               [ 4]  163 	pla
      000036 68               [ 4]  164 	pla
      000037 A5*00            [ 3]  165 	lda	*(REGTEMP+0)
      000039 60               [ 6]  166 	rts
                                    167 ;	Raw cost for generated ic 36 : (7, 20.000000) count=1.000000
                                    168 	.area CODE
                                    169 	.area RODATA
                                    170 	.area XINIT
                                    171 	.area CABS    (ABS)
