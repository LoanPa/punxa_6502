                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler
                                      3 ; Version 4.5.10 #15691 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _fsneq
                                      6 	
                                      7 	.optsdcc -mmos6502
                                      8 
                                      9 ;--------------------------------------------------------
                                     10 ;  Ordering of segments for the linker.
                                     11 ;--------------------------------------------------------
                                     12 	.area ZP      (PAG)
                                     13 	.area OSEG    (PAG, OVR)
                                     14 	.area _CODE
                                     15 	.area GSINIT
                                     16 	.area GSFINAL
                                     17 	.area CODE
                                     18 	.area RODATA
                                     19 	.area XINIT
                                     20 	.area _DATA
                                     21 	.area DATA
                                     22 	.area BSS
                                     23 ;--------------------------------------------------------
                                     24 ; Public variables in this module
                                     25 ;--------------------------------------------------------
                                     26 	.globl ___fsneq
                                     27 ;--------------------------------------------------------
                                     28 ; ZP ram data
                                     29 ;--------------------------------------------------------
                                     30 	.area ZP      (PAG)
                                     31 ;--------------------------------------------------------
                                     32 ; overlayable items in ram
                                     33 ;--------------------------------------------------------
                                     34 ;--------------------------------------------------------
                                     35 ; uninitialized external ram data
                                     36 ;--------------------------------------------------------
                                     37 	.area BSS
                                     38 ;--------------------------------------------------------
                                     39 ; absolute external ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area DABS    (ABS)
                                     42 ;--------------------------------------------------------
                                     43 ; initialized external ram data
                                     44 ;--------------------------------------------------------
                                     45 	.area DATA
                                     46 ;--------------------------------------------------------
                                     47 ; global & static initialisations
                                     48 ;--------------------------------------------------------
                                     49 	.area _CODE
                                     50 	.area GSINIT
                                     51 	.area GSFINAL
                                     52 	.area GSINIT
                                     53 ;--------------------------------------------------------
                                     54 ; Home
                                     55 ;--------------------------------------------------------
                                     56 	.area _CODE
                                     57 	.area _CODE
                                     58 ;--------------------------------------------------------
                                     59 ; code
                                     60 ;--------------------------------------------------------
                                     61 	.area CODE
                                     62 ;------------------------------------------------------------
                                     63 ;Allocation info for local variables in function '__fsneq'
                                     64 ;------------------------------------------------------------
                                     65 ;a1            Allocated to stack - sp +19 +4 
                                     66 ;a2            Allocated to stack - sp +23 +4 
                                     67 ;fl1           Allocated to stack - sp +5 +4 
                                     68 ;fl2           Allocated to stack - sp +1 +4 
                                     69 ;sloc0         Allocated to stack - sp +13 +4 
                                     70 ;sloc1         Allocated to stack - sp +9 +4 
                                     71 ;------------------------------------------------------------
                                     72 ;	../_fsneq.c: 80: _Bool __fsneq (float a1, float a2) __SDCC_FLOAT_NONBANKED
                                     73 ;	genLabel
                                     74 ;	Raw cost for generated ic 0 : (0, 0.000000) count=1.000000
                                     75 ;	-----------------------------------------
                                     76 ;	 function __fsneq
                                     77 ;	-----------------------------------------
                                     78 ;	Register assignment is optimal.
                                     79 ;	Stack space usage: 16 bytes.
      000000                         80 ___fsneq:
                                     81 ;	  adjustStack : cycles stk:48  incdec:36  adc:12
      000000 BA               [ 2]   82 	tsx
      000001 8A               [ 2]   83 	txa
      000002 18               [ 2]   84 	clc
      000003 69 F0            [ 2]   85 	adc	#0xf0
      000005 AA               [ 2]   86 	tax
      000006 9A               [ 2]   87 	txs
                                     88 ;	Raw cost for generated ic 1 : (7, 12.000000) count=1.000000
                                     89 ;	../_fsneq.c: 84: fl1.f = a1;
                                     90 ;	genAddrOf
      000007 8A               [ 2]   91 	txa
      000008 18               [ 2]   92 	clc
      000009 69 05            [ 2]   93 	adc	#0x05
      00000B A2 01            [ 2]   94 	ldx	#0x01
                                     95 ;	Raw cost for generated ic 2 : (6, 8.000000) count=1.000000
                                     96 ;	genPointerSet
                                     97 ;	  setupDPTR - off=0 remat=(null) savea=0
      00000D 85*00            [ 3]   98 	sta	*(DPTR+0)
      00000F 86*01            [ 3]   99 	stx	*(DPTR+1)
      000011 BA               [ 2]  100 	tsx
      000012 BD 13 01         [ 5]  101 	lda	0x113,x
      000015 A0 00            [ 2]  102 	ldy	#0x00
      000017 91*00            [ 6]  103 	sta	[DPTR],y
      000019 BD 14 01         [ 5]  104 	lda	0x114,x
      00001C C8               [ 2]  105 	iny
      00001D 91*00            [ 6]  106 	sta	[DPTR],y
      00001F BD 15 01         [ 5]  107 	lda	0x115,x
      000022 C8               [ 2]  108 	iny
      000023 91*00            [ 6]  109 	sta	[DPTR],y
      000025 BD 16 01         [ 5]  110 	lda	0x116,x
      000028 C8               [ 2]  111 	iny
      000029 91*00            [ 6]  112 	sta	[DPTR],y
                                    113 ;	Raw cost for generated ic 4 : (30, 56.000000) count=1.000000
                                    114 ;	../_fsneq.c: 85: fl2.f = a2;
                                    115 ;	genAddrOf
      00002B E8               [ 2]  116 	inx
      00002C 8A               [ 2]  117 	txa
      00002D A2 01            [ 2]  118 	ldx	#0x01
                                    119 ;	Raw cost for generated ic 5 : (4, 6.000000) count=1.000000
                                    120 ;	genPointerSet
                                    121 ;	  setupDPTR - off=0 remat=(null) savea=0
      00002F 85*00            [ 3]  122 	sta	*(DPTR+0)
                                    123 ;	 storeRegToDPTR: DPTR[1] has same literal 01
      000031 BA               [ 2]  124 	tsx
      000032 BD 17 01         [ 5]  125 	lda	0x117,x
      000035 A0 00            [ 2]  126 	ldy	#0x00
      000037 91*00            [ 6]  127 	sta	[DPTR],y
      000039 BD 18 01         [ 5]  128 	lda	0x118,x
      00003C C8               [ 2]  129 	iny
      00003D 91*00            [ 6]  130 	sta	[DPTR],y
      00003F BD 19 01         [ 5]  131 	lda	0x119,x
      000042 C8               [ 2]  132 	iny
      000043 91*00            [ 6]  133 	sta	[DPTR],y
      000045 BD 1A 01         [ 5]  134 	lda	0x11a,x
      000048 C8               [ 2]  135 	iny
      000049 91*00            [ 6]  136 	sta	[DPTR],y
                                    137 ;	Raw cost for generated ic 7 : (28, 53.000000) count=1.000000
                                    138 ;	../_fsneq.c: 87: if (fl1.l == fl2.l)
                                    139 ;	genAddrOf
      00004B 8A               [ 2]  140 	txa
      00004C 18               [ 2]  141 	clc
      00004D 69 05            [ 2]  142 	adc	#0x05
      00004F A2 01            [ 2]  143 	ldx	#0x01
                                    144 ;	Raw cost for generated ic 8 : (6, 8.000000) count=1.000000
                                    145 ;	genPointerGet
                                    146 ;	  setupDPTR - off=0 remat=(null) savea=0
      000051 85*00            [ 3]  147 	sta	*(DPTR+0)
                                    148 ;	 storeRegToDPTR: DPTR[1] has same literal 01
      000053 A0 00            [ 2]  149 	ldy	#0x00
      000055 B1*00            [ 6]  150 	lda	[DPTR],y
      000057 BA               [ 2]  151 	tsx
      000058 9D 0D 01         [ 5]  152 	sta	0x10d,x
      00005B C8               [ 2]  153 	iny
      00005C B1*00            [ 6]  154 	lda	[DPTR],y
      00005E 9D 0E 01         [ 5]  155 	sta	0x10e,x
      000061 C8               [ 2]  156 	iny
      000062 B1*00            [ 6]  157 	lda	[DPTR],y
      000064 9D 0F 01         [ 5]  158 	sta	0x10f,x
      000067 C8               [ 2]  159 	iny
      000068 B1*00            [ 6]  160 	lda	[DPTR],y
      00006A 9D 10 01         [ 5]  161 	sta	0x110,x
                                    162 ;	Raw cost for generated ic 10 : (28, 53.000000) count=1.000000
                                    163 ;	genAddrOf
      00006D E8               [ 2]  164 	inx
      00006E 8A               [ 2]  165 	txa
      00006F A2 01            [ 2]  166 	ldx	#0x01
                                    167 ;	Raw cost for generated ic 11 : (4, 6.000000) count=1.000000
                                    168 ;	genPointerGet
                                    169 ;	  setupDPTR - off=0 remat=(null) savea=0
      000071 85*00            [ 3]  170 	sta	*(DPTR+0)
                                    171 ;	 storeRegToDPTR: DPTR[1] has same literal 01
      000073 A0 00            [ 2]  172 	ldy	#0x00
      000075 B1*00            [ 6]  173 	lda	[DPTR],y
      000077 BA               [ 2]  174 	tsx
      000078 9D 09 01         [ 5]  175 	sta	0x109,x
      00007B C8               [ 2]  176 	iny
      00007C B1*00            [ 6]  177 	lda	[DPTR],y
      00007E 9D 0A 01         [ 5]  178 	sta	0x10a,x
      000081 C8               [ 2]  179 	iny
      000082 B1*00            [ 6]  180 	lda	[DPTR],y
      000084 9D 0B 01         [ 5]  181 	sta	0x10b,x
      000087 C8               [ 2]  182 	iny
      000088 B1*00            [ 6]  183 	lda	[DPTR],y
      00008A 9D 0C 01         [ 5]  184 	sta	0x10c,x
                                    185 ;	Raw cost for generated ic 13 : (28, 53.000000) count=1.000000
                                    186 ;	genCmpEQorNE
      00008D BD 0D 01         [ 5]  187 	lda	0x10d,x
      000090 DD 09 01         [ 5]  188 	cmp	0x109,x
      000093 D0 1D            [ 4]  189 	bne	00102$
      000095 BD 0E 01         [ 5]  190 	lda	0x10e,x
      000098 DD 0A 01         [ 5]  191 	cmp	0x10a,x
      00009B D0 15            [ 4]  192 	bne	00102$
      00009D BD 0F 01         [ 5]  193 	lda	0x10f,x
      0000A0 DD 0B 01         [ 5]  194 	cmp	0x10b,x
      0000A3 D0 0D            [ 4]  195 	bne	00102$
      0000A5 BD 10 01         [ 5]  196 	lda	0x110,x
      0000A8 DD 0C 01         [ 5]  197 	cmp	0x10c,x
      0000AB D0 05            [ 4]  198 	bne	00102$
                                    199 ;	Raw cost for generated ic 14 : (44, 54.399998) count=1.000000
                                    200 ;	skipping generated iCode
                                    201 ;	Raw cost for generated ic 15 : (0, 0.000000) count=1.000000
                                    202 ;	../_fsneq.c: 88: return (0);
                                    203 ;	genRet
      0000AD A9 00            [ 2]  204 	lda	#0x00
      0000AF 4Cr38r01         [ 3]  205 	jmp	00105$
                                    206 ;	Raw cost for generated ic 18 : (5, 5.000000) count=0.750000
                                    207 ;	genLabel
      0000B2                        208 00102$:
                                    209 ;	Raw cost for generated ic 19 : (0, 0.000000) count=1.000000
                                    210 ;	../_fsneq.c: 89: if (((fl1.l | fl2.l) & 0x7FFFFFFF) == 0)
                                    211 ;	genAddrOf
      0000B2 BA               [ 2]  212 	tsx
      0000B3 8A               [ 2]  213 	txa
      0000B4 18               [ 2]  214 	clc
      0000B5 69 05            [ 2]  215 	adc	#0x05
      0000B7 A2 01            [ 2]  216 	ldx	#0x01
                                    217 ;	Raw cost for generated ic 20 : (7, 10.000000) count=1.000000
                                    218 ;	genPointerGet
                                    219 ;	  setupDPTR - off=0 remat=(null) savea=0
      0000B9 85*00            [ 3]  220 	sta	*(DPTR+0)
      0000BB 86*01            [ 3]  221 	stx	*(DPTR+1)
      0000BD A0 00            [ 2]  222 	ldy	#0x00
      0000BF B1*00            [ 6]  223 	lda	[DPTR],y
      0000C1 BA               [ 2]  224 	tsx
      0000C2 9D 09 01         [ 5]  225 	sta	0x109,x
      0000C5 C8               [ 2]  226 	iny
      0000C6 B1*00            [ 6]  227 	lda	[DPTR],y
      0000C8 9D 0A 01         [ 5]  228 	sta	0x10a,x
      0000CB C8               [ 2]  229 	iny
      0000CC B1*00            [ 6]  230 	lda	[DPTR],y
      0000CE 9D 0B 01         [ 5]  231 	sta	0x10b,x
      0000D1 C8               [ 2]  232 	iny
      0000D2 B1*00            [ 6]  233 	lda	[DPTR],y
      0000D4 9D 0C 01         [ 5]  234 	sta	0x10c,x
                                    235 ;	Raw cost for generated ic 22 : (30, 56.000000) count=1.000000
                                    236 ;	genAddrOf
      0000D7 E8               [ 2]  237 	inx
      0000D8 8A               [ 2]  238 	txa
      0000D9 A2 01            [ 2]  239 	ldx	#0x01
                                    240 ;	Raw cost for generated ic 23 : (4, 6.000000) count=1.000000
                                    241 ;	genPointerGet
                                    242 ;	  setupDPTR - off=0 remat=(null) savea=0
      0000DB 85*00            [ 3]  243 	sta	*(DPTR+0)
                                    244 ;	 storeRegToDPTR: DPTR[1] has same literal 01
      0000DD A0 00            [ 2]  245 	ldy	#0x00
      0000DF B1*00            [ 6]  246 	lda	[DPTR],y
      0000E1 BA               [ 2]  247 	tsx
      0000E2 9D 0D 01         [ 5]  248 	sta	0x10d,x
      0000E5 C8               [ 2]  249 	iny
      0000E6 B1*00            [ 6]  250 	lda	[DPTR],y
      0000E8 9D 0E 01         [ 5]  251 	sta	0x10e,x
      0000EB C8               [ 2]  252 	iny
      0000EC B1*00            [ 6]  253 	lda	[DPTR],y
      0000EE 9D 0F 01         [ 5]  254 	sta	0x10f,x
      0000F1 C8               [ 2]  255 	iny
      0000F2 B1*00            [ 6]  256 	lda	[DPTR],y
      0000F4 9D 10 01         [ 5]  257 	sta	0x110,x
                                    258 ;	Raw cost for generated ic 25 : (28, 53.000000) count=1.000000
                                    259 ;	genOr
      0000F7 BD 09 01         [ 5]  260 	lda	0x109,x
      0000FA 1D 0D 01         [ 5]  261 	ora	0x10d,x
      0000FD 9D 09 01         [ 5]  262 	sta	0x109,x
      000100 BD 0A 01         [ 5]  263 	lda	0x10a,x
      000103 1D 0E 01         [ 5]  264 	ora	0x10e,x
      000106 9D 0A 01         [ 5]  265 	sta	0x10a,x
      000109 BD 0B 01         [ 5]  266 	lda	0x10b,x
      00010C 1D 0F 01         [ 5]  267 	ora	0x10f,x
      00010F 9D 0B 01         [ 5]  268 	sta	0x10b,x
      000112 BD 0C 01         [ 5]  269 	lda	0x10c,x
      000115 1D 10 01         [ 5]  270 	ora	0x110,x
      000118 9D 0C 01         [ 5]  271 	sta	0x10c,x
                                    272 ;	Raw cost for generated ic 26 : (36, 52.000000) count=1.000000
                                    273 ;	genAnd
      00011B BD 09 01         [ 5]  274 	lda	0x109,x
      00011E D0 0F            [ 4]  275 	bne	00124$
      000120 BD 0A 01         [ 5]  276 	lda	0x10a,x
      000123 D0 0A            [ 4]  277 	bne	00124$
      000125 BD 0B 01         [ 5]  278 	lda	0x10b,x
      000128 D0 05            [ 4]  279 	bne	00124$
      00012A BD 0C 01         [ 5]  280 	lda	0x10c,x
      00012D 29 7F            [ 2]  281 	and	#0x7f
      00012F                        282 00124$:
                                    283 ;	genIfxJump : z
      00012F D0 05            [ 4]  284 	bne	00104$
                                    285 ;	Raw cost for generated ic 27 : (25, 31.400002) count=1.000000
                                    286 ;	skipping generated iCode
                                    287 ;	Raw cost for generated ic 28 : (0, 0.000000) count=1.000000
                                    288 ;	../_fsneq.c: 90: return (0);
                                    289 ;	genRet
      000131 A9 00            [ 2]  290 	lda	#0x00
      000133 4Cr38r01         [ 3]  291 	jmp	00105$
                                    292 ;	Raw cost for generated ic 31 : (5, 5.000000) count=0.750000
                                    293 ;	genLabel
      000136                        294 00104$:
                                    295 ;	Raw cost for generated ic 32 : (0, 0.000000) count=1.000000
                                    296 ;	../_fsneq.c: 91: return (1);
                                    297 ;	genRet
      000136 A9 01            [ 2]  298 	lda	#0x01
                                    299 ;	Raw cost for generated ic 33 : (2, 2.000000) count=1.000000
                                    300 ;	genLabel
      000138                        301 00105$:
                                    302 ;	Raw cost for generated ic 34 : (0, 0.000000) count=1.000000
                                    303 ;	../_fsneq.c: 92: }
                                    304 ;	genEndFunction
                                    305 ;	  adjustStack : cycles stk:70  incdec:42  adc:24
      000138 86*00            [ 3]  306 	stx	*(REGTEMP+0)
      00013A 85*01            [ 3]  307 	sta	*(REGTEMP+1)
      00013C BA               [ 2]  308 	tsx
      00013D 8A               [ 2]  309 	txa
      00013E 18               [ 2]  310 	clc
      00013F 69 10            [ 2]  311 	adc	#0x10
      000141 AA               [ 2]  312 	tax
      000142 9A               [ 2]  313 	txs
      000143 A5*01            [ 3]  314 	lda	*(REGTEMP+1)
      000145 A6*00            [ 3]  315 	ldx	*(REGTEMP+0)
      000147 60               [ 6]  316 	rts
                                    317 ;	Raw cost for generated ic 35 : (16, 30.000000) count=1.000000
                                    318 	.area CODE
                                    319 	.area RODATA
                                    320 	.area XINIT
                                    321 	.area CABS    (ABS)
