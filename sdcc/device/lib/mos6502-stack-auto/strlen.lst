                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler
                                      3 ; Version 4.5.10 #15691 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module strlen
                                      6 	
                                      7 	.optsdcc -mmos6502
                                      8 
                                      9 ;--------------------------------------------------------
                                     10 ;  Ordering of segments for the linker.
                                     11 ;--------------------------------------------------------
                                     12 	.area ZP      (PAG)
                                     13 	.area OSEG    (PAG, OVR)
                                     14 	.area _CODE
                                     15 	.area GSINIT
                                     16 	.area GSFINAL
                                     17 	.area CODE
                                     18 	.area RODATA
                                     19 	.area XINIT
                                     20 	.area _DATA
                                     21 	.area DATA
                                     22 	.area BSS
                                     23 ;--------------------------------------------------------
                                     24 ; Public variables in this module
                                     25 ;--------------------------------------------------------
                                     26 	.globl _strlen
                                     27 ;--------------------------------------------------------
                                     28 ; ZP ram data
                                     29 ;--------------------------------------------------------
                                     30 	.area ZP      (PAG)
                                     31 ;--------------------------------------------------------
                                     32 ; overlayable items in ram
                                     33 ;--------------------------------------------------------
                                     34 ;--------------------------------------------------------
                                     35 ; uninitialized external ram data
                                     36 ;--------------------------------------------------------
                                     37 	.area BSS
                                     38 ;--------------------------------------------------------
                                     39 ; absolute external ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area DABS    (ABS)
                                     42 ;--------------------------------------------------------
                                     43 ; initialized external ram data
                                     44 ;--------------------------------------------------------
                                     45 	.area DATA
                                     46 ;--------------------------------------------------------
                                     47 ; global & static initialisations
                                     48 ;--------------------------------------------------------
                                     49 	.area _CODE
                                     50 	.area GSINIT
                                     51 	.area GSFINAL
                                     52 	.area GSINIT
                                     53 ;--------------------------------------------------------
                                     54 ; Home
                                     55 ;--------------------------------------------------------
                                     56 	.area _CODE
                                     57 	.area _CODE
                                     58 ;--------------------------------------------------------
                                     59 ; code
                                     60 ;--------------------------------------------------------
                                     61 	.area CODE
                                     62 ;------------------------------------------------------------
                                     63 ;Allocation info for local variables in function 'strlen'
                                     64 ;------------------------------------------------------------
                                     65 ;str           Allocated to registers 
                                     66 ;i             Allocated to stack - sp +3 +2 
                                     67 ;sloc0         Allocated to stack - sp +1 +2 
                                     68 ;------------------------------------------------------------
                                     69 ;	../strlen.c: 35: size_t strlen ( const char * str )
                                     70 ;	genLabel
                                     71 ;	Raw cost for generated ic 0 : (0, 0.000000) count=1.000000
                                     72 ;	-----------------------------------------
                                     73 ;	 function strlen
                                     74 ;	-----------------------------------------
                                     75 ;	Register assignment is optimal.
                                     76 ;	Stack space usage: 4 bytes.
      000000                         77 _strlen:
                                     78 ;	  adjustStack : cycles stk:12  incdec:18  adc:24
      000000 48               [ 3]   79 	pha
      000001 48               [ 3]   80 	pha
      000002 48               [ 3]   81 	pha
      000003 48               [ 3]   82 	pha
                                     83 ;	Raw cost for generated ic 1 : (4, 12.000000) count=1.000000
                                     84 ;	genReceive
      000004 86*00            [ 3]   85 	stx	*(REGTEMP+0)
      000006 BA               [ 2]   86 	tsx
      000007 9D 01 01         [ 5]   87 	sta	0x101,x
      00000A A5*00            [ 3]   88 	lda	*(REGTEMP+0)
      00000C 9D 02 01         [ 5]   89 	sta	0x102,x
                                     90 ;	Raw cost for generated ic 2 : (11, 18.000000) count=1.000000
                                     91 ;	../strlen.c: 39: while (*str++)
                                     92 ;	genAssign
                                     93 ;	genAssignLit
      00000F A9 00            [ 2]   94 	lda	#0x00
      000011 9D 03 01         [ 5]   95 	sta	0x103,x
      000014 9D 04 01         [ 5]   96 	sta	0x104,x
                                     97 ;	Raw cost for generated ic 21 : (8, 12.000000) count=1.000000
                                     98 ;	genLabel
      000017                         99 00101$:
                                    100 ;	Raw cost for generated ic 4 : (0, 0.000000) count=3.999997
                                    101 ;	genPointerGet
                                    102 ;	  setupDPTR - off=0 remat=(null) savea=0
      000017 BA               [ 2]  103 	tsx
      000018 BD 01 01         [ 5]  104 	lda	0x101,x
      00001B 85*00            [ 3]  105 	sta	*(DPTR+0)
      00001D BD 02 01         [ 5]  106 	lda	0x102,x
      000020 85*01            [ 3]  107 	sta	*(DPTR+1)
      000022 A0 00            [ 2]  108 	ldy	#0x00
      000024 B1*00            [ 6]  109 	lda	[DPTR],y
      000026 A8               [ 2]  110 	tay
                                    111 ;	Raw cost for generated ic 8 : (16, 25.000000) count=3.999997
                                    112 ;	genPlus
                                    113 ;	  genPlusInc
      000027 BD 01 01         [ 5]  114 	lda	0x101,x
      00002A 18               [ 2]  115 	clc
      00002B 69 01            [ 2]  116 	adc	#0x01
      00002D 9D 01 01         [ 5]  117 	sta	0x101,x
      000030 BD 02 01         [ 5]  118 	lda	0x102,x
      000033 69 00            [ 2]  119 	adc	#0x00
      000035 9D 02 01         [ 5]  120 	sta	0x102,x
                                    121 ;	Raw cost for generated ic 6 : (17, 24.000000) count=3.999997
                                    122 ;	genIfx
      000038 C0 00            [ 2]  123 	cpy	#0x00
                                    124 ;	genIfxJump : z
      00003A F0 14            [ 4]  125 	beq	00103$
                                    126 ;	Raw cost for generated ic 9 : (7, 7.600000) count=3.999997
                                    127 ;	../strlen.c: 40: i++ ;
                                    128 ;	genPlus
                                    129 ;	  genPlusInc
      00003C BD 03 01         [ 5]  130 	lda	0x103,x
      00003F 18               [ 2]  131 	clc
      000040 69 01            [ 2]  132 	adc	#0x01
      000042 9D 03 01         [ 5]  133 	sta	0x103,x
      000045 BD 04 01         [ 5]  134 	lda	0x104,x
      000048 69 00            [ 2]  135 	adc	#0x00
      00004A 9D 04 01         [ 5]  136 	sta	0x104,x
                                    137 ;	Raw cost for generated ic 13 : (17, 24.000000) count=2.999997
                                    138 ;	genGoto
      00004D 4Cr17r00         [ 3]  139 	jmp	00101$
                                    140 ;	Raw cost for generated ic 15 : (3, 3.000000) count=2.999997
                                    141 ;	genLabel
      000050                        142 00103$:
                                    143 ;	Raw cost for generated ic 16 : (0, 0.000000) count=0.999999
                                    144 ;	../strlen.c: 42: return i;
                                    145 ;	genRet
      000050 BA               [ 2]  146 	tsx
      000051 BD 04 01         [ 5]  147 	lda	0x104,x
      000054 85*00            [ 3]  148 	sta	*(REGTEMP+0)
      000056 BD 03 01         [ 5]  149 	lda	0x103,x
                                    150 ;	Raw cost for generated ic 17 : (11, 16.000000) count=0.999999
                                    151 ;	genLabel
                                    152 ;	Raw cost for generated ic 18 : (0, 0.000000) count=0.999999
                                    153 ;	../strlen.c: 43: }
                                    154 ;	genEndFunction
                                    155 ;	  adjustStack : cycles stk:22  incdec:18  adc:24
      000059 BA               [ 2]  156 	tsx
      00005A E8               [ 2]  157 	inx
      00005B E8               [ 2]  158 	inx
      00005C E8               [ 2]  159 	inx
      00005D E8               [ 2]  160 	inx
      00005E 9A               [ 2]  161 	txs
      00005F A6*00            [ 3]  162 	ldx	*(REGTEMP+0)
      000061 60               [ 6]  163 	rts
                                    164 ;	Raw cost for generated ic 19 : (11, 24.000000) count=0.999999
                                    165 	.area CODE
                                    166 	.area RODATA
                                    167 	.area XINIT
                                    168 	.area CABS    (ABS)
