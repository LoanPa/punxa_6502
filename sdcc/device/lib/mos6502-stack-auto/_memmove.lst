                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler
                                      3 ; Version 4.5.10 #15691 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _memmove
                                      6 	
                                      7 	.optsdcc -mmos6502
                                      8 
                                      9 ;--------------------------------------------------------
                                     10 ;  Ordering of segments for the linker.
                                     11 ;--------------------------------------------------------
                                     12 	.area ZP      (PAG)
                                     13 	.area OSEG    (PAG, OVR)
                                     14 	.area _CODE
                                     15 	.area GSINIT
                                     16 	.area GSFINAL
                                     17 	.area CODE
                                     18 	.area RODATA
                                     19 	.area XINIT
                                     20 	.area _DATA
                                     21 	.area DATA
                                     22 	.area BSS
                                     23 ;--------------------------------------------------------
                                     24 ; Public variables in this module
                                     25 ;--------------------------------------------------------
                                     26 	.globl _memmove
                                     27 ;--------------------------------------------------------
                                     28 ; ZP ram data
                                     29 ;--------------------------------------------------------
                                     30 	.area ZP      (PAG)
                                     31 ;--------------------------------------------------------
                                     32 ; overlayable items in ram
                                     33 ;--------------------------------------------------------
                                     34 ;--------------------------------------------------------
                                     35 ; uninitialized external ram data
                                     36 ;--------------------------------------------------------
                                     37 	.area BSS
                                     38 ;--------------------------------------------------------
                                     39 ; absolute external ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area DABS    (ABS)
                                     42 ;--------------------------------------------------------
                                     43 ; initialized external ram data
                                     44 ;--------------------------------------------------------
                                     45 	.area DATA
                                     46 ;--------------------------------------------------------
                                     47 ; global & static initialisations
                                     48 ;--------------------------------------------------------
                                     49 	.area _CODE
                                     50 	.area GSINIT
                                     51 	.area GSFINAL
                                     52 	.area GSINIT
                                     53 ;--------------------------------------------------------
                                     54 ; Home
                                     55 ;--------------------------------------------------------
                                     56 	.area _CODE
                                     57 	.area _CODE
                                     58 ;--------------------------------------------------------
                                     59 ; code
                                     60 ;--------------------------------------------------------
                                     61 	.area CODE
                                     62 ;------------------------------------------------------------
                                     63 ;Allocation info for local variables in function 'memmove'
                                     64 ;------------------------------------------------------------
                                     65 ;src           Allocated to stack - sp +17 +2 
                                     66 ;size          Allocated to stack - sp +19 +2 
                                     67 ;dst           Allocated to stack - sp +13 +2 
                                     68 ;c             Allocated to stack - sp +11 +2 
                                     69 ;d             Allocated to registers 
                                     70 ;s             Allocated to stack - sp +9 +2 
                                     71 ;sloc0         Allocated to stack - sp +7 +2 
                                     72 ;sloc1         Allocated to stack - sp +5 +2 
                                     73 ;sloc2         Allocated to stack - sp +3 +2 
                                     74 ;sloc3         Allocated to stack - sp +1 +2 
                                     75 ;------------------------------------------------------------
                                     76 ;	../_memmove.c: 35: void *memmove (void *dst, const void *src, size_t size)
                                     77 ;	genLabel
                                     78 ;	Raw cost for generated ic 0 : (0, 0.000000) count=1.000000
                                     79 ;	-----------------------------------------
                                     80 ;	 function memmove
                                     81 ;	-----------------------------------------
                                     82 ;	Register assignment is optimal.
                                     83 ;	Stack space usage: 14 bytes.
      000000                         84 _memmove:
                                     85 ;	genReceive: size=2
                                     86 ;	pushreg: ofs=1
      000000 85*00            [ 3]   87 	sta	*(REGTEMP+0)
      000002 8A               [ 2]   88 	txa
      000003 48               [ 3]   89 	pha
      000004 A5*00            [ 3]   90 	lda	*(REGTEMP+0)
                                     91 ;	pushreg: ofs=0
      000006 48               [ 3]   92 	pha
                                     93 ;	  adjustStack : cycles stk:36  incdec:28  adc:12
      000007 BA               [ 2]   94 	tsx
      000008 8A               [ 2]   95 	txa
      000009 18               [ 2]   96 	clc
      00000A 69 F4            [ 2]   97 	adc	#0xf4
      00000C AA               [ 2]   98 	tax
      00000D 9A               [ 2]   99 	txs
                                    100 ;	Raw cost for generated ic 1 : (14, 26.000000) count=1.000000
                                    101 ;	skipping generated iCode
                                    102 ;	Raw cost for generated ic 2 : (0, 0.000000) count=1.000000
                                    103 ;	../_memmove.c: 37: size_t c = size;
                                    104 ;	genAssign
                                    105 ;	genCopy
      00000E BD 14 01         [ 5]  106 	lda	0x114,x
      000011 9D 0C 01         [ 5]  107 	sta	0x10c,x
      000014 BD 13 01         [ 5]  108 	lda	0x113,x
      000017 9D 0B 01         [ 5]  109 	sta	0x10b,x
                                    110 ;	Raw cost for generated ic 3 : (12, 18.000000) count=1.000000
                                    111 ;	../_memmove.c: 38: if (c == 0 || dst == src)
                                    112 ;	genIfx
      00001A BD 0C 01         [ 5]  113 	lda	0x10c,x
      00001D 1D 0B 01         [ 5]  114 	ora	0x10b,x
                                    115 ;	genIfxJump : z
      000020 F0 10            [ 4]  116 	beq	00101$
                                    117 ;	Raw cost for generated ic 4 : (11, 13.600000) count=1.000000
                                    118 ;	genCmpEQorNE
      000022 BD 0D 01         [ 5]  119 	lda	0x10d,x
      000025 DD 11 01         [ 5]  120 	cmp	0x111,x
      000028 D0 16            [ 4]  121 	bne	00102$
      00002A BD 0E 01         [ 5]  122 	lda	0x10e,x
      00002D DD 12 01         [ 5]  123 	cmp	0x112,x
      000030 D0 0E            [ 4]  124 	bne	00102$
                                    125 ;	Raw cost for generated ic 7 : (22, 27.200001) count=0.750000
                                    126 ;	skipping generated iCode
                                    127 ;	Raw cost for generated ic 8 : (0, 0.000000) count=0.750000
                                    128 ;	genLabel
      000032                        129 00101$:
                                    130 ;	Raw cost for generated ic 10 : (0, 0.000000) count=0.812500
                                    131 ;	../_memmove.c: 39: return dst;
                                    132 ;	genRet
      000032 BA               [ 2]  133 	tsx
      000033 BD 0E 01         [ 5]  134 	lda	0x10e,x
      000036 85*00            [ 3]  135 	sta	*(REGTEMP+0)
      000038 BD 0D 01         [ 5]  136 	lda	0x10d,x
      00003B A6*00            [ 3]  137 	ldx	*(REGTEMP+0)
      00003D 4Cr8Er01         [ 3]  138 	jmp	00113$
                                    139 ;	Raw cost for generated ic 11 : (14, 19.000000) count=0.812500
                                    140 ;	genLabel
      000040                        141 00102$:
                                    142 ;	Raw cost for generated ic 12 : (0, 0.000000) count=1.000000
                                    143 ;	../_memmove.c: 41: char *d = dst;
                                    144 ;	genCast
                                    145 ;	genCopy
      000040 BA               [ 2]  146 	tsx
      000041 BD 0E 01         [ 5]  147 	lda	0x10e,x
      000044 9D 08 01         [ 5]  148 	sta	0x108,x
      000047 BD 0D 01         [ 5]  149 	lda	0x10d,x
      00004A 9D 07 01         [ 5]  150 	sta	0x107,x
                                    151 ;	Raw cost for generated ic 13 : (13, 20.000000) count=1.000000
                                    152 ;	../_memmove.c: 42: const char *s = src;
                                    153 ;	genCast
                                    154 ;	genCopy
      00004D BD 12 01         [ 5]  155 	lda	0x112,x
      000050 9D 0A 01         [ 5]  156 	sta	0x10a,x
      000053 BD 11 01         [ 5]  157 	lda	0x111,x
      000056 9D 09 01         [ 5]  158 	sta	0x109,x
                                    159 ;	Raw cost for generated ic 15 : (12, 18.000000) count=1.000000
                                    160 ;	../_memmove.c: 43: if (s < d) {
                                    161 ;	genCmp
      000059 38               [ 2]  162 	sec
      00005A FD 07 01         [ 5]  163 	sbc	0x107,x
      00005D BD 0A 01         [ 5]  164 	lda	0x10a,x
      000060 FD 08 01         [ 5]  165 	sbc	0x108,x
      000063 90 03            [ 4]  166 	bcc	00157$
      000065 4Cr01r01         [ 3]  167 	jmp	00119$
      000068                        168 00157$:
                                    169 ;	Raw cost for generated ic 17 : (15, 19.600000) count=1.000000
                                    170 ;	skipping generated iCode
                                    171 ;	Raw cost for generated ic 18 : (0, 0.000000) count=1.000000
                                    172 ;	../_memmove.c: 50: s += c;
                                    173 ;	genPlus
      000068 BD 09 01         [ 5]  174 	lda	0x109,x
      00006B 18               [ 2]  175 	clc
      00006C 7D 0B 01         [ 5]  176 	adc	0x10b,x
      00006F 9D 09 01         [ 5]  177 	sta	0x109,x
      000072 BD 0A 01         [ 5]  178 	lda	0x10a,x
      000075 7D 0C 01         [ 5]  179 	adc	0x10c,x
      000078 9D 0A 01         [ 5]  180 	sta	0x10a,x
                                    181 ;	Raw cost for generated ic 21 : (19, 28.000000) count=0.750000
                                    182 ;	../_memmove.c: 51: d += c;
                                    183 ;	genPlus
      00007B BD 07 01         [ 5]  184 	lda	0x107,x
      00007E 18               [ 2]  185 	clc
      00007F 7D 0B 01         [ 5]  186 	adc	0x10b,x
      000082 9D 05 01         [ 5]  187 	sta	0x105,x
      000085 BD 08 01         [ 5]  188 	lda	0x108,x
      000088 7D 0C 01         [ 5]  189 	adc	0x10c,x
      00008B 9D 06 01         [ 5]  190 	sta	0x106,x
                                    191 ;	Raw cost for generated ic 23 : (19, 28.000000) count=0.750000
                                    192 ;	../_memmove.c: 52: do {
                                    193 ;	genAssign
                                    194 ;	genCopy
      00008E BD 0A 01         [ 5]  195 	lda	0x10a,x
      000091 9D 04 01         [ 5]  196 	sta	0x104,x
      000094 BD 09 01         [ 5]  197 	lda	0x109,x
      000097 9D 03 01         [ 5]  198 	sta	0x103,x
                                    199 ;	Raw cost for generated ic 66 : (12, 18.000000) count=0.750000
                                    200 ;	genAssign
                                    201 ;	genCopy
      00009A BD 0C 01         [ 5]  202 	lda	0x10c,x
      00009D 9D 02 01         [ 5]  203 	sta	0x102,x
      0000A0 BD 0B 01         [ 5]  204 	lda	0x10b,x
      0000A3 9D 01 01         [ 5]  205 	sta	0x101,x
                                    206 ;	Raw cost for generated ic 68 : (12, 18.000000) count=0.750000
                                    207 ;	genLabel
      0000A6                        208 00104$:
                                    209 ;	Raw cost for generated ic 25 : (0, 0.000000) count=2.999997
                                    210 ;	../_memmove.c: 53: *--d = *--s;
                                    211 ;	genMinus
                                    212 ;	  genMinusDec - size=2  icount=1
      0000A6 BA               [ 2]  213 	tsx
      0000A7 BD 05 01         [ 5]  214 	lda	0x105,x
      0000AA 38               [ 2]  215 	sec
      0000AB E9 01            [ 2]  216 	sbc	#0x01
      0000AD 9D 05 01         [ 5]  217 	sta	0x105,x
      0000B0 BD 06 01         [ 5]  218 	lda	0x106,x
      0000B3 E9 00            [ 2]  219 	sbc	#0x00
      0000B5 9D 06 01         [ 5]  220 	sta	0x106,x
                                    221 ;	Raw cost for generated ic 26 : (18, 26.000000) count=2.999997
                                    222 ;	genMinus
                                    223 ;	  genMinusDec - size=2  icount=1
      0000B8 BD 03 01         [ 5]  224 	lda	0x103,x
      0000BB 38               [ 2]  225 	sec
      0000BC E9 01            [ 2]  226 	sbc	#0x01
      0000BE 9D 03 01         [ 5]  227 	sta	0x103,x
      0000C1 BD 04 01         [ 5]  228 	lda	0x104,x
      0000C4 E9 00            [ 2]  229 	sbc	#0x00
      0000C6 9D 04 01         [ 5]  230 	sta	0x104,x
                                    231 ;	Raw cost for generated ic 29 : (17, 24.000000) count=2.999997
                                    232 ;	genPointerGet
                                    233 ;	  setupDPTR - off=0 remat=(null) savea=0
      0000C9 85*01            [ 3]  234 	sta	*(DPTR+1)
      0000CB BD 03 01         [ 5]  235 	lda	0x103,x
      0000CE 85*00            [ 3]  236 	sta	*(DPTR+0)
      0000D0 A0 00            [ 2]  237 	ldy	#0x00
      0000D2 B1*00            [ 6]  238 	lda	[DPTR],y
      0000D4 AA               [ 2]  239 	tax
                                    240 ;	Raw cost for generated ic 32 : (12, 19.000000) count=2.999997
                                    241 ;	genPointerSet
      0000D5 86*00            [ 3]  242 	stx	*(REGTEMP+0)
                                    243 ;	  setupDPTR - off=0 remat=(null) savea=0
      0000D7 BA               [ 2]  244 	tsx
      0000D8 BD 05 01         [ 5]  245 	lda	0x105,x
      0000DB 85*00            [ 3]  246 	sta	*(DPTR+0)
      0000DD BD 06 01         [ 5]  247 	lda	0x106,x
      0000E0 85*01            [ 3]  248 	sta	*(DPTR+1)
      0000E2 A6*00            [ 3]  249 	ldx	*(REGTEMP+0)
      0000E4 8A               [ 2]  250 	txa
      0000E5 91*00            [ 6]  251 	sta	[DPTR],y
                                    252 ;	Raw cost for generated ic 33 : (20, 33.000000) count=2.999997
                                    253 ;	../_memmove.c: 54: } while (--c);
                                    254 ;	genMinus
                                    255 ;	  genMinusDec - size=2  icount=1
      0000E7 BA               [ 2]  256 	tsx
      0000E8 BD 01 01         [ 5]  257 	lda	0x101,x
      0000EB 38               [ 2]  258 	sec
      0000EC E9 01            [ 2]  259 	sbc	#0x01
      0000EE 9D 01 01         [ 5]  260 	sta	0x101,x
      0000F1 BD 02 01         [ 5]  261 	lda	0x102,x
      0000F4 E9 00            [ 2]  262 	sbc	#0x00
      0000F6 9D 02 01         [ 5]  263 	sta	0x102,x
                                    264 ;	Raw cost for generated ic 35 : (18, 26.000000) count=2.999997
                                    265 ;	genIfx
      0000F9 1D 01 01         [ 5]  266 	ora	0x101,x
                                    267 ;	genIfxJump : z
      0000FC D0 A8            [ 4]  268 	bne	00104$
                                    269 ;	Raw cost for generated ic 37 : (8, 9.600000) count=2.999997
                                    270 ;	genGoto
      0000FE 4Cr83r01         [ 3]  271 	jmp	00112$
                                    272 ;	Raw cost for generated ic 40 : (3, 3.000000) count=0.749999
                                    273 ;	../_memmove.c: 59: do {
                                    274 ;	genLabel
      000101                        275 00119$:
                                    276 ;	Raw cost for generated ic 62 : (0, 0.000000) count=0.250000
                                    277 ;	genAssign
                                    278 ;	genCopy
      000101 BA               [ 2]  279 	tsx
      000102 BD 0A 01         [ 5]  280 	lda	0x10a,x
      000105 9D 02 01         [ 5]  281 	sta	0x102,x
      000108 BD 09 01         [ 5]  282 	lda	0x109,x
      00010B 9D 01 01         [ 5]  283 	sta	0x101,x
                                    284 ;	Raw cost for generated ic 70 : (13, 20.000000) count=0.250000
                                    285 ;	genAssign
                                    286 ;	genCopy
      00010E BD 08 01         [ 5]  287 	lda	0x108,x
      000111 9D 04 01         [ 5]  288 	sta	0x104,x
      000114 BD 07 01         [ 5]  289 	lda	0x107,x
      000117 9D 03 01         [ 5]  290 	sta	0x103,x
                                    291 ;	Raw cost for generated ic 73 : (12, 18.000000) count=0.250000
                                    292 ;	genAssign
                                    293 ;	genCopy
      00011A BD 0C 01         [ 5]  294 	lda	0x10c,x
      00011D 9D 06 01         [ 5]  295 	sta	0x106,x
      000120 BD 0B 01         [ 5]  296 	lda	0x10b,x
      000123 9D 05 01         [ 5]  297 	sta	0x105,x
                                    298 ;	Raw cost for generated ic 75 : (12, 18.000000) count=0.250000
                                    299 ;	genLabel
      000126                        300 00107$:
                                    301 ;	Raw cost for generated ic 42 : (0, 0.000000) count=0.999968
                                    302 ;	../_memmove.c: 60: *d++ = *s++;
                                    303 ;	genPointerGet
                                    304 ;	  setupDPTR - off=0 remat=(null) savea=0
      000126 BA               [ 2]  305 	tsx
      000127 BD 01 01         [ 5]  306 	lda	0x101,x
      00012A 85*00            [ 3]  307 	sta	*(DPTR+0)
      00012C BD 02 01         [ 5]  308 	lda	0x102,x
      00012F 85*01            [ 3]  309 	sta	*(DPTR+1)
      000131 A0 00            [ 2]  310 	ldy	#0x00
      000133 B1*00            [ 6]  311 	lda	[DPTR],y
      000135 A8               [ 2]  312 	tay
                                    313 ;	Raw cost for generated ic 49 : (16, 25.000000) count=0.999968
                                    314 ;	genPlus
                                    315 ;	  genPlusInc
      000136 BD 01 01         [ 5]  316 	lda	0x101,x
      000139 18               [ 2]  317 	clc
      00013A 69 01            [ 2]  318 	adc	#0x01
      00013C 9D 01 01         [ 5]  319 	sta	0x101,x
      00013F BD 02 01         [ 5]  320 	lda	0x102,x
      000142 69 00            [ 2]  321 	adc	#0x00
      000144 9D 02 01         [ 5]  322 	sta	0x102,x
                                    323 ;	Raw cost for generated ic 47 : (17, 24.000000) count=0.999968
                                    324 ;	genPointerSet
      000147 84*00            [ 3]  325 	sty	*(REGTEMP+0)
                                    326 ;	  setupDPTR - off=0 remat=(null) savea=0
      000149 BD 03 01         [ 5]  327 	lda	0x103,x
      00014C 85*00            [ 3]  328 	sta	*(DPTR+0)
      00014E BD 04 01         [ 5]  329 	lda	0x104,x
      000151 85*01            [ 3]  330 	sta	*(DPTR+1)
      000153 A4*00            [ 3]  331 	ldy	*(REGTEMP+0)
      000155 98               [ 2]  332 	tya
      000156 A0 00            [ 2]  333 	ldy	#0x00
      000158 91*00            [ 6]  334 	sta	[DPTR],y
      00015A A4*00            [ 3]  335 	ldy	*(REGTEMP+0)
                                    336 ;	Raw cost for generated ic 50 : (21, 33.000000) count=0.999968
                                    337 ;	genPlus
                                    338 ;	  genPlusInc
      00015C BD 03 01         [ 5]  339 	lda	0x103,x
      00015F 18               [ 2]  340 	clc
      000160 69 01            [ 2]  341 	adc	#0x01
      000162 9D 03 01         [ 5]  342 	sta	0x103,x
      000165 BD 04 01         [ 5]  343 	lda	0x104,x
      000168 69 00            [ 2]  344 	adc	#0x00
      00016A 9D 04 01         [ 5]  345 	sta	0x104,x
                                    346 ;	Raw cost for generated ic 44 : (17, 24.000000) count=0.999968
                                    347 ;	../_memmove.c: 61: } while (--c);
                                    348 ;	genMinus
                                    349 ;	  genMinusDec - size=2  icount=1
      00016D BD 05 01         [ 5]  350 	lda	0x105,x
      000170 38               [ 2]  351 	sec
      000171 E9 01            [ 2]  352 	sbc	#0x01
      000173 9D 05 01         [ 5]  353 	sta	0x105,x
      000176 BD 06 01         [ 5]  354 	lda	0x106,x
      000179 E9 00            [ 2]  355 	sbc	#0x00
      00017B 9D 06 01         [ 5]  356 	sta	0x106,x
                                    357 ;	Raw cost for generated ic 52 : (17, 24.000000) count=0.999968
                                    358 ;	genIfx
      00017E 1D 05 01         [ 5]  359 	ora	0x105,x
                                    360 ;	genIfxJump : z
      000181 D0 A3            [ 4]  361 	bne	00107$
                                    362 ;	Raw cost for generated ic 54 : (8, 9.600000) count=0.999968
                                    363 ;	genLabel
      000183                        364 00112$:
                                    365 ;	Raw cost for generated ic 57 : (0, 0.000000) count=0.999991
                                    366 ;	../_memmove.c: 65: return dst;
                                    367 ;	genRet
      000183 BA               [ 2]  368 	tsx
      000184 BD 0E 01         [ 5]  369 	lda	0x10e,x
      000187 85*00            [ 3]  370 	sta	*(REGTEMP+0)
      000189 BD 0D 01         [ 5]  371 	lda	0x10d,x
      00018C A6*00            [ 3]  372 	ldx	*(REGTEMP+0)
                                    373 ;	Raw cost for generated ic 58 : (11, 16.000000) count=0.999991
                                    374 ;	genLabel
      00018E                        375 00113$:
                                    376 ;	Raw cost for generated ic 59 : (0, 0.000000) count=0.999991
                                    377 ;	../_memmove.c: 66: }
                                    378 ;	genEndFunction
                                    379 ;	  adjustStack : cycles stk:62  incdec:38  adc:24
      00018E 86*00            [ 3]  380 	stx	*(REGTEMP+0)
      000190 85*01            [ 3]  381 	sta	*(REGTEMP+1)
      000192 BA               [ 2]  382 	tsx
      000193 8A               [ 2]  383 	txa
      000194 18               [ 2]  384 	clc
      000195 69 0E            [ 2]  385 	adc	#0x0e
      000197 AA               [ 2]  386 	tax
      000198 9A               [ 2]  387 	txs
      000199 A5*01            [ 3]  388 	lda	*(REGTEMP+1)
      00019B A6*00            [ 3]  389 	ldx	*(REGTEMP+0)
      00019D 60               [ 6]  390 	rts
                                    391 ;	Raw cost for generated ic 60 : (16, 30.000000) count=0.999991
                                    392 	.area CODE
                                    393 	.area RODATA
                                    394 	.area XINIT
                                    395 	.area CABS    (ABS)
