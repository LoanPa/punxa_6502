                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler
                                      3 ; Version 4.5.10 #15691 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module mbrtoc32
                                      6 	
                                      7 	.optsdcc -mmos6502
                                      8 
                                      9 ;--------------------------------------------------------
                                     10 ;  Ordering of segments for the linker.
                                     11 ;--------------------------------------------------------
                                     12 	.area ZP      (PAG)
                                     13 	.area OSEG    (PAG, OVR)
                                     14 	.area _CODE
                                     15 	.area GSINIT
                                     16 	.area GSFINAL
                                     17 	.area CODE
                                     18 	.area RODATA
                                     19 	.area XINIT
                                     20 	.area _DATA
                                     21 	.area DATA
                                     22 	.area BSS
                                     23 ;--------------------------------------------------------
                                     24 ; Public variables in this module
                                     25 ;--------------------------------------------------------
                                     26 	.globl _mbrtowc
                                     27 	.globl _mbrtoc32
                                     28 ;--------------------------------------------------------
                                     29 ; ZP ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area ZP      (PAG)
                                     32 ;--------------------------------------------------------
                                     33 ; overlayable items in ram
                                     34 ;--------------------------------------------------------
                                     35 ;--------------------------------------------------------
                                     36 ; uninitialized external ram data
                                     37 ;--------------------------------------------------------
                                     38 	.area BSS
      000000                         39 _mbrtoc32_sps_10000_22:
      000000                         40 	.ds 3
                                     41 ;--------------------------------------------------------
                                     42 ; absolute external ram data
                                     43 ;--------------------------------------------------------
                                     44 	.area DABS    (ABS)
                                     45 ;--------------------------------------------------------
                                     46 ; initialized external ram data
                                     47 ;--------------------------------------------------------
                                     48 	.area DATA
                                     49 ;--------------------------------------------------------
                                     50 ; global & static initialisations
                                     51 ;--------------------------------------------------------
                                     52 	.area _CODE
                                     53 	.area GSINIT
                                     54 	.area GSFINAL
                                     55 	.area GSINIT
                                     56 ;--------------------------------------------------------
                                     57 ; Home
                                     58 ;--------------------------------------------------------
                                     59 	.area _CODE
                                     60 	.area _CODE
                                     61 ;--------------------------------------------------------
                                     62 ; code
                                     63 ;--------------------------------------------------------
                                     64 	.area CODE
                                     65 ;------------------------------------------------------------
                                     66 ;Allocation info for local variables in function 'mbrtoc32'
                                     67 ;------------------------------------------------------------
                                     68 ;s             Allocated to stack - sp +11 +2 
                                     69 ;n             Allocated to stack - sp +13 +2 
                                     70 ;ps            Allocated to stack - sp +15 +2 
                                     71 ;pc32          Allocated to stack - sp +7 +2 
                                     72 ;wc            Allocated to stack - sp +1 +4 
                                     73 ;ret           Allocated to registers a x 
                                     74 ;sloc0         Allocated to stack - sp +5 +2 
                                     75 ;sps           Allocated with name '_mbrtoc32_sps_10000_22'
                                     76 ;------------------------------------------------------------
                                     77 ;	../mbrtoc32.c: 34: size_t mbrtoc32(char32_t *restrict pc32, const char *restrict s, size_t n, mbstate_t *restrict ps)
                                     78 ;	genLabel
                                     79 ;	Raw cost for generated ic 0 : (0, 0.000000) count=1.000000
                                     80 ;	-----------------------------------------
                                     81 ;	 function mbrtoc32
                                     82 ;	-----------------------------------------
                                     83 ;	Register assignment is optimal.
                                     84 ;	Stack space usage: 8 bytes.
      000000                         85 _mbrtoc32:
                                     86 ;	genReceive: size=2
                                     87 ;	pushreg: ofs=1
      000000 85*00            [ 3]   88 	sta	*(REGTEMP+0)
      000002 8A               [ 2]   89 	txa
      000003 48               [ 3]   90 	pha
      000004 A5*00            [ 3]   91 	lda	*(REGTEMP+0)
                                     92 ;	pushreg: ofs=0
      000006 48               [ 3]   93 	pha
                                     94 ;	  adjustStack : cycles stk:18  incdec:16  adc:12
      000007 BA               [ 2]   95 	tsx
      000008 8A               [ 2]   96 	txa
      000009 18               [ 2]   97 	clc
      00000A 69 FA            [ 2]   98 	adc	#0xfa
      00000C AA               [ 2]   99 	tax
      00000D 9A               [ 2]  100 	txs
                                    101 ;	Raw cost for generated ic 1 : (14, 26.000000) count=1.000000
                                    102 ;	skipping generated iCode
                                    103 ;	Raw cost for generated ic 2 : (0, 0.000000) count=1.000000
                                    104 ;	../mbrtoc32.c: 40: if(!ps)
                                    105 ;	genIfx
      00000E BD 10 01         [ 5]  106 	lda	0x110,x
      000011 1D 0F 01         [ 5]  107 	ora	0x10f,x
                                    108 ;	genIfxJump : z
      000014 D0 0A            [ 4]  109 	bne	00102$
                                    110 ;	Raw cost for generated ic 3 : (11, 13.600000) count=1.000000
                                    111 ;	../mbrtoc32.c: 41: ps = &sps;
                                    112 ;	skipping iCode since result will be rematerialized
                                    113 ;	Raw cost for generated ic 6 : (0, 0.000000) count=0.750000
                                    114 ;	genCast
                                    115 ;	genCopy
      000016 A9s00            [ 2]  116 	lda	#>_mbrtoc32_sps_10000_22
      000018 9D 10 01         [ 5]  117 	sta	0x110,x
      00001B A9r00            [ 2]  118 	lda	#_mbrtoc32_sps_10000_22
      00001D 9D 0F 01         [ 5]  119 	sta	0x10f,x
                                    120 ;	Raw cost for generated ic 7 : (10, 14.000000) count=0.750000
                                    121 ;	genLabel
      000020                        122 00102$:
                                    123 ;	Raw cost for generated ic 9 : (0, 0.000000) count=1.000000
                                    124 ;	../mbrtoc32.c: 43: if(!pc32)
                                    125 ;	genIfx
      000020 BA               [ 2]  126 	tsx
      000021 BD 08 01         [ 5]  127 	lda	0x108,x
      000024 1D 07 01         [ 5]  128 	ora	0x107,x
                                    129 ;	genIfxJump : z
      000027 D0 2D            [ 4]  130 	bne	00104$
                                    131 ;	Raw cost for generated ic 10 : (12, 15.600000) count=1.000000
                                    132 ;	../mbrtoc32.c: 44: return(mbrtowc(0, s, n, ps));
                                    133 ;	genIpush
      000029 BD 10 01         [ 5]  134 	lda	0x110,x
      00002C 48               [ 3]  135 	pha
      00002D BD 0F 01         [ 5]  136 	lda	0x10f,x
      000030 48               [ 3]  137 	pha
                                    138 ;	Raw cost for generated ic 13 : (8, 14.000000) count=0.750000
                                    139 ;	genIpush
      000031 BD 0E 01         [ 5]  140 	lda	0x10e,x
      000034 48               [ 3]  141 	pha
      000035 BD 0D 01         [ 5]  142 	lda	0x10d,x
      000038 48               [ 3]  143 	pha
                                    144 ;	Raw cost for generated ic 14 : (8, 14.000000) count=0.750000
                                    145 ;	genIpush
      000039 BD 0C 01         [ 5]  146 	lda	0x10c,x
      00003C 48               [ 3]  147 	pha
      00003D BD 0B 01         [ 5]  148 	lda	0x10b,x
      000040 48               [ 3]  149 	pha
                                    150 ;	Raw cost for generated ic 15 : (8, 14.000000) count=0.750000
                                    151 ;	Raw cost for generated ic 16 : (0, 0.000000) count=0.750000
                                    152 ;	genCall
                                    153 ;	genSend
      000041 A2 00            [ 2]  154 	ldx	#0x00
      000043 8A               [ 2]  155 	txa
      000044 20r00r00         [ 6]  156 	jsr	_mbrtowc
                                    157 ;	assignResultValue
                                    158 ;	  adjustStack : cycles stk:30  incdec:22  adc:24
      000047 86*00            [ 3]  159 	stx	*(REGTEMP+0)
      000049 BA               [ 2]  160 	tsx
      00004A E8               [ 2]  161 	inx
      00004B E8               [ 2]  162 	inx
      00004C E8               [ 2]  163 	inx
      00004D E8               [ 2]  164 	inx
      00004E E8               [ 2]  165 	inx
      00004F E8               [ 2]  166 	inx
      000050 9A               [ 2]  167 	txs
      000051 A6*00            [ 3]  168 	ldx	*(REGTEMP+0)
                                    169 ;	Raw cost for generated ic 17 : (18, 32.000000) count=0.750000
                                    170 ;	genRet
      000053 4CrCEr00         [ 3]  171 	jmp	00107$
                                    172 ;	Raw cost for generated ic 18 : (3, 3.000000) count=0.750000
                                    173 ;	genLabel
      000056                        174 00104$:
                                    175 ;	Raw cost for generated ic 19 : (0, 0.000000) count=1.000000
                                    176 ;	../mbrtoc32.c: 46: ret = mbrtowc(&wc, s, n, ps);
                                    177 ;	genAddrOf
      000056 BA               [ 2]  178 	tsx
      000057 E8               [ 2]  179 	inx
      000058 8A               [ 2]  180 	txa
      000059 9D 04 01         [ 5]  181 	sta	0x104,x
      00005C A9 01            [ 2]  182 	lda	#0x01
      00005E 9D 05 01         [ 5]  183 	sta	0x105,x
                                    184 ;	Raw cost for generated ic 20 : (11, 18.000000) count=1.000000
                                    185 ;	genCast
                                    186 ;	genCopy
                                    187 ;	Raw cost for generated ic 21 : (0, 0.000000) count=1.000000
                                    188 ;	genIpush
      000061 BD 0F 01         [ 5]  189 	lda	0x10f,x
      000064 48               [ 3]  190 	pha
      000065 BD 0E 01         [ 5]  191 	lda	0x10e,x
      000068 48               [ 3]  192 	pha
                                    193 ;	Raw cost for generated ic 22 : (8, 14.000000) count=1.000000
                                    194 ;	genIpush
      000069 BD 0D 01         [ 5]  195 	lda	0x10d,x
      00006C 48               [ 3]  196 	pha
      00006D BD 0C 01         [ 5]  197 	lda	0x10c,x
      000070 48               [ 3]  198 	pha
                                    199 ;	Raw cost for generated ic 23 : (8, 14.000000) count=1.000000
                                    200 ;	genIpush
      000071 BD 0B 01         [ 5]  201 	lda	0x10b,x
      000074 48               [ 3]  202 	pha
      000075 BD 0A 01         [ 5]  203 	lda	0x10a,x
      000078 48               [ 3]  204 	pha
                                    205 ;	Raw cost for generated ic 24 : (8, 14.000000) count=1.000000
                                    206 ;	Raw cost for generated ic 25 : (0, 0.000000) count=1.000000
                                    207 ;	genCall
                                    208 ;	genSend
      000079 BD 04 01         [ 5]  209 	lda	0x104,x
      00007C A8               [ 2]  210 	tay
      00007D BD 05 01         [ 5]  211 	lda	0x105,x
      000080 AA               [ 2]  212 	tax
      000081 98               [ 2]  213 	tya
      000082 20r00r00         [ 6]  214 	jsr	_mbrtowc
                                    215 ;	assignResultValue
                                    216 ;	  adjustStack : cycles stk:30  incdec:22  adc:24
      000085 86*00            [ 3]  217 	stx	*(REGTEMP+0)
      000087 BA               [ 2]  218 	tsx
      000088 E8               [ 2]  219 	inx
      000089 E8               [ 2]  220 	inx
      00008A E8               [ 2]  221 	inx
      00008B E8               [ 2]  222 	inx
      00008C E8               [ 2]  223 	inx
      00008D E8               [ 2]  224 	inx
      00008E 9A               [ 2]  225 	txs
      00008F A6*00            [ 3]  226 	ldx	*(REGTEMP+0)
                                    227 ;	Raw cost for generated ic 26 : (24, 42.000000) count=1.000000
                                    228 ;	../mbrtoc32.c: 48: if(ret <= MB_LEN_MAX)
                                    229 ;	genCmp
      000091 85*00            [ 3]  230 	sta	*(REGTEMP+0)
      000093 A9 04            [ 2]  231 	lda	#0x04
      000095 38               [ 2]  232 	sec
      000096 E5*00            [ 3]  233 	sbc	*(REGTEMP+0)
      000098 A9 00            [ 2]  234 	lda	#0x00
      00009A 86*01            [ 3]  235 	stx	*(REGTEMP+1)
      00009C E5*01            [ 3]  236 	sbc	*(REGTEMP+1)
      00009E A5*00            [ 3]  237 	lda	*(REGTEMP+0)
      0000A0 90 2C            [ 4]  238 	bcc	00106$
                                    239 ;	Raw cost for generated ic 28 : (20, 26.600000) count=1.000000
                                    240 ;	skipping generated iCode
                                    241 ;	Raw cost for generated ic 29 : (0, 0.000000) count=1.000000
                                    242 ;	../mbrtoc32.c: 49: *pc32 = wc;
                                    243 ;	genPointerSet
      0000A2 85*00            [ 3]  244 	sta	*(REGTEMP+0)
      0000A4 86*01            [ 3]  245 	stx	*(REGTEMP+1)
                                    246 ;	  setupDPTR - off=0 remat=(null) savea=0
      0000A6 BA               [ 2]  247 	tsx
      0000A7 BD 07 01         [ 5]  248 	lda	0x107,x
      0000AA 85*00            [ 3]  249 	sta	*(DPTR+0)
      0000AC BD 08 01         [ 5]  250 	lda	0x108,x
      0000AF 85*01            [ 3]  251 	sta	*(DPTR+1)
      0000B1 BD 01 01         [ 5]  252 	lda	0x101,x
      0000B4 A0 00            [ 2]  253 	ldy	#0x00
      0000B6 91*00            [ 6]  254 	sta	[DPTR],y
      0000B8 BD 02 01         [ 5]  255 	lda	0x102,x
      0000BB C8               [ 2]  256 	iny
      0000BC 91*00            [ 6]  257 	sta	[DPTR],y
      0000BE BD 03 01         [ 5]  258 	lda	0x103,x
      0000C1 C8               [ 2]  259 	iny
      0000C2 91*00            [ 6]  260 	sta	[DPTR],y
      0000C4 BD 04 01         [ 5]  261 	lda	0x104,x
      0000C7 C8               [ 2]  262 	iny
      0000C8 91*00            [ 6]  263 	sta	[DPTR],y
      0000CA A6*01            [ 3]  264 	ldx	*(REGTEMP+1)
      0000CC A5*00            [ 3]  265 	lda	*(REGTEMP+0)
                                    266 ;	Raw cost for generated ic 33 : (44, 76.000000) count=0.750000
                                    267 ;	genLabel
      0000CE                        268 00106$:
                                    269 ;	Raw cost for generated ic 34 : (0, 0.000000) count=1.000000
                                    270 ;	../mbrtoc32.c: 51: return(ret);
                                    271 ;	genRet
                                    272 ;	Raw cost for generated ic 35 : (0, 0.000000) count=1.000000
                                    273 ;	genLabel
      0000CE                        274 00107$:
                                    275 ;	Raw cost for generated ic 36 : (0, 0.000000) count=1.000000
                                    276 ;	../mbrtoc32.c: 52: }
                                    277 ;	genEndFunction
                                    278 ;	  adjustStack : cycles stk:38  incdec:26  adc:24
      0000CE 86*00            [ 3]  279 	stx	*(REGTEMP+0)
      0000D0 85*01            [ 3]  280 	sta	*(REGTEMP+1)
      0000D2 BA               [ 2]  281 	tsx
      0000D3 8A               [ 2]  282 	txa
      0000D4 18               [ 2]  283 	clc
      0000D5 69 08            [ 2]  284 	adc	#0x08
      0000D7 AA               [ 2]  285 	tax
      0000D8 9A               [ 2]  286 	txs
      0000D9 A5*01            [ 3]  287 	lda	*(REGTEMP+1)
      0000DB A6*00            [ 3]  288 	ldx	*(REGTEMP+0)
      0000DD 60               [ 6]  289 	rts
                                    290 ;	Raw cost for generated ic 37 : (16, 30.000000) count=1.000000
                                    291 	.area CODE
                                    292 	.area RODATA
                                    293 	.area XINIT
                                    294 	.area CABS    (ABS)
