                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler
                                      3 ; Version 4.5.10 #15691 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module memset_explicit
                                      6 	
                                      7 	.optsdcc -mmos6502
                                      8 
                                      9 ;--------------------------------------------------------
                                     10 ;  Ordering of segments for the linker.
                                     11 ;--------------------------------------------------------
                                     12 	.area ZP      (PAG)
                                     13 	.area OSEG    (PAG, OVR)
                                     14 	.area _CODE
                                     15 	.area GSINIT
                                     16 	.area GSFINAL
                                     17 	.area CODE
                                     18 	.area RODATA
                                     19 	.area XINIT
                                     20 	.area _DATA
                                     21 	.area DATA
                                     22 	.area BSS
                                     23 ;--------------------------------------------------------
                                     24 ; Public variables in this module
                                     25 ;--------------------------------------------------------
                                     26 	.globl _memset_explcit
                                     27 	.globl _memset
                                     28 ;--------------------------------------------------------
                                     29 ; ZP ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area ZP      (PAG)
                                     32 ;--------------------------------------------------------
                                     33 ; overlayable items in ram
                                     34 ;--------------------------------------------------------
                                     35 ;--------------------------------------------------------
                                     36 ; uninitialized external ram data
                                     37 ;--------------------------------------------------------
                                     38 	.area BSS
                                     39 ;--------------------------------------------------------
                                     40 ; absolute external ram data
                                     41 ;--------------------------------------------------------
                                     42 	.area DABS    (ABS)
                                     43 ;--------------------------------------------------------
                                     44 ; initialized external ram data
                                     45 ;--------------------------------------------------------
                                     46 	.area DATA
                                     47 ;--------------------------------------------------------
                                     48 ; global & static initialisations
                                     49 ;--------------------------------------------------------
                                     50 	.area _CODE
                                     51 	.area GSINIT
                                     52 	.area GSFINAL
                                     53 	.area GSINIT
                                     54 ;--------------------------------------------------------
                                     55 ; Home
                                     56 ;--------------------------------------------------------
                                     57 	.area _CODE
                                     58 	.area _CODE
                                     59 ;--------------------------------------------------------
                                     60 ; code
                                     61 ;--------------------------------------------------------
                                     62 	.area CODE
                                     63 ;------------------------------------------------------------
                                     64 ;Allocation info for local variables in function 'memset_explcit'
                                     65 ;------------------------------------------------------------
                                     66 ;c             Allocated to stack - sp +5 +2 
                                     67 ;n             Allocated to stack - sp +7 +2 
                                     68 ;s             Allocated to stack - sp +1 +2 
                                     69 ;------------------------------------------------------------
                                     70 ;	../memset_explicit.c: 32: void *memset_explcit (void *s, int c, size_t n)
                                     71 ;	genLabel
                                     72 ;	Raw cost for generated ic 0 : (0, 0.000000) count=1.000000
                                     73 ;	-----------------------------------------
                                     74 ;	 function memset_explcit
                                     75 ;	-----------------------------------------
                                     76 ;	Register assignment is optimal.
                                     77 ;	Stack space usage: 2 bytes.
      000000                         78 _memset_explcit:
                                     79 ;	genReceive: size=2
                                     80 ;	pushreg: ofs=1
      000000 85*00            [ 3]   81 	sta	*(REGTEMP+0)
      000002 8A               [ 2]   82 	txa
      000003 48               [ 3]   83 	pha
      000004 A5*00            [ 3]   84 	lda	*(REGTEMP+0)
                                     85 ;	pushreg: ofs=0
      000006 48               [ 3]   86 	pha
                                     87 ;	Raw cost for generated ic 1 : (7, 14.000000) count=1.000000
                                     88 ;	skipping generated iCode
                                     89 ;	Raw cost for generated ic 2 : (0, 0.000000) count=1.000000
                                     90 ;	../memset_explicit.c: 34: return(memset(s, c, n));
                                     91 ;	genCast
                                     92 ;	genCopy
      000007 BA               [ 2]   93 	tsx
      000008 BD 05 01         [ 5]   94 	lda	0x105,x
      00000B A8               [ 2]   95 	tay
                                     96 ;	Raw cost for generated ic 3 : (5, 8.000000) count=1.000000
                                     97 ;	genIpush
      00000C BD 08 01         [ 5]   98 	lda	0x108,x
      00000F 48               [ 3]   99 	pha
      000010 BD 07 01         [ 5]  100 	lda	0x107,x
      000013 48               [ 3]  101 	pha
                                    102 ;	Raw cost for generated ic 4 : (8, 14.000000) count=1.000000
                                    103 ;	genIpush
      000014 98               [ 2]  104 	tya
      000015 48               [ 3]  105 	pha
                                    106 ;	Raw cost for generated ic 5 : (2, 5.000000) count=1.000000
                                    107 ;	Raw cost for generated ic 6 : (0, 0.000000) count=1.000000
                                    108 ;	genCall
                                    109 ;	genSend
      000016 BD 01 01         [ 5]  110 	lda	0x101,x
      000019 A8               [ 2]  111 	tay
      00001A BD 02 01         [ 5]  112 	lda	0x102,x
      00001D AA               [ 2]  113 	tax
      00001E 98               [ 2]  114 	tya
      00001F 20r00r00         [ 6]  115 	jsr	_memset
                                    116 ;	assignResultValue
                                    117 ;	  adjustStack : cycles stk:18  incdec:16  adc:24
      000022 86*00            [ 3]  118 	stx	*(REGTEMP+0)
      000024 BA               [ 2]  119 	tsx
      000025 E8               [ 2]  120 	inx
      000026 E8               [ 2]  121 	inx
      000027 E8               [ 2]  122 	inx
      000028 9A               [ 2]  123 	txs
      000029 A6*00            [ 3]  124 	ldx	*(REGTEMP+0)
                                    125 ;	Raw cost for generated ic 7 : (21, 36.000000) count=1.000000
                                    126 ;	genRet
                                    127 ;	Raw cost for generated ic 8 : (0, 0.000000) count=1.000000
                                    128 ;	genLabel
                                    129 ;	Raw cost for generated ic 9 : (0, 0.000000) count=1.000000
                                    130 ;	../memset_explicit.c: 35: }
                                    131 ;	genEndFunction
                                    132 ;	  adjustStack : cycles stk:14  incdec:14  adc:24
      00002B 85*00            [ 3]  133 	sta	*(REGTEMP+0)
      00002D 68               [ 4]  134 	pla
      00002E 68               [ 4]  135 	pla
      00002F A5*00            [ 3]  136 	lda	*(REGTEMP+0)
      000031 60               [ 6]  137 	rts
                                    138 ;	Raw cost for generated ic 10 : (7, 20.000000) count=1.000000
                                    139 	.area CODE
                                    140 	.area RODATA
                                    141 	.area XINIT
                                    142 	.area CABS    (ABS)
