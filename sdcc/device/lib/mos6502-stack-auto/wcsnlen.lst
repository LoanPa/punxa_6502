                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler
                                      3 ; Version 4.5.10 #15691 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module wcsnlen
                                      6 	
                                      7 	.optsdcc -mmos6502
                                      8 
                                      9 ;--------------------------------------------------------
                                     10 ;  Ordering of segments for the linker.
                                     11 ;--------------------------------------------------------
                                     12 	.area ZP      (PAG)
                                     13 	.area OSEG    (PAG, OVR)
                                     14 	.area _CODE
                                     15 	.area GSINIT
                                     16 	.area GSFINAL
                                     17 	.area CODE
                                     18 	.area RODATA
                                     19 	.area XINIT
                                     20 	.area _DATA
                                     21 	.area DATA
                                     22 	.area BSS
                                     23 ;--------------------------------------------------------
                                     24 ; Public variables in this module
                                     25 ;--------------------------------------------------------
                                     26 	.globl _wcsnlen
                                     27 ;--------------------------------------------------------
                                     28 ; ZP ram data
                                     29 ;--------------------------------------------------------
                                     30 	.area ZP      (PAG)
                                     31 ;--------------------------------------------------------
                                     32 ; overlayable items in ram
                                     33 ;--------------------------------------------------------
                                     34 ;--------------------------------------------------------
                                     35 ; uninitialized external ram data
                                     36 ;--------------------------------------------------------
                                     37 	.area BSS
                                     38 ;--------------------------------------------------------
                                     39 ; absolute external ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area DABS    (ABS)
                                     42 ;--------------------------------------------------------
                                     43 ; initialized external ram data
                                     44 ;--------------------------------------------------------
                                     45 	.area DATA
                                     46 ;--------------------------------------------------------
                                     47 ; global & static initialisations
                                     48 ;--------------------------------------------------------
                                     49 	.area _CODE
                                     50 	.area GSINIT
                                     51 	.area GSFINAL
                                     52 	.area GSINIT
                                     53 ;--------------------------------------------------------
                                     54 ; Home
                                     55 ;--------------------------------------------------------
                                     56 	.area _CODE
                                     57 	.area _CODE
                                     58 ;--------------------------------------------------------
                                     59 ; code
                                     60 ;--------------------------------------------------------
                                     61 	.area CODE
                                     62 ;------------------------------------------------------------
                                     63 ;Allocation info for local variables in function 'wcsnlen'
                                     64 ;------------------------------------------------------------
                                     65 ;n             Allocated to stack - sp +15 +2 
                                     66 ;s             Allocated to registers 
                                     67 ;i             Allocated to stack - sp +11 +2 
                                     68 ;sloc0         Allocated to stack - sp +9 +2 
                                     69 ;sloc1         Allocated to stack - sp +7 +2 
                                     70 ;sloc2         Allocated to stack - sp +5 +2 
                                     71 ;sloc3         Allocated to stack - sp +1 +4 
                                     72 ;------------------------------------------------------------
                                     73 ;	../wcsnlen.c: 32: size_t wcsnlen (const wchar_t *s, size_t n)
                                     74 ;	genLabel
                                     75 ;	Raw cost for generated ic 0 : (0, 0.000000) count=1.000000
                                     76 ;	-----------------------------------------
                                     77 ;	 function wcsnlen
                                     78 ;	-----------------------------------------
                                     79 ;	Register assignment is optimal.
                                     80 ;	Stack space usage: 12 bytes.
      000000                         81 _wcsnlen:
                                     82 ;	  adjustStack : cycles stk:36  incdec:34  adc:24
      000000 86*00            [ 3]   83 	stx	*(REGTEMP+0)
      000002 85*01            [ 3]   84 	sta	*(REGTEMP+1)
      000004 BA               [ 2]   85 	tsx
      000005 8A               [ 2]   86 	txa
      000006 18               [ 2]   87 	clc
      000007 69 F4            [ 2]   88 	adc	#0xf4
      000009 AA               [ 2]   89 	tax
      00000A 9A               [ 2]   90 	txs
      00000B A5*01            [ 3]   91 	lda	*(REGTEMP+1)
                                     92 ;	Raw cost for generated ic 1 : (15, 24.000000) count=1.000000
                                     93 ;	genReceive
      00000D BA               [ 2]   94 	tsx
      00000E 9D 09 01         [ 5]   95 	sta	0x109,x
      000011 A5*00            [ 3]   96 	lda	*(REGTEMP+0)
      000013 9D 0A 01         [ 5]   97 	sta	0x10a,x
                                     98 ;	Raw cost for generated ic 2 : (11, 18.000000) count=1.000000
                                     99 ;	../wcsnlen.c: 36: while (n-- && *s++)
                                    100 ;	genAssign
                                    101 ;	genAssignLit
      000016 A9 00            [ 2]  102 	lda	#0x00
      000018 9D 0B 01         [ 5]  103 	sta	0x10b,x
      00001B 9D 0C 01         [ 5]  104 	sta	0x10c,x
                                    105 ;	Raw cost for generated ic 30 : (8, 12.000000) count=1.000000
                                    106 ;	genAssign
                                    107 ;	genCopy
      00001E BD 10 01         [ 5]  108 	lda	0x110,x
      000021 9D 08 01         [ 5]  109 	sta	0x108,x
      000024 BD 0F 01         [ 5]  110 	lda	0x10f,x
      000027 9D 07 01         [ 5]  111 	sta	0x107,x
                                    112 ;	Raw cost for generated ic 32 : (12, 18.000000) count=1.000000
                                    113 ;	genLabel
      00002A                        114 00102$:
                                    115 ;	Raw cost for generated ic 4 : (0, 0.000000) count=2.285713
                                    116 ;	genAssign
                                    117 ;	genCopy
      00002A BA               [ 2]  118 	tsx
      00002B BD 08 01         [ 5]  119 	lda	0x108,x
      00002E 9D 06 01         [ 5]  120 	sta	0x106,x
                                    121 ;	Raw cost for generated ic 5 : (13, 20.000000) count=2.285713
                                    122 ;	genMinus
                                    123 ;	  genMinusDec - size=2  icount=1
      000031 BD 07 01         [ 5]  124 	lda	0x107,x
      000034 9D 05 01         [ 5]  125 	sta	0x105,x
      000037 38               [ 2]  126 	sec
      000038 E9 01            [ 2]  127 	sbc	#0x01
      00003A 9D 07 01         [ 5]  128 	sta	0x107,x
      00003D BD 08 01         [ 5]  129 	lda	0x108,x
      000040 E9 00            [ 2]  130 	sbc	#0x00
      000042 9D 08 01         [ 5]  131 	sta	0x108,x
                                    132 ;	Raw cost for generated ic 6 : (17, 24.000000) count=2.285713
                                    133 ;	genIfx
      000045 BD 06 01         [ 5]  134 	lda	0x106,x
      000048 1D 05 01         [ 5]  135 	ora	0x105,x
                                    136 ;	genIfxJump : z
      00004B F0 56            [ 4]  137 	beq	00104$
                                    138 ;	Raw cost for generated ic 8 : (11, 13.600000) count=2.285713
                                    139 ;	genPointerGet
                                    140 ;	  setupDPTR - off=0 remat=(null) savea=0
      00004D BD 09 01         [ 5]  141 	lda	0x109,x
      000050 85*00            [ 3]  142 	sta	*(DPTR+0)
      000052 BD 0A 01         [ 5]  143 	lda	0x10a,x
      000055 85*01            [ 3]  144 	sta	*(DPTR+1)
      000057 A0 00            [ 2]  145 	ldy	#0x00
      000059 B1*00            [ 6]  146 	lda	[DPTR],y
      00005B 9D 01 01         [ 5]  147 	sta	0x101,x
      00005E C8               [ 2]  148 	iny
      00005F B1*00            [ 6]  149 	lda	[DPTR],y
      000061 9D 02 01         [ 5]  150 	sta	0x102,x
      000064 C8               [ 2]  151 	iny
      000065 B1*00            [ 6]  152 	lda	[DPTR],y
      000067 9D 03 01         [ 5]  153 	sta	0x103,x
      00006A C8               [ 2]  154 	iny
      00006B B1*00            [ 6]  155 	lda	[DPTR],y
      00006D 9D 04 01         [ 5]  156 	sta	0x104,x
                                    157 ;	Raw cost for generated ic 14 : (35, 62.000000) count=1.714284
                                    158 ;	genPlus
                                    159 ;	  genPlusInc
      000070 BD 09 01         [ 5]  160 	lda	0x109,x
      000073 18               [ 2]  161 	clc
      000074 69 04            [ 2]  162 	adc	#0x04
      000076 9D 09 01         [ 5]  163 	sta	0x109,x
      000079 BD 0A 01         [ 5]  164 	lda	0x10a,x
      00007C 69 00            [ 2]  165 	adc	#0x00
      00007E 9D 0A 01         [ 5]  166 	sta	0x10a,x
                                    167 ;	Raw cost for generated ic 12 : (17, 24.000000) count=1.714284
                                    168 ;	genIfx
      000081 BD 04 01         [ 5]  169 	lda	0x104,x
      000084 1D 03 01         [ 5]  170 	ora	0x103,x
      000087 1D 02 01         [ 5]  171 	ora	0x102,x
      00008A 1D 01 01         [ 5]  172 	ora	0x101,x
                                    173 ;	genIfxJump : z
      00008D F0 14            [ 4]  174 	beq	00104$
                                    175 ;	Raw cost for generated ic 15 : (17, 21.600000) count=1.714284
                                    176 ;	../wcsnlen.c: 37: i++ ;
                                    177 ;	genPlus
                                    178 ;	  genPlusInc
      00008F BD 0B 01         [ 5]  179 	lda	0x10b,x
      000092 18               [ 2]  180 	clc
      000093 69 01            [ 2]  181 	adc	#0x01
      000095 9D 0B 01         [ 5]  182 	sta	0x10b,x
      000098 BD 0C 01         [ 5]  183 	lda	0x10c,x
      00009B 69 00            [ 2]  184 	adc	#0x00
      00009D 9D 0C 01         [ 5]  185 	sta	0x10c,x
                                    186 ;	Raw cost for generated ic 19 : (17, 24.000000) count=1.285713
                                    187 ;	genGoto
      0000A0 4Cr2Ar00         [ 3]  188 	jmp	00102$
                                    189 ;	Raw cost for generated ic 21 : (3, 3.000000) count=1.285713
                                    190 ;	genLabel
      0000A3                        191 00104$:
                                    192 ;	Raw cost for generated ic 22 : (0, 0.000000) count=0.999999
                                    193 ;	../wcsnlen.c: 39: return i;
                                    194 ;	genRet
      0000A3 BA               [ 2]  195 	tsx
      0000A4 BD 0C 01         [ 5]  196 	lda	0x10c,x
      0000A7 85*00            [ 3]  197 	sta	*(REGTEMP+0)
      0000A9 BD 0B 01         [ 5]  198 	lda	0x10b,x
                                    199 ;	Raw cost for generated ic 23 : (11, 16.000000) count=0.999999
                                    200 ;	genLabel
                                    201 ;	Raw cost for generated ic 24 : (0, 0.000000) count=0.999999
                                    202 ;	../wcsnlen.c: 40: }
                                    203 ;	genEndFunction
                                    204 ;	  adjustStack : cycles stk:54  incdec:34  adc:24
      0000AC A6*00            [ 3]  205 	ldx	*(REGTEMP+0)
      0000AE 85*01            [ 3]  206 	sta	*(REGTEMP+1)
      0000B0 BA               [ 2]  207 	tsx
      0000B1 8A               [ 2]  208 	txa
      0000B2 18               [ 2]  209 	clc
      0000B3 69 0C            [ 2]  210 	adc	#0x0c
      0000B5 AA               [ 2]  211 	tax
      0000B6 9A               [ 2]  212 	txs
      0000B7 A5*01            [ 3]  213 	lda	*(REGTEMP+1)
      0000B9 A6*00            [ 3]  214 	ldx	*(REGTEMP+0)
      0000BB 60               [ 6]  215 	rts
                                    216 ;	Raw cost for generated ic 25 : (16, 30.000000) count=0.999999
                                    217 	.area CODE
                                    218 	.area RODATA
                                    219 	.area XINIT
                                    220 	.area CABS    (ABS)
