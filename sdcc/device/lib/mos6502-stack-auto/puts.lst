                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler
                                      3 ; Version 4.5.10 #15691 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module puts
                                      6 	
                                      7 	.optsdcc -mmos6502
                                      8 
                                      9 ;--------------------------------------------------------
                                     10 ;  Ordering of segments for the linker.
                                     11 ;--------------------------------------------------------
                                     12 	.area ZP      (PAG)
                                     13 	.area OSEG    (PAG, OVR)
                                     14 	.area _CODE
                                     15 	.area GSINIT
                                     16 	.area GSFINAL
                                     17 	.area CODE
                                     18 	.area RODATA
                                     19 	.area XINIT
                                     20 	.area _DATA
                                     21 	.area DATA
                                     22 	.area BSS
                                     23 ;--------------------------------------------------------
                                     24 ; Public variables in this module
                                     25 ;--------------------------------------------------------
                                     26 	.globl _putchar
                                     27 	.globl _puts
                                     28 ;--------------------------------------------------------
                                     29 ; ZP ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area ZP      (PAG)
                                     32 ;--------------------------------------------------------
                                     33 ; overlayable items in ram
                                     34 ;--------------------------------------------------------
                                     35 ;--------------------------------------------------------
                                     36 ; uninitialized external ram data
                                     37 ;--------------------------------------------------------
                                     38 	.area BSS
                                     39 ;--------------------------------------------------------
                                     40 ; absolute external ram data
                                     41 ;--------------------------------------------------------
                                     42 	.area DABS    (ABS)
                                     43 ;--------------------------------------------------------
                                     44 ; initialized external ram data
                                     45 ;--------------------------------------------------------
                                     46 	.area DATA
                                     47 ;--------------------------------------------------------
                                     48 ; global & static initialisations
                                     49 ;--------------------------------------------------------
                                     50 	.area _CODE
                                     51 	.area GSINIT
                                     52 	.area GSFINAL
                                     53 	.area GSINIT
                                     54 ;--------------------------------------------------------
                                     55 ; Home
                                     56 ;--------------------------------------------------------
                                     57 	.area _CODE
                                     58 	.area _CODE
                                     59 ;--------------------------------------------------------
                                     60 ; code
                                     61 ;--------------------------------------------------------
                                     62 	.area CODE
                                     63 ;------------------------------------------------------------
                                     64 ;Allocation info for local variables in function 'puts'
                                     65 ;------------------------------------------------------------
                                     66 ;s             Allocated to registers 
                                     67 ;sloc0         Allocated to stack - sp +1 +2 
                                     68 ;------------------------------------------------------------
                                     69 ;	../puts.c: 31: int puts (const char *s)
                                     70 ;	genLabel
                                     71 ;	Raw cost for generated ic 0 : (0, 0.000000) count=1.000000
                                     72 ;	-----------------------------------------
                                     73 ;	 function puts
                                     74 ;	-----------------------------------------
                                     75 ;	Register assignment is optimal.
                                     76 ;	Stack space usage: 2 bytes.
      000000                         77 _puts:
                                     78 ;	genReceive: size=2
                                     79 ;	pushreg: ofs=1
      000000 85*00            [ 3]   80 	sta	*(REGTEMP+0)
      000002 8A               [ 2]   81 	txa
      000003 48               [ 3]   82 	pha
      000004 A5*00            [ 3]   83 	lda	*(REGTEMP+0)
                                     84 ;	pushreg: ofs=0
      000006 48               [ 3]   85 	pha
                                     86 ;	Raw cost for generated ic 1 : (7, 14.000000) count=1.000000
                                     87 ;	skipping generated iCode
                                     88 ;	Raw cost for generated ic 2 : (0, 0.000000) count=1.000000
                                     89 ;	../puts.c: 33: while (*s)
                                     90 ;	genLabel
      000007                         91 00103$:
                                     92 ;	Raw cost for generated ic 3 : (0, 0.000000) count=2.285713
                                     93 ;	genPointerGet
                                     94 ;	  setupDPTR - off=0 remat=(null) savea=0
      000007 BA               [ 2]   95 	tsx
      000008 BD 01 01         [ 5]   96 	lda	0x101,x
      00000B 85*00            [ 3]   97 	sta	*(DPTR+0)
      00000D BD 02 01         [ 5]   98 	lda	0x102,x
      000010 85*01            [ 3]   99 	sta	*(DPTR+1)
      000012 A0 00            [ 2]  100 	ldy	#0x00
      000014 B1*00            [ 6]  101 	lda	[DPTR],y
      000016 A8               [ 2]  102 	tay
                                    103 ;	Raw cost for generated ic 5 : (16, 25.000000) count=2.285713
                                    104 ;	genIfx
                                    105 ;	genIfxJump : z
      000017 F0 25            [ 4]  106 	beq	00105$
                                    107 ;	Raw cost for generated ic 6 : (5, 5.600000) count=2.285713
                                    108 ;	../puts.c: 34: if (putchar(*s++) == EOF)
                                    109 ;	genAssign
                                    110 ;	genCopy
                                    111 ;	Raw cost for generated ic 12 : (0, 0.000000) count=1.714284
                                    112 ;	genPlus
                                    113 ;	  genPlusInc
      000019 BD 01 01         [ 5]  114 	lda	0x101,x
      00001C 18               [ 2]  115 	clc
      00001D 69 01            [ 2]  116 	adc	#0x01
      00001F 9D 01 01         [ 5]  117 	sta	0x101,x
      000022 BD 02 01         [ 5]  118 	lda	0x102,x
      000025 69 00            [ 2]  119 	adc	#0x00
      000027 9D 02 01         [ 5]  120 	sta	0x102,x
                                    121 ;	Raw cost for generated ic 10 : (17, 24.000000) count=1.714284
                                    122 ;	genCast
                                    123 ;	genCopy
      00002A A2 00            [ 2]  124 	ldx	#0x00
      00002C 98               [ 2]  125 	tya
                                    126 ;	Raw cost for generated ic 13 : (3, 4.000000) count=1.714284
                                    127 ;	Raw cost for generated ic 14 : (0, 0.000000) count=1.714284
                                    128 ;	genCall
                                    129 ;	genSend
      00002D 20r00r00         [ 6]  130 	jsr	_putchar
                                    131 ;	assignResultValue
                                    132 ;	Raw cost for generated ic 15 : (3, 6.000000) count=1.714284
                                    133 ;	genCmpEQorNE
      000030 C9 FF            [ 2]  134 	cmp	#0xff
      000032 D0 D3            [ 4]  135 	bne	00103$
      000034 E0 FF            [ 2]  136 	cpx	#0xff
      000036 D0 CF            [ 4]  137 	bne	00103$
                                    138 ;	Raw cost for generated ic 16 : (14, 15.200001) count=1.714284
                                    139 ;	skipping generated iCode
                                    140 ;	Raw cost for generated ic 17 : (0, 0.000000) count=1.714284
                                    141 ;	../puts.c: 35: return EOF;
                                    142 ;	genRet
      000038 A9 FF            [ 2]  143 	lda	#0xff
      00003A AA               [ 2]  144 	tax
      00003B 4Cr45r00         [ 3]  145 	jmp	00106$
                                    146 ;	Raw cost for generated ic 20 : (6, 7.000000) count=0.428570
                                    147 ;	genLabel
      00003E                        148 00105$:
                                    149 ;	Raw cost for generated ic 23 : (0, 0.000000) count=0.999998
                                    150 ;	../puts.c: 36: return putchar('\n');
                                    151 ;	Raw cost for generated ic 24 : (0, 0.000000) count=0.999998
                                    152 ;	genCall
                                    153 ;	genSend
      00003E A2 00            [ 2]  154 	ldx	#0x00
      000040 A9 0A            [ 2]  155 	lda	#0x0a
      000042 20r00r00         [ 6]  156 	jsr	_putchar
                                    157 ;	assignResultValue
                                    158 ;	Raw cost for generated ic 25 : (7, 10.000000) count=0.999998
                                    159 ;	genRet
                                    160 ;	Raw cost for generated ic 26 : (0, 0.000000) count=0.999998
                                    161 ;	genLabel
      000045                        162 00106$:
                                    163 ;	Raw cost for generated ic 27 : (0, 0.000000) count=0.999998
                                    164 ;	../puts.c: 37: }
                                    165 ;	genEndFunction
                                    166 ;	  adjustStack : cycles stk:14  incdec:14  adc:24
      000045 85*00            [ 3]  167 	sta	*(REGTEMP+0)
      000047 68               [ 4]  168 	pla
      000048 68               [ 4]  169 	pla
      000049 A5*00            [ 3]  170 	lda	*(REGTEMP+0)
      00004B 60               [ 6]  171 	rts
                                    172 ;	Raw cost for generated ic 28 : (7, 20.000000) count=0.999998
                                    173 	.area CODE
                                    174 	.area RODATA
                                    175 	.area XINIT
                                    176 	.area CABS    (ABS)
