                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler
                                      3 ; Version 4.5.10 #15691 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _strncpy
                                      6 	
                                      7 	.optsdcc -mmos6502
                                      8 
                                      9 ;--------------------------------------------------------
                                     10 ;  Ordering of segments for the linker.
                                     11 ;--------------------------------------------------------
                                     12 	.area ZP      (PAG)
                                     13 	.area OSEG    (PAG, OVR)
                                     14 	.area _CODE
                                     15 	.area GSINIT
                                     16 	.area GSFINAL
                                     17 	.area CODE
                                     18 	.area RODATA
                                     19 	.area XINIT
                                     20 	.area _DATA
                                     21 	.area DATA
                                     22 	.area BSS
                                     23 ;--------------------------------------------------------
                                     24 ; Public variables in this module
                                     25 ;--------------------------------------------------------
                                     26 	.globl _strncpy
                                     27 ;--------------------------------------------------------
                                     28 ; ZP ram data
                                     29 ;--------------------------------------------------------
                                     30 	.area ZP      (PAG)
                                     31 ;--------------------------------------------------------
                                     32 ; overlayable items in ram
                                     33 ;--------------------------------------------------------
                                     34 ;--------------------------------------------------------
                                     35 ; uninitialized external ram data
                                     36 ;--------------------------------------------------------
                                     37 	.area BSS
                                     38 ;--------------------------------------------------------
                                     39 ; absolute external ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area DABS    (ABS)
                                     42 ;--------------------------------------------------------
                                     43 ; initialized external ram data
                                     44 ;--------------------------------------------------------
                                     45 	.area DATA
                                     46 ;--------------------------------------------------------
                                     47 ; global & static initialisations
                                     48 ;--------------------------------------------------------
                                     49 	.area _CODE
                                     50 	.area GSINIT
                                     51 	.area GSFINAL
                                     52 	.area GSINIT
                                     53 ;--------------------------------------------------------
                                     54 ; Home
                                     55 ;--------------------------------------------------------
                                     56 	.area _CODE
                                     57 	.area _CODE
                                     58 ;--------------------------------------------------------
                                     59 ; code
                                     60 ;--------------------------------------------------------
                                     61 	.area CODE
                                     62 ;------------------------------------------------------------
                                     63 ;Allocation info for local variables in function 'strncpy'
                                     64 ;------------------------------------------------------------
                                     65 ;s             Allocated to stack - sp +13 +2 
                                     66 ;n             Allocated to stack - sp +15 +2 
                                     67 ;d             Allocated to stack - sp +9 +2 
                                     68 ;d1            Allocated to stack - sp +7 +2 
                                     69 ;sloc0         Allocated to stack - sp +5 +2 
                                     70 ;sloc1         Allocated to stack - sp +3 +2 
                                     71 ;sloc2         Allocated to stack - sp +1 +2 
                                     72 ;------------------------------------------------------------
                                     73 ;	../_strncpy.c: 33: char *strncpy ( char * d, const char * s, size_t n )
                                     74 ;	genLabel
                                     75 ;	Raw cost for generated ic 0 : (0, 0.000000) count=1.000000
                                     76 ;	-----------------------------------------
                                     77 ;	 function strncpy
                                     78 ;	-----------------------------------------
                                     79 ;	Register assignment is optimal.
                                     80 ;	Stack space usage: 10 bytes.
      000000                         81 _strncpy:
                                     82 ;	genReceive: size=2
                                     83 ;	pushreg: ofs=1
      000000 85*00            [ 3]   84 	sta	*(REGTEMP+0)
      000002 8A               [ 2]   85 	txa
      000003 48               [ 3]   86 	pha
      000004 A5*00            [ 3]   87 	lda	*(REGTEMP+0)
                                     88 ;	pushreg: ofs=0
      000006 48               [ 3]   89 	pha
                                     90 ;	  adjustStack : cycles stk:24  incdec:20  adc:12
      000007 BA               [ 2]   91 	tsx
      000008 8A               [ 2]   92 	txa
      000009 18               [ 2]   93 	clc
      00000A 69 F8            [ 2]   94 	adc	#0xf8
      00000C AA               [ 2]   95 	tax
      00000D 9A               [ 2]   96 	txs
                                     97 ;	Raw cost for generated ic 1 : (14, 26.000000) count=1.000000
                                     98 ;	skipping generated iCode
                                     99 ;	Raw cost for generated ic 2 : (0, 0.000000) count=1.000000
                                    100 ;	../_strncpy.c: 35: register char * d1 =  d;
                                    101 ;	genAssign
                                    102 ;	genCopy
      00000E BD 0A 01         [ 5]  103 	lda	0x10a,x
      000011 9D 08 01         [ 5]  104 	sta	0x108,x
      000014 BD 09 01         [ 5]  105 	lda	0x109,x
      000017 9D 07 01         [ 5]  106 	sta	0x107,x
                                    107 ;	Raw cost for generated ic 3 : (12, 18.000000) count=1.000000
                                    108 ;	../_strncpy.c: 37: while ( n && *s )
                                    109 ;	genAssign
                                    110 ;	genCopy
      00001A BD 10 01         [ 5]  111 	lda	0x110,x
      00001D 9D 06 01         [ 5]  112 	sta	0x106,x
      000020 BD 0F 01         [ 5]  113 	lda	0x10f,x
      000023 9D 05 01         [ 5]  114 	sta	0x105,x
                                    115 ;	Raw cost for generated ic 44 : (12, 18.000000) count=1.000000
                                    116 ;	genAssign
                                    117 ;	genCopy
      000026 BD 0E 01         [ 5]  118 	lda	0x10e,x
      000029 9D 04 01         [ 5]  119 	sta	0x104,x
      00002C BD 0D 01         [ 5]  120 	lda	0x10d,x
      00002F 9D 03 01         [ 5]  121 	sta	0x103,x
                                    122 ;	Raw cost for generated ic 47 : (12, 18.000000) count=1.000000
                                    123 ;	genAssign
                                    124 ;	genCopy
      000032 BD 0A 01         [ 5]  125 	lda	0x10a,x
      000035 9D 02 01         [ 5]  126 	sta	0x102,x
      000038 BD 09 01         [ 5]  127 	lda	0x109,x
      00003B 9D 01 01         [ 5]  128 	sta	0x101,x
                                    129 ;	Raw cost for generated ic 49 : (12, 18.000000) count=1.000000
                                    130 ;	genLabel
      00003E                        131 00102$:
                                    132 ;	Raw cost for generated ic 4 : (0, 0.000000) count=2.285713
                                    133 ;	genIfx
      00003E BA               [ 2]  134 	tsx
      00003F BD 06 01         [ 5]  135 	lda	0x106,x
      000042 1D 05 01         [ 5]  136 	ora	0x105,x
                                    137 ;	genIfxJump : z
      000045 F0 5C            [ 4]  138 	beq	00114$
                                    139 ;	Raw cost for generated ic 5 : (12, 15.600000) count=2.285713
                                    140 ;	genPointerGet
                                    141 ;	  setupDPTR - off=0 remat=(null) savea=0
      000047 BD 03 01         [ 5]  142 	lda	0x103,x
      00004A 85*00            [ 3]  143 	sta	*(DPTR+0)
      00004C BD 04 01         [ 5]  144 	lda	0x104,x
      00004F 85*01            [ 3]  145 	sta	*(DPTR+1)
      000051 A0 00            [ 2]  146 	ldy	#0x00
      000053 B1*00            [ 6]  147 	lda	[DPTR],y
      000055 A8               [ 2]  148 	tay
                                    149 ;	Raw cost for generated ic 9 : (15, 23.000000) count=1.714284
                                    150 ;	genIfx
                                    151 ;	genIfxJump : z
      000056 F0 4B            [ 4]  152 	beq	00114$
                                    153 ;	Raw cost for generated ic 10 : (5, 5.600000) count=1.714284
                                    154 ;	../_strncpy.c: 39: n-- ;
                                    155 ;	genMinus
                                    156 ;	  genMinusDec - size=2  icount=1
      000058 BD 05 01         [ 5]  157 	lda	0x105,x
      00005B 38               [ 2]  158 	sec
      00005C E9 01            [ 2]  159 	sbc	#0x01
      00005E 9D 05 01         [ 5]  160 	sta	0x105,x
      000061 BD 06 01         [ 5]  161 	lda	0x106,x
      000064 E9 00            [ 2]  162 	sbc	#0x00
      000066 9D 06 01         [ 5]  163 	sta	0x106,x
                                    164 ;	Raw cost for generated ic 14 : (17, 24.000000) count=1.285713
                                    165 ;	../_strncpy.c: 40: *d++ = *s++ ;
                                    166 ;	genAssign
                                    167 ;	genCopy
                                    168 ;	Raw cost for generated ic 22 : (0, 0.000000) count=1.285713
                                    169 ;	genPlus
                                    170 ;	  genPlusInc
      000069 BD 03 01         [ 5]  171 	lda	0x103,x
      00006C 18               [ 2]  172 	clc
      00006D 69 01            [ 2]  173 	adc	#0x01
      00006F 9D 03 01         [ 5]  174 	sta	0x103,x
      000072 BD 04 01         [ 5]  175 	lda	0x104,x
      000075 69 00            [ 2]  176 	adc	#0x00
      000077 9D 04 01         [ 5]  177 	sta	0x104,x
                                    178 ;	Raw cost for generated ic 20 : (17, 24.000000) count=1.285713
                                    179 ;	genPointerSet
      00007A 84*00            [ 3]  180 	sty	*(REGTEMP+0)
                                    181 ;	  setupDPTR - off=0 remat=(null) savea=0
      00007C BD 01 01         [ 5]  182 	lda	0x101,x
      00007F 85*00            [ 3]  183 	sta	*(DPTR+0)
      000081 BD 02 01         [ 5]  184 	lda	0x102,x
      000084 85*01            [ 3]  185 	sta	*(DPTR+1)
      000086 A4*00            [ 3]  186 	ldy	*(REGTEMP+0)
      000088 98               [ 2]  187 	tya
      000089 A0 00            [ 2]  188 	ldy	#0x00
      00008B 91*00            [ 6]  189 	sta	[DPTR],y
      00008D A4*00            [ 3]  190 	ldy	*(REGTEMP+0)
                                    191 ;	Raw cost for generated ic 23 : (21, 33.000000) count=1.285713
                                    192 ;	genPlus
                                    193 ;	  genPlusInc
      00008F BD 01 01         [ 5]  194 	lda	0x101,x
      000092 18               [ 2]  195 	clc
      000093 69 01            [ 2]  196 	adc	#0x01
      000095 9D 01 01         [ 5]  197 	sta	0x101,x
      000098 BD 02 01         [ 5]  198 	lda	0x102,x
      00009B 69 00            [ 2]  199 	adc	#0x00
      00009D 9D 02 01         [ 5]  200 	sta	0x102,x
                                    201 ;	Raw cost for generated ic 17 : (17, 24.000000) count=1.285713
                                    202 ;	genGoto
      0000A0 4Cr3Er00         [ 3]  203 	jmp	00102$
                                    204 ;	Raw cost for generated ic 24 : (3, 3.000000) count=1.285713
                                    205 ;	../_strncpy.c: 42: while ( n-- )
                                    206 ;	genLabel
      0000A3                        207 00114$:
                                    208 ;	Raw cost for generated ic 43 : (0, 0.000000) count=0.999999
                                    209 ;	genAssign
                                    210 ;	genCopy
      0000A3 BA               [ 2]  211 	tsx
      0000A4 BD 02 01         [ 5]  212 	lda	0x102,x
      0000A7 9D 0A 01         [ 5]  213 	sta	0x10a,x
      0000AA BD 01 01         [ 5]  214 	lda	0x101,x
      0000AD 9D 09 01         [ 5]  215 	sta	0x109,x
                                    216 ;	Raw cost for generated ic 51 : (13, 20.000000) count=0.999999
                                    217 ;	genAssign
                                    218 ;	genCopy
      0000B0 BD 06 01         [ 5]  219 	lda	0x106,x
      0000B3 9D 02 01         [ 5]  220 	sta	0x102,x
      0000B6 BD 05 01         [ 5]  221 	lda	0x105,x
      0000B9 9D 01 01         [ 5]  222 	sta	0x101,x
                                    223 ;	Raw cost for generated ic 54 : (12, 18.000000) count=0.999999
                                    224 ;	genLabel
      0000BC                        225 00105$:
                                    226 ;	Raw cost for generated ic 26 : (0, 0.000000) count=3.999990
                                    227 ;	genAssign
                                    228 ;	genCopy
      0000BC BA               [ 2]  229 	tsx
      0000BD BD 02 01         [ 5]  230 	lda	0x102,x
      0000C0 9D 04 01         [ 5]  231 	sta	0x104,x
                                    232 ;	Raw cost for generated ic 27 : (13, 20.000000) count=3.999990
                                    233 ;	genMinus
                                    234 ;	  genMinusDec - size=2  icount=1
      0000C3 BD 01 01         [ 5]  235 	lda	0x101,x
      0000C6 9D 03 01         [ 5]  236 	sta	0x103,x
      0000C9 38               [ 2]  237 	sec
      0000CA E9 01            [ 2]  238 	sbc	#0x01
      0000CC 9D 01 01         [ 5]  239 	sta	0x101,x
      0000CF BD 02 01         [ 5]  240 	lda	0x102,x
      0000D2 E9 00            [ 2]  241 	sbc	#0x00
      0000D4 9D 02 01         [ 5]  242 	sta	0x102,x
                                    243 ;	Raw cost for generated ic 28 : (17, 24.000000) count=3.999990
                                    244 ;	genIfx
      0000D7 BD 04 01         [ 5]  245 	lda	0x104,x
      0000DA 1D 03 01         [ 5]  246 	ora	0x103,x
                                    247 ;	genIfxJump : z
      0000DD F0 23            [ 4]  248 	beq	00107$
                                    249 ;	Raw cost for generated ic 30 : (11, 13.600000) count=3.999990
                                    250 ;	../_strncpy.c: 44: *d++ = '\0' ;
                                    251 ;	genPointerSet
                                    252 ;	  setupDPTR - off=0 remat=(null) savea=0
      0000DF BD 09 01         [ 5]  253 	lda	0x109,x
      0000E2 85*00            [ 3]  254 	sta	*(DPTR+0)
      0000E4 BD 0A 01         [ 5]  255 	lda	0x10a,x
      0000E7 85*01            [ 3]  256 	sta	*(DPTR+1)
      0000E9 A9 00            [ 2]  257 	lda	#0x00
      0000EB A8               [ 2]  258 	tay
      0000EC 91*00            [ 6]  259 	sta	[DPTR],y
                                    260 ;	Raw cost for generated ic 36 : (15, 24.000000) count=2.999990
                                    261 ;	genPlus
                                    262 ;	  genPlusInc
      0000EE BD 09 01         [ 5]  263 	lda	0x109,x
      0000F1 18               [ 2]  264 	clc
      0000F2 69 01            [ 2]  265 	adc	#0x01
      0000F4 9D 09 01         [ 5]  266 	sta	0x109,x
      0000F7 BD 0A 01         [ 5]  267 	lda	0x10a,x
      0000FA 69 00            [ 2]  268 	adc	#0x00
      0000FC 9D 0A 01         [ 5]  269 	sta	0x10a,x
                                    270 ;	Raw cost for generated ic 34 : (17, 24.000000) count=2.999990
                                    271 ;	genGoto
      0000FF 4CrBCr00         [ 3]  272 	jmp	00105$
                                    273 ;	Raw cost for generated ic 37 : (3, 3.000000) count=2.999990
                                    274 ;	genLabel
      000102                        275 00107$:
                                    276 ;	Raw cost for generated ic 38 : (0, 0.000000) count=0.999997
                                    277 ;	../_strncpy.c: 46: return d1;
                                    278 ;	genRet
      000102 BA               [ 2]  279 	tsx
      000103 BD 08 01         [ 5]  280 	lda	0x108,x
      000106 85*00            [ 3]  281 	sta	*(REGTEMP+0)
      000108 BD 07 01         [ 5]  282 	lda	0x107,x
                                    283 ;	Raw cost for generated ic 39 : (11, 16.000000) count=0.999997
                                    284 ;	genLabel
                                    285 ;	Raw cost for generated ic 40 : (0, 0.000000) count=0.999997
                                    286 ;	../_strncpy.c: 47: }
                                    287 ;	genEndFunction
                                    288 ;	  adjustStack : cycles stk:46  incdec:30  adc:24
      00010B A6*00            [ 3]  289 	ldx	*(REGTEMP+0)
      00010D 85*01            [ 3]  290 	sta	*(REGTEMP+1)
      00010F BA               [ 2]  291 	tsx
      000110 8A               [ 2]  292 	txa
      000111 18               [ 2]  293 	clc
      000112 69 0A            [ 2]  294 	adc	#0x0a
      000114 AA               [ 2]  295 	tax
      000115 9A               [ 2]  296 	txs
      000116 A5*01            [ 3]  297 	lda	*(REGTEMP+1)
      000118 A6*00            [ 3]  298 	ldx	*(REGTEMP+0)
      00011A 60               [ 6]  299 	rts
                                    300 ;	Raw cost for generated ic 41 : (16, 30.000000) count=0.999997
                                    301 	.area CODE
                                    302 	.area RODATA
                                    303 	.area XINIT
                                    304 	.area CABS    (ABS)
