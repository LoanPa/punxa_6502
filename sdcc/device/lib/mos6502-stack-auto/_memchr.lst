                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler
                                      3 ; Version 4.5.10 #15691 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _memchr
                                      6 	
                                      7 	.optsdcc -mmos6502
                                      8 
                                      9 ;--------------------------------------------------------
                                     10 ;  Ordering of segments for the linker.
                                     11 ;--------------------------------------------------------
                                     12 	.area ZP      (PAG)
                                     13 	.area OSEG    (PAG, OVR)
                                     14 	.area _CODE
                                     15 	.area GSINIT
                                     16 	.area GSFINAL
                                     17 	.area CODE
                                     18 	.area RODATA
                                     19 	.area XINIT
                                     20 	.area _DATA
                                     21 	.area DATA
                                     22 	.area BSS
                                     23 ;--------------------------------------------------------
                                     24 ; Public variables in this module
                                     25 ;--------------------------------------------------------
                                     26 	.globl _memchr
                                     27 ;--------------------------------------------------------
                                     28 ; ZP ram data
                                     29 ;--------------------------------------------------------
                                     30 	.area ZP      (PAG)
                                     31 ;--------------------------------------------------------
                                     32 ; overlayable items in ram
                                     33 ;--------------------------------------------------------
                                     34 ;--------------------------------------------------------
                                     35 ; uninitialized external ram data
                                     36 ;--------------------------------------------------------
                                     37 	.area BSS
                                     38 ;--------------------------------------------------------
                                     39 ; absolute external ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area DABS    (ABS)
                                     42 ;--------------------------------------------------------
                                     43 ; initialized external ram data
                                     44 ;--------------------------------------------------------
                                     45 	.area DATA
                                     46 ;--------------------------------------------------------
                                     47 ; global & static initialisations
                                     48 ;--------------------------------------------------------
                                     49 	.area _CODE
                                     50 	.area GSINIT
                                     51 	.area GSFINAL
                                     52 	.area GSINIT
                                     53 ;--------------------------------------------------------
                                     54 ; Home
                                     55 ;--------------------------------------------------------
                                     56 	.area _CODE
                                     57 	.area _CODE
                                     58 ;--------------------------------------------------------
                                     59 ; code
                                     60 ;--------------------------------------------------------
                                     61 	.area CODE
                                     62 ;------------------------------------------------------------
                                     63 ;Allocation info for local variables in function 'memchr'
                                     64 ;------------------------------------------------------------
                                     65 ;c             Allocated to stack - sp +11 +2 
                                     66 ;n             Allocated to stack - sp +13 +2 
                                     67 ;s             Allocated to stack - sp +7 +2 
                                     68 ;p             Allocated to stack - sp +5 +2 
                                     69 ;end           Allocated to stack - sp +3 +2 
                                     70 ;sloc0         Allocated to stack - sp +1 +2 
                                     71 ;------------------------------------------------------------
                                     72 ;	../_memchr.c: 31: void *memchr(const void *s, int c, size_t n)
                                     73 ;	genLabel
                                     74 ;	Raw cost for generated ic 0 : (0, 0.000000) count=1.000000
                                     75 ;	-----------------------------------------
                                     76 ;	 function memchr
                                     77 ;	-----------------------------------------
                                     78 ;	Register assignment is optimal.
                                     79 ;	Stack space usage: 8 bytes.
      000000                         80 _memchr:
                                     81 ;	genReceive: size=2
                                     82 ;	pushreg: ofs=1
      000000 85*00            [ 3]   83 	sta	*(REGTEMP+0)
      000002 8A               [ 2]   84 	txa
      000003 48               [ 3]   85 	pha
      000004 A5*00            [ 3]   86 	lda	*(REGTEMP+0)
                                     87 ;	pushreg: ofs=0
      000006 48               [ 3]   88 	pha
                                     89 ;	  adjustStack : cycles stk:18  incdec:16  adc:12
      000007 BA               [ 2]   90 	tsx
      000008 8A               [ 2]   91 	txa
      000009 18               [ 2]   92 	clc
      00000A 69 FA            [ 2]   93 	adc	#0xfa
      00000C AA               [ 2]   94 	tax
      00000D 9A               [ 2]   95 	txs
                                     96 ;	Raw cost for generated ic 1 : (14, 26.000000) count=1.000000
                                     97 ;	skipping generated iCode
                                     98 ;	Raw cost for generated ic 2 : (0, 0.000000) count=1.000000
                                     99 ;	../_memchr.c: 33: unsigned char *p = (unsigned char *)s;
                                    100 ;	genCast
                                    101 ;	genCopy
      00000E BD 08 01         [ 5]  102 	lda	0x108,x
      000011 9D 06 01         [ 5]  103 	sta	0x106,x
      000014 BD 07 01         [ 5]  104 	lda	0x107,x
      000017 9D 05 01         [ 5]  105 	sta	0x105,x
                                    106 ;	Raw cost for generated ic 3 : (12, 18.000000) count=1.000000
                                    107 ;	../_memchr.c: 34: unsigned char *end = p + n;
                                    108 ;	genPlus
      00001A 18               [ 2]  109 	clc
      00001B 7D 0D 01         [ 5]  110 	adc	0x10d,x
      00001E 9D 03 01         [ 5]  111 	sta	0x103,x
      000021 BD 06 01         [ 5]  112 	lda	0x106,x
      000024 7D 0E 01         [ 5]  113 	adc	0x10e,x
      000027 9D 04 01         [ 5]  114 	sta	0x104,x
                                    115 ;	Raw cost for generated ic 5 : (16, 24.000000) count=1.000000
                                    116 ;	../_memchr.c: 38: return(0);
                                    117 ;	genAssign
                                    118 ;	genCopy
      00002A BD 06 01         [ 5]  119 	lda	0x106,x
      00002D 9D 02 01         [ 5]  120 	sta	0x102,x
      000030 BD 05 01         [ 5]  121 	lda	0x105,x
      000033 9D 01 01         [ 5]  122 	sta	0x101,x
                                    123 ;	Raw cost for generated ic 32 : (12, 18.000000) count=1.000000
                                    124 ;	genLabel
      000036                        125 00105$:
                                    126 ;	Raw cost for generated ic 7 : (0, 0.000000) count=3.999993
                                    127 ;	../_memchr.c: 35: for(; p != end; p++)
                                    128 ;	genCmpEQorNE
      000036 BA               [ 2]  129 	tsx
      000037 BD 01 01         [ 5]  130 	lda	0x101,x
      00003A DD 03 01         [ 5]  131 	cmp	0x103,x
      00003D D0 08            [ 4]  132 	bne	00128$
      00003F BD 02 01         [ 5]  133 	lda	0x102,x
      000042 DD 04 01         [ 5]  134 	cmp	0x104,x
      000045 F0 42            [ 4]  135 	beq	00103$
      000047                        136 00128$:
                                    137 ;	Raw cost for generated ic 8 : (23, 29.200001) count=3.999993
                                    138 ;	skipping generated iCode
                                    139 ;	Raw cost for generated ic 9 : (0, 0.000000) count=3.999993
                                    140 ;	../_memchr.c: 36: if(*p == (unsigned char)c)
                                    141 ;	genPointerGet
                                    142 ;	  setupDPTR - off=0 remat=(null) savea=0
      000047 BD 01 01         [ 5]  143 	lda	0x101,x
      00004A 85*00            [ 3]  144 	sta	*(DPTR+0)
      00004C BD 02 01         [ 5]  145 	lda	0x102,x
      00004F 85*01            [ 3]  146 	sta	*(DPTR+1)
      000051 A0 00            [ 2]  147 	ldy	#0x00
      000053 B1*00            [ 6]  148 	lda	[DPTR],y
      000055 A8               [ 2]  149 	tay
                                    150 ;	Raw cost for generated ic 13 : (15, 23.000000) count=2.999995
                                    151 ;	genCast
                                    152 ;	genCopy
      000056 BD 0B 01         [ 5]  153 	lda	0x10b,x
                                    154 ;	Raw cost for generated ic 14 : (3, 4.000000) count=2.999995
                                    155 ;	genCmpEQorNE
      000059 84*00            [ 3]  156 	sty	*(REGTEMP+0)
      00005B C5*00            [ 3]  157 	cmp	*(REGTEMP+0)
      00005D D0 0C            [ 4]  158 	bne	00106$
                                    159 ;	Raw cost for generated ic 15 : (9, 11.600000) count=2.999995
                                    160 ;	skipping generated iCode
                                    161 ;	Raw cost for generated ic 16 : (0, 0.000000) count=2.999995
                                    162 ;	../_memchr.c: 37: return((void *)p);
                                    163 ;	genCast
                                    164 ;	genCopy
      00005F BD 05 01         [ 5]  165 	lda	0x105,x
      000062 A8               [ 2]  166 	tay
      000063 BD 06 01         [ 5]  167 	lda	0x106,x
      000066 AA               [ 2]  168 	tax
      000067 98               [ 2]  169 	tya
                                    170 ;	Raw cost for generated ic 19 : (9, 14.000000) count=2.249995
                                    171 ;	genRet
      000068 4Cr8Cr00         [ 3]  172 	jmp	00107$
                                    173 ;	Raw cost for generated ic 20 : (3, 3.000000) count=2.249995
                                    174 ;	genLabel
      00006B                        175 00106$:
                                    176 ;	Raw cost for generated ic 22 : (0, 0.000000) count=2.999993
                                    177 ;	../_memchr.c: 35: for(; p != end; p++)
                                    178 ;	genPlus
                                    179 ;	  genPlusInc
      00006B BA               [ 2]  180 	tsx
      00006C BD 01 01         [ 5]  181 	lda	0x101,x
      00006F 18               [ 2]  182 	clc
      000070 69 01            [ 2]  183 	adc	#0x01
      000072 9D 01 01         [ 5]  184 	sta	0x101,x
      000075 BD 02 01         [ 5]  185 	lda	0x102,x
      000078 69 00            [ 2]  186 	adc	#0x00
      00007A 9D 02 01         [ 5]  187 	sta	0x102,x
                                    188 ;	Raw cost for generated ic 24 : (18, 26.000000) count=2.999993
                                    189 ;	genAssign
                                    190 ;	genCopy
      00007D 9D 06 01         [ 5]  191 	sta	0x106,x
      000080 BD 01 01         [ 5]  192 	lda	0x101,x
      000083 9D 05 01         [ 5]  193 	sta	0x105,x
                                    194 ;	Raw cost for generated ic 25 : (9, 14.000000) count=2.999993
                                    195 ;	genGoto
      000086 4Cr36r00         [ 3]  196 	jmp	00105$
                                    197 ;	Raw cost for generated ic 26 : (3, 3.000000) count=2.999993
                                    198 ;	genLabel
      000089                        199 00103$:
                                    200 ;	Raw cost for generated ic 27 : (0, 0.000000) count=0.999997
                                    201 ;	../_memchr.c: 38: return(0);
                                    202 ;	genRet
      000089 A9 00            [ 2]  203 	lda	#0x00
      00008B AA               [ 2]  204 	tax
                                    205 ;	Raw cost for generated ic 28 : (3, 4.000000) count=0.999997
                                    206 ;	genLabel
      00008C                        207 00107$:
                                    208 ;	Raw cost for generated ic 29 : (0, 0.000000) count=0.999997
                                    209 ;	../_memchr.c: 39: }
                                    210 ;	genEndFunction
                                    211 ;	  adjustStack : cycles stk:38  incdec:26  adc:24
      00008C 86*00            [ 3]  212 	stx	*(REGTEMP+0)
      00008E 85*01            [ 3]  213 	sta	*(REGTEMP+1)
      000090 BA               [ 2]  214 	tsx
      000091 8A               [ 2]  215 	txa
      000092 18               [ 2]  216 	clc
      000093 69 08            [ 2]  217 	adc	#0x08
      000095 AA               [ 2]  218 	tax
      000096 9A               [ 2]  219 	txs
      000097 A5*01            [ 3]  220 	lda	*(REGTEMP+1)
      000099 A6*00            [ 3]  221 	ldx	*(REGTEMP+0)
      00009B 60               [ 6]  222 	rts
                                    223 ;	Raw cost for generated ic 30 : (16, 30.000000) count=0.999997
                                    224 	.area CODE
                                    225 	.area RODATA
                                    226 	.area XINIT
                                    227 	.area CABS    (ABS)
