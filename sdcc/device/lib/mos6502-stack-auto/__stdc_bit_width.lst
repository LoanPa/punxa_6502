                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler
                                      3 ; Version 4.5.10 #15691 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module __stdc_bit_width
                                      6 	
                                      7 	.optsdcc -mmos6502
                                      8 
                                      9 ;--------------------------------------------------------
                                     10 ;  Ordering of segments for the linker.
                                     11 ;--------------------------------------------------------
                                     12 	.area ZP      (PAG)
                                     13 	.area OSEG    (PAG, OVR)
                                     14 	.area _CODE
                                     15 	.area GSINIT
                                     16 	.area GSFINAL
                                     17 	.area CODE
                                     18 	.area RODATA
                                     19 	.area XINIT
                                     20 	.area _DATA
                                     21 	.area DATA
                                     22 	.area BSS
                                     23 ;--------------------------------------------------------
                                     24 ; Public variables in this module
                                     25 ;--------------------------------------------------------
                                     26 	.globl ___stdc_bit_width
                                     27 ;--------------------------------------------------------
                                     28 ; ZP ram data
                                     29 ;--------------------------------------------------------
                                     30 	.area ZP      (PAG)
                                     31 ;--------------------------------------------------------
                                     32 ; overlayable items in ram
                                     33 ;--------------------------------------------------------
                                     34 ;--------------------------------------------------------
                                     35 ; uninitialized external ram data
                                     36 ;--------------------------------------------------------
                                     37 	.area BSS
                                     38 ;--------------------------------------------------------
                                     39 ; absolute external ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area DABS    (ABS)
                                     42 ;--------------------------------------------------------
                                     43 ; initialized external ram data
                                     44 ;--------------------------------------------------------
                                     45 	.area DATA
                                     46 ;--------------------------------------------------------
                                     47 ; global & static initialisations
                                     48 ;--------------------------------------------------------
                                     49 	.area _CODE
                                     50 	.area GSINIT
                                     51 	.area GSFINAL
                                     52 	.area GSINIT
                                     53 ;--------------------------------------------------------
                                     54 ; Home
                                     55 ;--------------------------------------------------------
                                     56 	.area _CODE
                                     57 	.area _CODE
                                     58 ;--------------------------------------------------------
                                     59 ; code
                                     60 ;--------------------------------------------------------
                                     61 	.area CODE
                                     62 ;------------------------------------------------------------
                                     63 ;Allocation info for local variables in function '__stdc_bit_width'
                                     64 ;------------------------------------------------------------
                                     65 ;value         Allocated to stack - sp +12 +8 
                                     66 ;width         Allocated to stack - sp +9 +1 
                                     67 ;i             Allocated to registers y 
                                     68 ;sloc0         Allocated to stack - sp +9 +1 
                                     69 ;sloc1         Allocated to stack - sp +1 +8 
                                     70 ;------------------------------------------------------------
                                     71 ;	../__stdc_bit_width.c: 37: unsigned _BitInt(8) __stdc_bit_width(unsigned long long value)
                                     72 ;	genLabel
                                     73 ;	Raw cost for generated ic 0 : (0, 0.000000) count=1.000000
                                     74 ;	-----------------------------------------
                                     75 ;	 function __stdc_bit_width
                                     76 ;	-----------------------------------------
                                     77 ;	Register assignment is optimal.
                                     78 ;	Stack space usage: 9 bytes.
      000000                         79 ___stdc_bit_width:
                                     80 ;	  adjustStack : cycles stk:27  incdec:22  adc:12
      000000 BA               [ 2]   81 	tsx
      000001 8A               [ 2]   82 	txa
      000002 18               [ 2]   83 	clc
      000003 69 F7            [ 2]   84 	adc	#0xf7
      000005 AA               [ 2]   85 	tax
      000006 9A               [ 2]   86 	txs
                                     87 ;	Raw cost for generated ic 1 : (7, 12.000000) count=1.000000
                                     88 ;	../__stdc_bit_width.c: 39: int_fast8_t width = 0;
                                     89 ;	genAssign
                                     90 ;	genAssignLit
      000007 A9 00            [ 2]   91 	lda	#0x00
      000009 9D 09 01         [ 5]   92 	sta	0x109,x
                                     93 ;	Raw cost for generated ic 2 : (5, 7.000000) count=1.000000
                                     94 ;	../__stdc_bit_width.c: 40: for(uint_fast8_t i = 0; i < ULLONG_WIDTH; i++)
                                     95 ;	genAssign
                                     96 ;	genCopy
      00000C A8               [ 2]   97 	tay
                                     98 ;	Raw cost for generated ic 29 : (1, 2.000000) count=1.000000
                                     99 ;	genLabel
      00000D                        100 00105$:
                                    101 ;	Raw cost for generated ic 4 : (0, 0.000000) count=3.999993
                                    102 ;	genCmp
      00000D C0 40            [ 2]  103 	cpy	#0x40
      00000F 90 03            [ 4]  104 	bcc	00128$
      000011 4CrA9r00         [ 3]  105 	jmp	00103$
      000014                        106 00128$:
                                    107 ;	Raw cost for generated ic 5 : (7, 7.600000) count=3.999993
                                    108 ;	skipping generated iCode
                                    109 ;	Raw cost for generated ic 6 : (0, 0.000000) count=3.999993
                                    110 ;	../__stdc_bit_width.c: 41: if(value & (1ull << i))
                                    111 ;	genCast
                                    112 ;	genCopy
      000014 98               [ 2]  113 	tya
                                    114 ;	Raw cost for generated ic 35 : (1, 2.000000) count=2.999995
                                    115 ;	genIpush
      000015 85*00            [ 3]  116 	sta	*(REGTEMP+0)
      000017 98               [ 2]  117 	tya
      000018 48               [ 3]  118 	pha
      000019 A5*00            [ 3]  119 	lda	*(REGTEMP+0)
      00001B 48               [ 3]  120 	pha
                                    121 ;	Raw cost for generated ic 36 : (7, 14.000000) count=2.999995
                                    122 ;	genIpush
      00001C A9 00            [ 2]  123 	lda	#0x00
      00001E 48               [ 3]  124 	pha
      00001F 48               [ 3]  125 	pha
      000020 48               [ 3]  126 	pha
      000021 48               [ 3]  127 	pha
      000022 48               [ 3]  128 	pha
      000023 48               [ 3]  129 	pha
      000024 48               [ 3]  130 	pha
      000025 A9 01            [ 2]  131 	lda	#0x01
      000027 48               [ 3]  132 	pha
                                    133 ;	Raw cost for generated ic 37 : (12, 28.000000) count=2.999995
                                    134 ;	genCall
      000028 20r00r00         [ 6]  135 	jsr	__slulonglong
                                    136 ;	assignResultValue
      00002B 86*00            [ 3]  137 	stx	*(REGTEMP+0)
      00002D BA               [ 2]  138 	tsx
      00002E 9D 0B 01         [ 5]  139 	sta	0x10b,x
      000031 A5*00            [ 3]  140 	lda	*(REGTEMP+0)
      000033 9D 0C 01         [ 5]  141 	sta	0x10c,x
      000036 A5*00            [ 3]  142 	lda	*___SDCC_m6502_ret2
      000038 9D 0D 01         [ 5]  143 	sta	0x10d,x
      00003B A5*00            [ 3]  144 	lda	*___SDCC_m6502_ret3
      00003D 9D 0E 01         [ 5]  145 	sta	0x10e,x
      000040 A5*00            [ 3]  146 	lda	*___SDCC_m6502_ret4
      000042 9D 0F 01         [ 5]  147 	sta	0x10f,x
      000045 A5*00            [ 3]  148 	lda	*___SDCC_m6502_ret5
      000047 9D 10 01         [ 5]  149 	sta	0x110,x
      00004A A5*00            [ 3]  150 	lda	*___SDCC_m6502_ret6
      00004C 9D 11 01         [ 5]  151 	sta	0x111,x
      00004F A5*00            [ 3]  152 	lda	*___SDCC_m6502_ret7
      000051 9D 12 01         [ 5]  153 	sta	0x112,x
                                    154 ;	  adjustStack : cycles stk:36  incdec:20  adc:10
      000054 8A               [ 2]  155 	txa
      000055 18               [ 2]  156 	clc
      000056 69 09            [ 2]  157 	adc	#0x09
      000058 AA               [ 2]  158 	tax
      000059 9A               [ 2]  159 	txs
      00005A 85*00            [ 3]  160 	sta	*(REGTEMP+0)
      00005C 68               [ 4]  161 	pla
      00005D A8               [ 2]  162 	tay
                                    163 ;	Raw cost for generated ic 38 : (56, 94.000000) count=2.999995
                                    164 ;	genAnd
      00005E BD 0D 01         [ 5]  165 	lda	0x10d,x
      000061 3D 02 01         [ 5]  166 	and	0x102,x
      000064 D0 36            [ 4]  167 	bne	00129$
      000066 BD 0E 01         [ 5]  168 	lda	0x10e,x
      000069 3D 03 01         [ 5]  169 	and	0x103,x
      00006C D0 2E            [ 4]  170 	bne	00129$
      00006E BD 0F 01         [ 5]  171 	lda	0x10f,x
      000071 3D 04 01         [ 5]  172 	and	0x104,x
      000074 D0 26            [ 4]  173 	bne	00129$
      000076 BD 10 01         [ 5]  174 	lda	0x110,x
      000079 3D 05 01         [ 5]  175 	and	0x105,x
      00007C D0 1E            [ 4]  176 	bne	00129$
      00007E BD 11 01         [ 5]  177 	lda	0x111,x
      000081 3D 06 01         [ 5]  178 	and	0x106,x
      000084 D0 16            [ 4]  179 	bne	00129$
      000086 BD 12 01         [ 5]  180 	lda	0x112,x
      000089 3D 07 01         [ 5]  181 	and	0x107,x
      00008C D0 0E            [ 4]  182 	bne	00129$
      00008E BD 13 01         [ 5]  183 	lda	0x113,x
      000091 3D 08 01         [ 5]  184 	and	0x108,x
      000094 D0 06            [ 4]  185 	bne	00129$
      000096 BD 14 01         [ 5]  186 	lda	0x114,x
      000099 3D 09 01         [ 5]  187 	and	0x109,x
      00009C                        188 00129$:
                                    189 ;	genIfxJump : z
      00009C F0 07            [ 4]  190 	beq	00106$
                                    191 ;	Raw cost for generated ic 10 : (67, 87.799995) count=2.999995
                                    192 ;	skipping generated iCode
                                    193 ;	Raw cost for generated ic 11 : (0, 0.000000) count=2.999995
                                    194 ;	../__stdc_bit_width.c: 42: width = (i + 1);
                                    195 ;	genCast
                                    196 ;	genCopy
      00009E 98               [ 2]  197 	tya
                                    198 ;	Raw cost for generated ic 14 : (1, 2.000000) count=2.249995
                                    199 ;	genPlus
                                    200 ;	  genPlusInc
      00009F 18               [ 2]  201 	clc
      0000A0 69 01            [ 2]  202 	adc	#0x01
      0000A2 9D 0A 01         [ 5]  203 	sta	0x10a,x
                                    204 ;	Raw cost for generated ic 15 : (6, 9.000000) count=2.249995
                                    205 ;	genLabel
      0000A5                        206 00106$:
                                    207 ;	Raw cost for generated ic 18 : (0, 0.000000) count=2.999993
                                    208 ;	../__stdc_bit_width.c: 40: for(uint_fast8_t i = 0; i < ULLONG_WIDTH; i++)
                                    209 ;	genPlus
                                    210 ;	  genPlusInc
      0000A5 C8               [ 2]  211 	iny
                                    212 ;	Raw cost for generated ic 20 : (1, 2.000000) count=2.999993
                                    213 ;	genGoto
      0000A6 4Cr0Dr00         [ 3]  214 	jmp	00105$
                                    215 ;	Raw cost for generated ic 22 : (3, 3.000000) count=2.999993
                                    216 ;	genLabel
      0000A9                        217 00103$:
                                    218 ;	Raw cost for generated ic 23 : (0, 0.000000) count=0.999997
                                    219 ;	../__stdc_bit_width.c: 43: return width;
                                    220 ;	genCast
                                    221 ;	genCopy
      0000A9 BA               [ 2]  222 	tsx
      0000AA BD 09 01         [ 5]  223 	lda	0x109,x
      0000AD 9D 01 01         [ 5]  224 	sta	0x101,x
                                    225 ;	Raw cost for generated ic 24 : (7, 11.000000) count=0.999997
                                    226 ;	genRet
                                    227 ;	Raw cost for generated ic 25 : (0, 0.000000) count=0.999997
                                    228 ;	genLabel
                                    229 ;	Raw cost for generated ic 26 : (0, 0.000000) count=0.999997
                                    230 ;	../__stdc_bit_width.c: 44: }
                                    231 ;	genEndFunction
                                    232 ;	  adjustStack : cycles stk:42  incdec:28  adc:24
      0000B0 86*00            [ 3]  233 	stx	*(REGTEMP+0)
      0000B2 85*01            [ 3]  234 	sta	*(REGTEMP+1)
      0000B4 BA               [ 2]  235 	tsx
      0000B5 8A               [ 2]  236 	txa
      0000B6 18               [ 2]  237 	clc
      0000B7 69 09            [ 2]  238 	adc	#0x09
      0000B9 AA               [ 2]  239 	tax
      0000BA 9A               [ 2]  240 	txs
      0000BB A5*01            [ 3]  241 	lda	*(REGTEMP+1)
      0000BD A6*00            [ 3]  242 	ldx	*(REGTEMP+0)
      0000BF 60               [ 6]  243 	rts
                                    244 ;	Raw cost for generated ic 27 : (16, 30.000000) count=0.999997
                                    245 	.area CODE
                                    246 	.area RODATA
                                    247 	.area XINIT
                                    248 	.area CABS    (ABS)
