                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler
                                      3 ; Version 4.5.10 #15691 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _strpbrk
                                      6 	
                                      7 	.optsdcc -mmos6502
                                      8 
                                      9 ;--------------------------------------------------------
                                     10 ;  Ordering of segments for the linker.
                                     11 ;--------------------------------------------------------
                                     12 	.area ZP      (PAG)
                                     13 	.area OSEG    (PAG, OVR)
                                     14 	.area _CODE
                                     15 	.area GSINIT
                                     16 	.area GSFINAL
                                     17 	.area CODE
                                     18 	.area RODATA
                                     19 	.area XINIT
                                     20 	.area _DATA
                                     21 	.area DATA
                                     22 	.area BSS
                                     23 ;--------------------------------------------------------
                                     24 ; Public variables in this module
                                     25 ;--------------------------------------------------------
                                     26 	.globl _strchr
                                     27 	.globl _strpbrk
                                     28 ;--------------------------------------------------------
                                     29 ; ZP ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area ZP      (PAG)
                                     32 ;--------------------------------------------------------
                                     33 ; overlayable items in ram
                                     34 ;--------------------------------------------------------
                                     35 ;--------------------------------------------------------
                                     36 ; uninitialized external ram data
                                     37 ;--------------------------------------------------------
                                     38 	.area BSS
                                     39 ;--------------------------------------------------------
                                     40 ; absolute external ram data
                                     41 ;--------------------------------------------------------
                                     42 	.area DABS    (ABS)
                                     43 ;--------------------------------------------------------
                                     44 ; initialized external ram data
                                     45 ;--------------------------------------------------------
                                     46 	.area DATA
                                     47 ;--------------------------------------------------------
                                     48 ; global & static initialisations
                                     49 ;--------------------------------------------------------
                                     50 	.area _CODE
                                     51 	.area GSINIT
                                     52 	.area GSFINAL
                                     53 	.area GSINIT
                                     54 ;--------------------------------------------------------
                                     55 ; Home
                                     56 ;--------------------------------------------------------
                                     57 	.area _CODE
                                     58 	.area _CODE
                                     59 ;--------------------------------------------------------
                                     60 ; code
                                     61 ;--------------------------------------------------------
                                     62 	.area CODE
                                     63 ;------------------------------------------------------------
                                     64 ;Allocation info for local variables in function 'strpbrk'
                                     65 ;------------------------------------------------------------
                                     66 ;control       Allocated to stack - sp +11 +2 
                                     67 ;string        Allocated to stack - sp +7 +2 
                                     68 ;ret           Allocated to stack - sp +5 +2 
                                     69 ;ch            Allocated to registers 
                                     70 ;p             Allocated to stack - sp +3 +2 
                                     71 ;sloc0         Allocated to stack - sp +1 +2 
                                     72 ;------------------------------------------------------------
                                     73 ;	../_strpbrk.c: 31: char * strpbrk ( const char * string, const char * control )
                                     74 ;	genLabel
                                     75 ;	Raw cost for generated ic 0 : (0, 0.000000) count=1.000000
                                     76 ;	-----------------------------------------
                                     77 ;	 function strpbrk
                                     78 ;	-----------------------------------------
                                     79 ;	Register assignment is optimal.
                                     80 ;	Stack space usage: 8 bytes.
      000000                         81 _strpbrk:
                                     82 ;	genReceive: size=2
                                     83 ;	pushreg: ofs=1
      000000 85*00            [ 3]   84 	sta	*(REGTEMP+0)
      000002 8A               [ 2]   85 	txa
      000003 48               [ 3]   86 	pha
      000004 A5*00            [ 3]   87 	lda	*(REGTEMP+0)
                                     88 ;	pushreg: ofs=0
      000006 48               [ 3]   89 	pha
                                     90 ;	  adjustStack : cycles stk:18  incdec:16  adc:12
      000007 BA               [ 2]   91 	tsx
      000008 8A               [ 2]   92 	txa
      000009 18               [ 2]   93 	clc
      00000A 69 FA            [ 2]   94 	adc	#0xfa
      00000C AA               [ 2]   95 	tax
      00000D 9A               [ 2]   96 	txs
                                     97 ;	Raw cost for generated ic 1 : (14, 26.000000) count=1.000000
                                     98 ;	skipping generated iCode
                                     99 ;	Raw cost for generated ic 2 : (0, 0.000000) count=1.000000
                                    100 ;	../_strpbrk.c: 33: char *ret = NULL;
                                    101 ;	genAssign
                                    102 ;	genAssignLit
      00000E A9 00            [ 2]  103 	lda	#0x00
      000010 9D 05 01         [ 5]  104 	sta	0x105,x
      000013 9D 06 01         [ 5]  105 	sta	0x106,x
                                    106 ;	Raw cost for generated ic 4 : (8, 12.000000) count=1.000000
                                    107 ;	../_strpbrk.c: 36: while (ch = *control) {
                                    108 ;	genAssign
                                    109 ;	genCopy
      000016 BD 0C 01         [ 5]  110 	lda	0x10c,x
      000019 9D 02 01         [ 5]  111 	sta	0x102,x
      00001C BD 0B 01         [ 5]  112 	lda	0x10b,x
      00001F 9D 01 01         [ 5]  113 	sta	0x101,x
                                    114 ;	Raw cost for generated ic 37 : (12, 18.000000) count=1.000000
                                    115 ;	genLabel
      000022                        116 00105$:
                                    117 ;	Raw cost for generated ic 5 : (0, 0.000000) count=3.999983
                                    118 ;	genPointerGet
                                    119 ;	  setupDPTR - off=0 remat=(null) savea=0
      000022 BA               [ 2]  120 	tsx
      000023 BD 01 01         [ 5]  121 	lda	0x101,x
      000026 85*00            [ 3]  122 	sta	*(DPTR+0)
      000028 BD 02 01         [ 5]  123 	lda	0x102,x
      00002B 85*01            [ 3]  124 	sta	*(DPTR+1)
      00002D A0 00            [ 2]  125 	ldy	#0x00
      00002F B1*00            [ 6]  126 	lda	[DPTR],y
      000031 AA               [ 2]  127 	tax
                                    128 ;	Raw cost for generated ic 7 : (16, 25.000000) count=3.999983
                                    129 ;	genIfx
                                    130 ;	genIfxJump : z
      000032 F0 5C            [ 4]  131 	beq	00107$
                                    132 ;	Raw cost for generated ic 9 : (5, 5.600000) count=3.999983
                                    133 ;	../_strpbrk.c: 37: char * p = strchr(string, ch);
                                    134 ;	genIpush
      000034 8A               [ 2]  135 	txa
      000035 48               [ 3]  136 	pha
                                    137 ;	Raw cost for generated ic 12 : (2, 5.000000) count=2.999987
                                    138 ;	Raw cost for generated ic 13 : (0, 0.000000) count=2.999987
                                    139 ;	genCall
                                    140 ;	genSend
      000036 BA               [ 2]  141 	tsx
      000037 BD 08 01         [ 5]  142 	lda	0x108,x
      00003A A8               [ 2]  143 	tay
      00003B BD 09 01         [ 5]  144 	lda	0x109,x
      00003E AA               [ 2]  145 	tax
      00003F 98               [ 2]  146 	tya
      000040 20r00r00         [ 6]  147 	jsr	_strchr
                                    148 ;	assignResultValue
      000043 86*00            [ 3]  149 	stx	*(REGTEMP+0)
      000045 BA               [ 2]  150 	tsx
      000046 9D 04 01         [ 5]  151 	sta	0x104,x
      000049 A5*00            [ 3]  152 	lda	*(REGTEMP+0)
      00004B 9D 05 01         [ 5]  153 	sta	0x105,x
                                    154 ;	  adjustStack : cycles stk:4  incdec:4  adc:10
      00004E 68               [ 4]  155 	pla
                                    156 ;	Raw cost for generated ic 14 : (25, 44.000000) count=2.999987
                                    157 ;	../_strpbrk.c: 38: if (p != NULL && (ret == NULL || p < ret)) {
                                    158 ;	genIfx
      00004F BD 05 01         [ 5]  159 	lda	0x105,x
      000052 1D 04 01         [ 5]  160 	ora	0x104,x
                                    161 ;	genIfxJump : z
      000055 F0 24            [ 4]  162 	beq	00102$
                                    163 ;	Raw cost for generated ic 16 : (11, 13.600000) count=2.999987
                                    164 ;	genIfx
      000057 BD 07 01         [ 5]  165 	lda	0x107,x
      00005A 1D 06 01         [ 5]  166 	ora	0x106,x
                                    167 ;	genIfxJump : z
      00005D F0 0F            [ 4]  168 	beq	00101$
                                    169 ;	Raw cost for generated ic 19 : (11, 13.600000) count=2.249990
                                    170 ;	genCmp
      00005F BD 04 01         [ 5]  171 	lda	0x104,x
      000062 38               [ 2]  172 	sec
      000063 FD 06 01         [ 5]  173 	sbc	0x106,x
      000066 BD 05 01         [ 5]  174 	lda	0x105,x
      000069 FD 07 01         [ 5]  175 	sbc	0x107,x
      00006C B0 0D            [ 4]  176 	bcs	00102$
                                    177 ;	Raw cost for generated ic 22 : (18, 23.600000) count=1.687490
                                    178 ;	skipping generated iCode
                                    179 ;	Raw cost for generated ic 23 : (0, 0.000000) count=1.687490
                                    180 ;	genLabel
      00006E                        181 00101$:
                                    182 ;	Raw cost for generated ic 25 : (0, 0.000000) count=1.828115
                                    183 ;	../_strpbrk.c: 39: ret = p;
                                    184 ;	genAssign
                                    185 ;	genCopy
      00006E BA               [ 2]  186 	tsx
      00006F BD 04 01         [ 5]  187 	lda	0x104,x
      000072 9D 06 01         [ 5]  188 	sta	0x106,x
      000075 BD 03 01         [ 5]  189 	lda	0x103,x
      000078 9D 05 01         [ 5]  190 	sta	0x105,x
                                    191 ;	Raw cost for generated ic 26 : (13, 20.000000) count=1.828115
                                    192 ;	genLabel
      00007B                        193 00102$:
                                    194 ;	Raw cost for generated ic 27 : (0, 0.000000) count=2.999983
                                    195 ;	../_strpbrk.c: 41: control++;
                                    196 ;	genPlus
                                    197 ;	  genPlusInc
      00007B BA               [ 2]  198 	tsx
      00007C BD 01 01         [ 5]  199 	lda	0x101,x
      00007F 18               [ 2]  200 	clc
      000080 69 01            [ 2]  201 	adc	#0x01
      000082 9D 01 01         [ 5]  202 	sta	0x101,x
      000085 BD 02 01         [ 5]  203 	lda	0x102,x
      000088 69 00            [ 2]  204 	adc	#0x00
      00008A 9D 02 01         [ 5]  205 	sta	0x102,x
                                    206 ;	Raw cost for generated ic 29 : (18, 26.000000) count=2.999983
                                    207 ;	genGoto
      00008D 4Cr22r00         [ 3]  208 	jmp	00105$
                                    209 ;	Raw cost for generated ic 31 : (3, 3.000000) count=2.999983
                                    210 ;	genLabel
      000090                        211 00107$:
                                    212 ;	Raw cost for generated ic 32 : (0, 0.000000) count=0.999994
                                    213 ;	../_strpbrk.c: 44: return (ret);
                                    214 ;	genRet
      000090 BA               [ 2]  215 	tsx
      000091 BD 06 01         [ 5]  216 	lda	0x106,x
      000094 85*00            [ 3]  217 	sta	*(REGTEMP+0)
      000096 BD 05 01         [ 5]  218 	lda	0x105,x
                                    219 ;	Raw cost for generated ic 33 : (11, 16.000000) count=0.999994
                                    220 ;	genLabel
                                    221 ;	Raw cost for generated ic 34 : (0, 0.000000) count=0.999994
                                    222 ;	../_strpbrk.c: 45: }
                                    223 ;	genEndFunction
                                    224 ;	  adjustStack : cycles stk:38  incdec:26  adc:24
      000099 A6*00            [ 3]  225 	ldx	*(REGTEMP+0)
      00009B 85*01            [ 3]  226 	sta	*(REGTEMP+1)
      00009D BA               [ 2]  227 	tsx
      00009E 8A               [ 2]  228 	txa
      00009F 18               [ 2]  229 	clc
      0000A0 69 08            [ 2]  230 	adc	#0x08
      0000A2 AA               [ 2]  231 	tax
      0000A3 9A               [ 2]  232 	txs
      0000A4 A5*01            [ 3]  233 	lda	*(REGTEMP+1)
      0000A6 A6*00            [ 3]  234 	ldx	*(REGTEMP+0)
      0000A8 60               [ 6]  235 	rts
                                    236 ;	Raw cost for generated ic 35 : (16, 30.000000) count=0.999994
                                    237 	.area CODE
                                    238 	.area RODATA
                                    239 	.area XINIT
                                    240 	.area CABS    (ABS)
