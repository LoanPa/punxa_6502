                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler
                                      3 ; Version 4.5.10 #15691 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _moduchar
                                      6 	
                                      7 	.optsdcc -mmos6502
                                      8 
                                      9 ;--------------------------------------------------------
                                     10 ;  Ordering of segments for the linker.
                                     11 ;--------------------------------------------------------
                                     12 	.area ZP      (PAG)
                                     13 	.area OSEG    (PAG, OVR)
                                     14 	.area _CODE
                                     15 	.area GSINIT
                                     16 	.area GSFINAL
                                     17 	.area CODE
                                     18 	.area RODATA
                                     19 	.area XINIT
                                     20 	.area _DATA
                                     21 	.area DATA
                                     22 	.area BSS
                                     23 ;--------------------------------------------------------
                                     24 ; Public variables in this module
                                     25 ;--------------------------------------------------------
                                     26 	.globl __moduchar
                                     27 ;--------------------------------------------------------
                                     28 ; ZP ram data
                                     29 ;--------------------------------------------------------
                                     30 	.area ZP      (PAG)
                                     31 ;--------------------------------------------------------
                                     32 ; overlayable items in ram
                                     33 ;--------------------------------------------------------
                                     34 ;--------------------------------------------------------
                                     35 ; uninitialized external ram data
                                     36 ;--------------------------------------------------------
                                     37 	.area BSS
                                     38 ;--------------------------------------------------------
                                     39 ; absolute external ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area DABS    (ABS)
                                     42 ;--------------------------------------------------------
                                     43 ; initialized external ram data
                                     44 ;--------------------------------------------------------
                                     45 	.area DATA
                                     46 ;--------------------------------------------------------
                                     47 ; global & static initialisations
                                     48 ;--------------------------------------------------------
                                     49 	.area _CODE
                                     50 	.area GSINIT
                                     51 	.area GSFINAL
                                     52 	.area GSINIT
                                     53 ;--------------------------------------------------------
                                     54 ; Home
                                     55 ;--------------------------------------------------------
                                     56 	.area _CODE
                                     57 	.area _CODE
                                     58 ;--------------------------------------------------------
                                     59 ; code
                                     60 ;--------------------------------------------------------
                                     61 	.area CODE
                                     62 ;------------------------------------------------------------
                                     63 ;Allocation info for local variables in function '_moduchar'
                                     64 ;------------------------------------------------------------
                                     65 ;y             Allocated to registers y 
                                     66 ;x             Allocated to registers a 
                                     67 ;tx            Allocated to stack - sp +3 +2 
                                     68 ;ty            Allocated to stack - sp +1 +2 
                                     69 ;------------------------------------------------------------
                                     70 ;	../_moduchar.c: 30: _moduchar (unsigned char x, unsigned char y)
                                     71 ;	genLabel
                                     72 ;	Raw cost for generated ic 0 : (0, 0.000000) count=1.000000
                                     73 ;	-----------------------------------------
                                     74 ;	 function _moduchar
                                     75 ;	-----------------------------------------
                                     76 ;	Register assignment is optimal.
                                     77 ;	Stack space usage: 4 bytes.
      000000                         78 __moduchar:
                                     79 ;	  adjustStack : cycles stk:12  incdec:12  adc:18
      000000 48               [ 3]   80 	pha
      000001 48               [ 3]   81 	pha
      000002 48               [ 3]   82 	pha
      000003 48               [ 3]   83 	pha
                                     84 ;	Raw cost for generated ic 1 : (4, 12.000000) count=1.000000
                                     85 ;	genReceive
                                     86 ;	Raw cost for generated ic 2 : (0, 0.000000) count=1.000000
                                     87 ;	genReceive
      000004 86*00            [ 3]   88 	stx	*(REGTEMP+0)
      000006 A4*00            [ 3]   89 	ldy	*(REGTEMP+0)
                                     90 ;	Raw cost for generated ic 3 : (4, 6.000000) count=1.000000
                                     91 ;	../_moduchar.c: 33: volatile unsigned int tx = x;
                                     92 ;	genCast
      000008 BA               [ 2]   93 	tsx
      000009 9D 03 01         [ 5]   94 	sta	0x103,x
      00000C A9 00            [ 2]   95 	lda	#0x00
      00000E 9D 04 01         [ 5]   96 	sta	0x104,x
                                     97 ;	Raw cost for generated ic 4 : (9, 14.000000) count=1.000000
                                     98 ;	../_moduchar.c: 34: volatile unsigned int ty = y;
                                     99 ;	genCast
                                    100 ;	genCopy
      000011 9D 02 01         [ 5]  101 	sta	0x102,x
      000014 98               [ 2]  102 	tya
      000015 9D 01 01         [ 5]  103 	sta	0x101,x
                                    104 ;	Raw cost for generated ic 6 : (7, 12.000000) count=1.000000
                                    105 ;	../_moduchar.c: 35: return (tx % ty);
                                    106 ;	genIpush
      000018 BD 02 01         [ 5]  107 	lda	0x102,x
      00001B 48               [ 3]  108 	pha
      00001C BD 01 01         [ 5]  109 	lda	0x101,x
      00001F 48               [ 3]  110 	pha
                                    111 ;	Raw cost for generated ic 12 : (8, 14.000000) count=1.000000
                                    112 ;	Raw cost for generated ic 13 : (0, 0.000000) count=1.000000
                                    113 ;	genCall
                                    114 ;	genSend
      000020 BD 03 01         [ 5]  115 	lda	0x103,x
      000023 85*00            [ 3]  116 	sta	*(REGTEMP+0)
      000025 BD 04 01         [ 5]  117 	lda	0x104,x
      000028 AA               [ 2]  118 	tax
      000029 A5*00            [ 3]  119 	lda	*(REGTEMP+0)
      00002B 20r00r00         [ 6]  120 	jsr	__moduint
                                    121 ;	assignResultValue
                                    122 ;	  adjustStack : cycles stk:14  incdec:14  adc:24
      00002E 85*00            [ 3]  123 	sta	*(REGTEMP+0)
      000030 68               [ 4]  124 	pla
      000031 68               [ 4]  125 	pla
      000032 A5*00            [ 3]  126 	lda	*(REGTEMP+0)
                                    127 ;	Raw cost for generated ic 14 : (20, 36.000000) count=1.000000
                                    128 ;	genRet
                                    129 ;	Raw cost for generated ic 9 : (0, 0.000000) count=1.000000
                                    130 ;	genLabel
                                    131 ;	Raw cost for generated ic 10 : (0, 0.000000) count=1.000000
                                    132 ;	../_moduchar.c: 36: }
                                    133 ;	genEndFunction
                                    134 ;	  adjustStack : cycles stk:22  incdec:18  adc:24
      000034 86*00            [ 3]  135 	stx	*(REGTEMP+0)
      000036 BA               [ 2]  136 	tsx
      000037 E8               [ 2]  137 	inx
      000038 E8               [ 2]  138 	inx
      000039 E8               [ 2]  139 	inx
      00003A E8               [ 2]  140 	inx
      00003B 9A               [ 2]  141 	txs
      00003C A6*00            [ 3]  142 	ldx	*(REGTEMP+0)
      00003E 60               [ 6]  143 	rts
                                    144 ;	Raw cost for generated ic 11 : (11, 24.000000) count=1.000000
                                    145 	.area CODE
                                    146 	.area RODATA
                                    147 	.area XINIT
                                    148 	.area CABS    (ABS)
