                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler
                                      3 ; Version 4.5.10 #15691 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module div
                                      6 	
                                      7 	.optsdcc -mmos6502
                                      8 
                                      9 ;--------------------------------------------------------
                                     10 ;  Ordering of segments for the linker.
                                     11 ;--------------------------------------------------------
                                     12 	.area ZP      (PAG)
                                     13 	.area OSEG    (PAG, OVR)
                                     14 	.area _CODE
                                     15 	.area GSINIT
                                     16 	.area GSFINAL
                                     17 	.area CODE
                                     18 	.area RODATA
                                     19 	.area XINIT
                                     20 	.area _DATA
                                     21 	.area DATA
                                     22 	.area BSS
                                     23 ;--------------------------------------------------------
                                     24 ; Public variables in this module
                                     25 ;--------------------------------------------------------
                                     26 	.globl _div
                                     27 ;--------------------------------------------------------
                                     28 ; ZP ram data
                                     29 ;--------------------------------------------------------
                                     30 	.area ZP      (PAG)
                                     31 ;--------------------------------------------------------
                                     32 ; overlayable items in ram
                                     33 ;--------------------------------------------------------
                                     34 ;--------------------------------------------------------
                                     35 ; uninitialized external ram data
                                     36 ;--------------------------------------------------------
                                     37 	.area BSS
                                     38 ;--------------------------------------------------------
                                     39 ; absolute external ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area DABS    (ABS)
                                     42 ;--------------------------------------------------------
                                     43 ; initialized external ram data
                                     44 ;--------------------------------------------------------
                                     45 	.area DATA
                                     46 ;--------------------------------------------------------
                                     47 ; global & static initialisations
                                     48 ;--------------------------------------------------------
                                     49 	.area _CODE
                                     50 	.area GSINIT
                                     51 	.area GSFINAL
                                     52 	.area GSINIT
                                     53 ;--------------------------------------------------------
                                     54 ; Home
                                     55 ;--------------------------------------------------------
                                     56 	.area _CODE
                                     57 	.area _CODE
                                     58 ;--------------------------------------------------------
                                     59 ; code
                                     60 ;--------------------------------------------------------
                                     61 	.area CODE
                                     62 ;------------------------------------------------------------
                                     63 ;Allocation info for local variables in function 'div'
                                     64 ;------------------------------------------------------------
                                     65 ;denom         Allocated to stack - sp +13 +2 
                                     66 ;numer         Allocated to stack - sp +9 +2 
                                     67 ;ret           Allocated to stack - sp +1 +4 
                                     68 ;sloc0         Allocated to stack - sp +7 +2 
                                     69 ;sloc1         Allocated to stack - sp +5 +2 
                                     70 ;------------------------------------------------------------
                                     71 ;	../div.c: 32: div_t div(int numer, int denom)
                                     72 ;	genLabel
                                     73 ;	Raw cost for generated ic 0 : (0, 0.000000) count=1.000000
                                     74 ;	-----------------------------------------
                                     75 ;	 function div
                                     76 ;	-----------------------------------------
                                     77 ;	Register assignment is optimal.
                                     78 ;	Stack space usage: 10 bytes.
      000000                         79 _div:
                                     80 ;	genReceive: size=2
                                     81 ;	pushreg: ofs=1
      000000 85*00            [ 3]   82 	sta	*(REGTEMP+0)
      000002 8A               [ 2]   83 	txa
      000003 48               [ 3]   84 	pha
      000004 A5*00            [ 3]   85 	lda	*(REGTEMP+0)
                                     86 ;	pushreg: ofs=0
      000006 48               [ 3]   87 	pha
                                     88 ;	  adjustStack : cycles stk:24  incdec:20  adc:12
      000007 BA               [ 2]   89 	tsx
      000008 8A               [ 2]   90 	txa
      000009 18               [ 2]   91 	clc
      00000A 69 F8            [ 2]   92 	adc	#0xf8
      00000C AA               [ 2]   93 	tax
      00000D 9A               [ 2]   94 	txs
                                     95 ;	Raw cost for generated ic 1 : (14, 26.000000) count=1.000000
                                     96 ;	skipping generated iCode
                                     97 ;	Raw cost for generated ic 2 : (0, 0.000000) count=1.000000
                                     98 ;	../div.c: 35: ret.quot = numer / denom;
                                     99 ;	genAddrOf
      00000E E8               [ 2]  100 	inx
      00000F 8A               [ 2]  101 	txa
      000010 9D 06 01         [ 5]  102 	sta	0x106,x
      000013 A9 01            [ 2]  103 	lda	#0x01
                                    104 ;	Raw cost for generated ic 3 : (10, 16.000000) count=1.000000
                                    105 ;	genCast
                                    106 ;	genCopy
      000015 9D 07 01         [ 5]  107 	sta	0x107,x
      000018 9D 05 01         [ 5]  108 	sta	0x105,x
      00001B BD 06 01         [ 5]  109 	lda	0x106,x
      00001E 9D 04 01         [ 5]  110 	sta	0x104,x
                                    111 ;	Raw cost for generated ic 4 : (12, 18.000000) count=1.000000
                                    112 ;	genIpush
      000021 BD 0D 01         [ 5]  113 	lda	0x10d,x
      000024 48               [ 3]  114 	pha
      000025 BD 0C 01         [ 5]  115 	lda	0x10c,x
      000028 48               [ 3]  116 	pha
                                    117 ;	Raw cost for generated ic 14 : (8, 14.000000) count=1.000000
                                    118 ;	Raw cost for generated ic 15 : (0, 0.000000) count=1.000000
                                    119 ;	genCall
                                    120 ;	genSend
      000029 BD 08 01         [ 5]  121 	lda	0x108,x
      00002C A8               [ 2]  122 	tay
      00002D BD 09 01         [ 5]  123 	lda	0x109,x
      000030 AA               [ 2]  124 	tax
      000031 98               [ 2]  125 	tya
      000032 20r00r00         [ 6]  126 	jsr	__divsint
                                    127 ;	assignResultValue
                                    128 ;	  adjustStack : cycles stk:14  incdec:14  adc:24
      000035 85*00            [ 3]  129 	sta	*(REGTEMP+0)
      000037 68               [ 4]  130 	pla
      000038 68               [ 4]  131 	pla
                                    132 ;	Raw cost for generated ic 16 : (18, 34.000000) count=1.000000
                                    133 ;	genPointerSet
      000039 A5*00            [ 3]  134 	lda	*(REGTEMP+0)
      00003B 86*01            [ 3]  135 	stx	*(REGTEMP+1)
                                    136 ;	  setupDPTR - off=0 remat=(null) savea=0
      00003D BA               [ 2]  137 	tsx
      00003E BD 05 01         [ 5]  138 	lda	0x105,x
      000041 85*00            [ 3]  139 	sta	*(DPTR+0)
      000043 BD 06 01         [ 5]  140 	lda	0x106,x
      000046 85*01            [ 3]  141 	sta	*(DPTR+1)
      000048 A5*00            [ 3]  142 	lda	*(REGTEMP+0)
      00004A A6*01            [ 3]  143 	ldx	*(REGTEMP+1)
      00004C A0 00            [ 2]  144 	ldy	#0x00
      00004E 91*00            [ 6]  145 	sta	[DPTR],y
      000050 8A               [ 2]  146 	txa
      000051 C8               [ 2]  147 	iny
      000052 91*00            [ 6]  148 	sta	[DPTR],y
                                    149 ;	Raw cost for generated ic 6 : (29, 49.000000) count=1.000000
                                    150 ;	../div.c: 36: ret.rem = numer % denom;
                                    151 ;	genAssign
                                    152 ;	genCopy
      000054 BA               [ 2]  153 	tsx
      000055 BD 08 01         [ 5]  154 	lda	0x108,x
      000058 9D 06 01         [ 5]  155 	sta	0x106,x
      00005B BD 07 01         [ 5]  156 	lda	0x107,x
      00005E 9D 05 01         [ 5]  157 	sta	0x105,x
                                    158 ;	Raw cost for generated ic 8 : (13, 20.000000) count=1.000000
                                    159 ;	genIpush
      000061 BD 0E 01         [ 5]  160 	lda	0x10e,x
      000064 48               [ 3]  161 	pha
      000065 BD 0D 01         [ 5]  162 	lda	0x10d,x
      000068 48               [ 3]  163 	pha
                                    164 ;	Raw cost for generated ic 17 : (8, 14.000000) count=1.000000
                                    165 ;	Raw cost for generated ic 18 : (0, 0.000000) count=1.000000
                                    166 ;	genCall
                                    167 ;	genSend
      000069 BD 09 01         [ 5]  168 	lda	0x109,x
      00006C A8               [ 2]  169 	tay
      00006D BD 0A 01         [ 5]  170 	lda	0x10a,x
      000070 AA               [ 2]  171 	tax
      000071 98               [ 2]  172 	tya
      000072 20r00r00         [ 6]  173 	jsr	__modsint
                                    174 ;	assignResultValue
                                    175 ;	  adjustStack : cycles stk:14  incdec:14  adc:24
      000075 85*00            [ 3]  176 	sta	*(REGTEMP+0)
      000077 68               [ 4]  177 	pla
      000078 68               [ 4]  178 	pla
                                    179 ;	Raw cost for generated ic 19 : (18, 34.000000) count=1.000000
                                    180 ;	genPointerSet
      000079 A5*00            [ 3]  181 	lda	*(REGTEMP+0)
      00007B 86*01            [ 3]  182 	stx	*(REGTEMP+1)
                                    183 ;	  setupDPTR - off=2 remat=(null) savea=0
      00007D BA               [ 2]  184 	tsx
      00007E BD 05 01         [ 5]  185 	lda	0x105,x
      000081 85*00            [ 3]  186 	sta	*(DPTR+0)
      000083 BD 06 01         [ 5]  187 	lda	0x106,x
      000086 85*01            [ 3]  188 	sta	*(DPTR+1)
      000088 A5*00            [ 3]  189 	lda	*(REGTEMP+0)
      00008A A6*01            [ 3]  190 	ldx	*(REGTEMP+1)
      00008C A0 02            [ 2]  191 	ldy	#0x02
      00008E 91*00            [ 6]  192 	sta	[DPTR],y
      000090 8A               [ 2]  193 	txa
      000091 C8               [ 2]  194 	iny
      000092 91*00            [ 6]  195 	sta	[DPTR],y
                                    196 ;	Raw cost for generated ic 10 : (29, 49.000000) count=1.000000
                                    197 ;	../div.c: 37: return(ret);
                                    198 ;	genRet
      000094 BA               [ 2]  199 	tsx
      000095 BD 08 01         [ 5]  200 	lda	0x108,x
      000098 85*00            [ 3]  201 	sta	*___SDCC_m6502_ret3
      00009A BD 07 01         [ 5]  202 	lda	0x107,x
      00009D 85*00            [ 3]  203 	sta	*___SDCC_m6502_ret2
      00009F BD 05 01         [ 5]  204 	lda	0x105,x
      0000A2 A8               [ 2]  205 	tay
      0000A3 BD 06 01         [ 5]  206 	lda	0x106,x
      0000A6 AA               [ 2]  207 	tax
      0000A7 98               [ 2]  208 	tya
                                    209 ;	Raw cost for generated ic 11 : (20, 30.000000) count=1.000000
                                    210 ;	genLabel
                                    211 ;	Raw cost for generated ic 12 : (0, 0.000000) count=1.000000
                                    212 ;	../div.c: 38: }
                                    213 ;	genEndFunction
                                    214 ;	  adjustStack : cycles stk:46  incdec:30  adc:24
      0000A8 86*00            [ 3]  215 	stx	*(REGTEMP+0)
      0000AA 85*01            [ 3]  216 	sta	*(REGTEMP+1)
      0000AC BA               [ 2]  217 	tsx
      0000AD 8A               [ 2]  218 	txa
      0000AE 18               [ 2]  219 	clc
      0000AF 69 0A            [ 2]  220 	adc	#0x0a
      0000B1 AA               [ 2]  221 	tax
      0000B2 9A               [ 2]  222 	txs
      0000B3 A5*01            [ 3]  223 	lda	*(REGTEMP+1)
      0000B5 A6*00            [ 3]  224 	ldx	*(REGTEMP+0)
      0000B7 60               [ 6]  225 	rts
                                    226 ;	Raw cost for generated ic 13 : (16, 30.000000) count=1.000000
                                    227 	.area CODE
                                    228 	.area RODATA
                                    229 	.area XINIT
                                    230 	.area CABS    (ABS)
