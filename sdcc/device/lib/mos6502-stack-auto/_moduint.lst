                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler
                                      3 ; Version 4.5.10 #15691 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _moduint
                                      6 	
                                      7 	.optsdcc -mmos6502
                                      8 
                                      9 ;--------------------------------------------------------
                                     10 ;  Ordering of segments for the linker.
                                     11 ;--------------------------------------------------------
                                     12 	.area ZP      (PAG)
                                     13 	.area OSEG    (PAG, OVR)
                                     14 	.area _CODE
                                     15 	.area GSINIT
                                     16 	.area GSFINAL
                                     17 	.area CODE
                                     18 	.area RODATA
                                     19 	.area XINIT
                                     20 	.area _DATA
                                     21 	.area DATA
                                     22 	.area BSS
                                     23 ;--------------------------------------------------------
                                     24 ; Public variables in this module
                                     25 ;--------------------------------------------------------
                                     26 	.globl __moduint
                                     27 ;--------------------------------------------------------
                                     28 ; ZP ram data
                                     29 ;--------------------------------------------------------
                                     30 	.area ZP      (PAG)
                                     31 ;--------------------------------------------------------
                                     32 ; overlayable items in ram
                                     33 ;--------------------------------------------------------
                                     34 ;--------------------------------------------------------
                                     35 ; uninitialized external ram data
                                     36 ;--------------------------------------------------------
                                     37 	.area BSS
                                     38 ;--------------------------------------------------------
                                     39 ; absolute external ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area DABS    (ABS)
                                     42 ;--------------------------------------------------------
                                     43 ; initialized external ram data
                                     44 ;--------------------------------------------------------
                                     45 	.area DATA
                                     46 ;--------------------------------------------------------
                                     47 ; global & static initialisations
                                     48 ;--------------------------------------------------------
                                     49 	.area _CODE
                                     50 	.area GSINIT
                                     51 	.area GSFINAL
                                     52 	.area GSINIT
                                     53 ;--------------------------------------------------------
                                     54 ; Home
                                     55 ;--------------------------------------------------------
                                     56 	.area _CODE
                                     57 	.area _CODE
                                     58 ;--------------------------------------------------------
                                     59 ; code
                                     60 ;--------------------------------------------------------
                                     61 	.area CODE
                                     62 ;------------------------------------------------------------
                                     63 ;Allocation info for local variables in function '_moduint'
                                     64 ;------------------------------------------------------------
                                     65 ;b             Allocated to stack - sp +6 +2 
                                     66 ;a             Allocated to stack - sp +2 +2 
                                     67 ;count         Allocated to stack - sp +1 +1 
                                     68 ;sloc0         Allocated to stack - sp +1 +1 
                                     69 ;------------------------------------------------------------
                                     70 ;	../_moduint.c: 175: _moduint (unsigned int a, unsigned int b) __SDCC_NONBANKED
                                     71 ;	genLabel
                                     72 ;	Raw cost for generated ic 0 : (0, 0.000000) count=1.000000
                                     73 ;	-----------------------------------------
                                     74 ;	 function _moduint
                                     75 ;	-----------------------------------------
                                     76 ;	Register assignment is optimal.
                                     77 ;	Stack space usage: 3 bytes.
      000000                         78 __moduint:
                                     79 ;	genReceive: size=2
                                     80 ;	pushreg: ofs=1
      000000 85*00            [ 3]   81 	sta	*(REGTEMP+0)
      000002 8A               [ 2]   82 	txa
      000003 48               [ 3]   83 	pha
      000004 A5*00            [ 3]   84 	lda	*(REGTEMP+0)
                                     85 ;	pushreg: ofs=0
      000006 48               [ 3]   86 	pha
                                     87 ;	  adjustStack : cycles stk:3  incdec:6  adc:12
      000007 48               [ 3]   88 	pha
                                     89 ;	Raw cost for generated ic 1 : (8, 17.000000) count=1.000000
                                     90 ;	skipping generated iCode
                                     91 ;	Raw cost for generated ic 2 : (0, 0.000000) count=1.000000
                                     92 ;	../_moduint.c: 177: unsigned char count = 0;
                                     93 ;	genAssign
                                     94 ;	genAssignLit
      000008 A9 00            [ 2]   95 	lda	#0x00
      00000A BA               [ 2]   96 	tsx
      00000B 9D 01 01         [ 5]   97 	sta	0x101,x
                                     98 ;	Raw cost for generated ic 3 : (6, 9.000000) count=1.000000
                                     99 ;	../_moduint.c: 179: while (!MSB_SET(b))
                                    100 ;	genAssign
                                    101 ;	genCopy
      00000E A8               [ 2]  102 	tay
                                    103 ;	Raw cost for generated ic 47 : (1, 2.000000) count=1.000000
                                    104 ;	genLabel
      00000F                        105 00103$:
                                    106 ;	Raw cost for generated ic 4 : (0, 0.000000) count=1.230759
                                    107 ;	genRightShift
                                    108 ;	genRightShiftLiteral
                                    109 ;	  genrsh16 - shift=15
      00000F BA               [ 2]  110 	tsx
      000010 BD 07 01         [ 5]  111 	lda	0x107,x
      000013 2A               [ 2]  112 	rol	a
      000014 A9 00            [ 2]  113 	lda	#0x00
      000016 2A               [ 2]  114 	rol	a
      000017 A2 00            [ 2]  115 	ldx	#0x00
                                    116 ;	Raw cost for generated ic 5 : (10, 14.000000) count=1.230759
                                    117 ;	genAnd
      000019 29 01            [ 2]  118 	and	#0x01
                                    119 ;	genIfxJump : z
      00001B D0 59            [ 4]  120 	bne	00117$
                                    121 ;	Raw cost for generated ic 6 : (9, 10.200000) count=1.230759
                                    122 ;	skipping generated iCode
                                    123 ;	Raw cost for generated ic 7 : (0, 0.000000) count=1.230759
                                    124 ;	../_moduint.c: 181: b <<= 1;
                                    125 ;	genLeftShift
                                    126 ;	genLeftShiftLiteral
                                    127 ;	  genlsh16 - shift=1
      00001D BA               [ 2]  128 	tsx
      00001E BD 06 01         [ 5]  129 	lda	0x106,x
      000021 85*00            [ 3]  130 	sta	*(REGTEMP+0)
      000023 BD 07 01         [ 5]  131 	lda	0x107,x
      000026 AA               [ 2]  132 	tax
      000027 A5*00            [ 3]  133 	lda	*(REGTEMP+0)
      000029 86*00            [ 3]  134 	stx	*(REGTEMP+0)
      00002B 0A               [ 2]  135 	asl	a
      00002C 26*00            [ 5]  136 	rol	*(REGTEMP+0)
      00002E A6*00            [ 3]  137 	ldx	*(REGTEMP+0)
      000030 85*01            [ 3]  138 	sta	*(REGTEMP+1)
      000032 8A               [ 2]  139 	txa
      000033 BA               [ 2]  140 	tsx
      000034 9D 07 01         [ 5]  141 	sta	0x107,x
      000037 A5*01            [ 3]  142 	lda	*(REGTEMP+1)
      000039 9D 06 01         [ 5]  143 	sta	0x106,x
                                    144 ;	Raw cost for generated ic 10 : (35, 57.000000) count=0.923069
                                    145 ;	../_moduint.c: 182: if (b > a)
                                    146 ;	genCmp
      00003C BA               [ 2]  147 	tsx
      00003D BD 02 01         [ 5]  148 	lda	0x102,x
      000040 38               [ 2]  149 	sec
      000041 FD 06 01         [ 5]  150 	sbc	0x106,x
      000044 BD 03 01         [ 5]  151 	lda	0x103,x
      000047 FD 07 01         [ 5]  152 	sbc	0x107,x
      00004A B0 21            [ 4]  153 	bcs	00102$
                                    154 ;	Raw cost for generated ic 12 : (19, 25.600000) count=0.923069
                                    155 ;	skipping generated iCode
                                    156 ;	Raw cost for generated ic 13 : (0, 0.000000) count=0.923069
                                    157 ;	../_moduint.c: 184: b >>=1;
                                    158 ;	genRightShift
                                    159 ;	genRightShiftLiteral
                                    160 ;	  genrsh16 - shift=1
      00004C BD 06 01         [ 5]  161 	lda	0x106,x
      00004F A8               [ 2]  162 	tay
      000050 BD 07 01         [ 5]  163 	lda	0x107,x
      000053 AA               [ 2]  164 	tax
      000054 98               [ 2]  165 	tya
      000055 86*00            [ 3]  166 	stx	*(REGTEMP+0)
      000057 46*00            [ 5]  167 	lsr	*(REGTEMP+0)
      000059 6A               [ 2]  168 	ror	a
      00005A A6*00            [ 3]  169 	ldx	*(REGTEMP+0)
      00005C 85*01            [ 3]  170 	sta	*(REGTEMP+1)
      00005E 8A               [ 2]  171 	txa
      00005F BA               [ 2]  172 	tsx
      000060 9D 07 01         [ 5]  173 	sta	0x107,x
      000063 A5*01            [ 3]  174 	lda	*(REGTEMP+1)
      000065 9D 06 01         [ 5]  175 	sta	0x106,x
      000068 A6*00            [ 3]  176 	ldx	*(REGTEMP+0)
                                    177 ;	Raw cost for generated ic 16 : (32, 53.000000) count=0.692302
                                    178 ;	../_moduint.c: 185: break;
                                    179 ;	genGoto
      00006A 4Cr76r00         [ 3]  180 	jmp	00117$
                                    181 ;	Raw cost for generated ic 18 : (3, 3.000000) count=0.692302
                                    182 ;	genLabel
      00006D                        183 00102$:
                                    184 ;	Raw cost for generated ic 19 : (0, 0.000000) count=0.230759
                                    185 ;	../_moduint.c: 187: count++;
                                    186 ;	genPlus
                                    187 ;	  genPlusInc
      00006D C8               [ 2]  188 	iny
                                    189 ;	Raw cost for generated ic 21 : (1, 2.000000) count=0.230759
                                    190 ;	genAssign
                                    191 ;	genCopy
      00006E 98               [ 2]  192 	tya
      00006F BA               [ 2]  193 	tsx
      000070 9D 01 01         [ 5]  194 	sta	0x101,x
                                    195 ;	Raw cost for generated ic 22 : (5, 9.000000) count=0.230759
                                    196 ;	genGoto
      000073 4Cr0Fr00         [ 3]  197 	jmp	00103$
                                    198 ;	Raw cost for generated ic 23 : (3, 3.000000) count=0.230759
                                    199 ;	../_moduint.c: 189: do
                                    200 ;	genLabel
      000076                        201 00117$:
                                    202 ;	Raw cost for generated ic 46 : (0, 0.000000) count=0.999992
                                    203 ;	genAssign
                                    204 ;	genCopy
      000076 BA               [ 2]  205 	tsx
      000077 BD 01 01         [ 5]  206 	lda	0x101,x
      00007A A8               [ 2]  207 	tay
                                    208 ;	Raw cost for generated ic 48 : (5, 8.000000) count=0.999992
                                    209 ;	genLabel
      00007B                        210 00108$:
                                    211 ;	Raw cost for generated ic 25 : (0, 0.000000) count=3.999952
                                    212 ;	../_moduint.c: 191: if (a >= b)
                                    213 ;	genCmp
      00007B BA               [ 2]  214 	tsx
      00007C BD 02 01         [ 5]  215 	lda	0x102,x
      00007F 38               [ 2]  216 	sec
      000080 FD 06 01         [ 5]  217 	sbc	0x106,x
      000083 BD 03 01         [ 5]  218 	lda	0x103,x
      000086 FD 07 01         [ 5]  219 	sbc	0x107,x
      000089 90 13            [ 4]  220 	bcc	00107$
                                    221 ;	Raw cost for generated ic 26 : (19, 25.600000) count=3.999952
                                    222 ;	skipping generated iCode
                                    223 ;	Raw cost for generated ic 27 : (0, 0.000000) count=3.999952
                                    224 ;	../_moduint.c: 192: a -= b;
                                    225 ;	genMinus
      00008B BD 02 01         [ 5]  226 	lda	0x102,x
      00008E 38               [ 2]  227 	sec
      00008F FD 06 01         [ 5]  228 	sbc	0x106,x
      000092 9D 02 01         [ 5]  229 	sta	0x102,x
      000095 BD 03 01         [ 5]  230 	lda	0x103,x
      000098 FD 07 01         [ 5]  231 	sbc	0x107,x
      00009B 9D 03 01         [ 5]  232 	sta	0x103,x
                                    233 ;	Raw cost for generated ic 30 : (19, 28.000000) count=2.999960
                                    234 ;	genLabel
      00009E                        235 00107$:
                                    236 ;	Raw cost for generated ic 32 : (0, 0.000000) count=3.999947
                                    237 ;	../_moduint.c: 193: b >>= 1;
                                    238 ;	genRightShift
                                    239 ;	genRightShiftLiteral
                                    240 ;	  genrsh16 - shift=1
      00009E BA               [ 2]  241 	tsx
      00009F BD 06 01         [ 5]  242 	lda	0x106,x
      0000A2 85*00            [ 3]  243 	sta	*(REGTEMP+0)
      0000A4 BD 07 01         [ 5]  244 	lda	0x107,x
      0000A7 AA               [ 2]  245 	tax
      0000A8 A5*00            [ 3]  246 	lda	*(REGTEMP+0)
      0000AA 86*00            [ 3]  247 	stx	*(REGTEMP+0)
      0000AC 46*00            [ 5]  248 	lsr	*(REGTEMP+0)
      0000AE 6A               [ 2]  249 	ror	a
      0000AF A6*00            [ 3]  250 	ldx	*(REGTEMP+0)
      0000B1 85*01            [ 3]  251 	sta	*(REGTEMP+1)
      0000B3 8A               [ 2]  252 	txa
      0000B4 BA               [ 2]  253 	tsx
      0000B5 9D 07 01         [ 5]  254 	sta	0x107,x
      0000B8 A5*01            [ 3]  255 	lda	*(REGTEMP+1)
      0000BA 9D 06 01         [ 5]  256 	sta	0x106,x
      0000BD A6*00            [ 3]  257 	ldx	*(REGTEMP+0)
                                    258 ;	Raw cost for generated ic 33 : (35, 57.000000) count=3.999947
                                    259 ;	../_moduint.c: 195: while (count--);
                                    260 ;	genAssign
                                    261 ;	genCopy
      0000BF 98               [ 2]  262 	tya
                                    263 ;	Raw cost for generated ic 36 : (1, 2.000000) count=3.999947
                                    264 ;	genMinus
                                    265 ;	  genMinusDec - size=1  icount=1
      0000C0 88               [ 2]  266 	dey
                                    267 ;	Raw cost for generated ic 37 : (1, 2.000000) count=3.999947
                                    268 ;	genIfx
      0000C1 C9 00            [ 2]  269 	cmp	#0x00
                                    270 ;	genIfxJump : z
      0000C3 D0 B6            [ 4]  271 	bne	00108$
                                    272 ;	Raw cost for generated ic 39 : (7, 7.600000) count=3.999947
                                    273 ;	../_moduint.c: 196: return a;
                                    274 ;	genRet
      0000C5 BA               [ 2]  275 	tsx
      0000C6 BD 03 01         [ 5]  276 	lda	0x103,x
      0000C9 85*00            [ 3]  277 	sta	*(REGTEMP+0)
      0000CB BD 02 01         [ 5]  278 	lda	0x102,x
                                    279 ;	Raw cost for generated ic 42 : (11, 16.000000) count=0.999983
                                    280 ;	genLabel
                                    281 ;	Raw cost for generated ic 43 : (0, 0.000000) count=0.999983
                                    282 ;	../_moduint.c: 197: }
                                    283 ;	genEndFunction
                                    284 ;	  adjustStack : cycles stk:18  incdec:16  adc:24
      0000CE BA               [ 2]  285 	tsx
      0000CF E8               [ 2]  286 	inx
      0000D0 E8               [ 2]  287 	inx
      0000D1 E8               [ 2]  288 	inx
      0000D2 9A               [ 2]  289 	txs
      0000D3 A6*00            [ 3]  290 	ldx	*(REGTEMP+0)
      0000D5 60               [ 6]  291 	rts
                                    292 ;	Raw cost for generated ic 44 : (10, 22.000000) count=0.999983
                                    293 	.area CODE
                                    294 	.area RODATA
                                    295 	.area XINIT
                                    296 	.area CABS    (ABS)
