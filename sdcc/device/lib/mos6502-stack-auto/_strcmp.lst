                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler
                                      3 ; Version 4.5.10 #15691 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _strcmp
                                      6 	
                                      7 	.optsdcc -mmos6502
                                      8 
                                      9 ;--------------------------------------------------------
                                     10 ;  Ordering of segments for the linker.
                                     11 ;--------------------------------------------------------
                                     12 	.area ZP      (PAG)
                                     13 	.area OSEG    (PAG, OVR)
                                     14 	.area _CODE
                                     15 	.area GSINIT
                                     16 	.area GSFINAL
                                     17 	.area CODE
                                     18 	.area RODATA
                                     19 	.area XINIT
                                     20 	.area _DATA
                                     21 	.area DATA
                                     22 	.area BSS
                                     23 ;--------------------------------------------------------
                                     24 ; Public variables in this module
                                     25 ;--------------------------------------------------------
                                     26 	.globl _strcmp
                                     27 ;--------------------------------------------------------
                                     28 ; ZP ram data
                                     29 ;--------------------------------------------------------
                                     30 	.area ZP      (PAG)
                                     31 ;--------------------------------------------------------
                                     32 ; overlayable items in ram
                                     33 ;--------------------------------------------------------
                                     34 ;--------------------------------------------------------
                                     35 ; uninitialized external ram data
                                     36 ;--------------------------------------------------------
                                     37 	.area BSS
                                     38 ;--------------------------------------------------------
                                     39 ; absolute external ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area DABS    (ABS)
                                     42 ;--------------------------------------------------------
                                     43 ; initialized external ram data
                                     44 ;--------------------------------------------------------
                                     45 	.area DATA
                                     46 ;--------------------------------------------------------
                                     47 ; global & static initialisations
                                     48 ;--------------------------------------------------------
                                     49 	.area _CODE
                                     50 	.area GSINIT
                                     51 	.area GSFINAL
                                     52 	.area GSINIT
                                     53 ;--------------------------------------------------------
                                     54 ; Home
                                     55 ;--------------------------------------------------------
                                     56 	.area _CODE
                                     57 	.area _CODE
                                     58 ;--------------------------------------------------------
                                     59 ; code
                                     60 ;--------------------------------------------------------
                                     61 	.area CODE
                                     62 ;------------------------------------------------------------
                                     63 ;Allocation info for local variables in function 'strcmp'
                                     64 ;------------------------------------------------------------
                                     65 ;adst          Allocated to stack - sp +13 +2 
                                     66 ;asrc          Allocated to registers 
                                     67 ;ret           Allocated to stack - sp +9 +2 
                                     68 ;sloc0         Allocated to stack - sp +7 +2 
                                     69 ;sloc1         Allocated to stack - sp +5 +2 
                                     70 ;sloc2         Allocated to stack - sp +3 +2 
                                     71 ;sloc3         Allocated to stack - sp +1 +2 
                                     72 ;------------------------------------------------------------
                                     73 ;	../_strcmp.c: 34: int strcmp ( const char * asrc, const char * adst )
                                     74 ;	genLabel
                                     75 ;	Raw cost for generated ic 0 : (0, 0.000000) count=1.000000
                                     76 ;	-----------------------------------------
                                     77 ;	 function strcmp
                                     78 ;	-----------------------------------------
                                     79 ;	Register assignment is optimal.
                                     80 ;	Stack space usage: 10 bytes.
      000000                         81 _strcmp:
                                     82 ;	  adjustStack : cycles stk:30  incdec:30  adc:24
      000000 86*00            [ 3]   83 	stx	*(REGTEMP+0)
      000002 85*01            [ 3]   84 	sta	*(REGTEMP+1)
      000004 BA               [ 2]   85 	tsx
      000005 8A               [ 2]   86 	txa
      000006 18               [ 2]   87 	clc
      000007 69 F6            [ 2]   88 	adc	#0xf6
      000009 AA               [ 2]   89 	tax
      00000A 9A               [ 2]   90 	txs
      00000B A5*01            [ 3]   91 	lda	*(REGTEMP+1)
                                     92 ;	Raw cost for generated ic 1 : (15, 24.000000) count=1.000000
                                     93 ;	genReceive
      00000D BA               [ 2]   94 	tsx
      00000E 9D 07 01         [ 5]   95 	sta	0x107,x
      000011 A5*00            [ 3]   96 	lda	*(REGTEMP+0)
      000013 9D 08 01         [ 5]   97 	sta	0x108,x
                                     98 ;	Raw cost for generated ic 2 : (11, 18.000000) count=1.000000
                                     99 ;	../_strcmp.c: 38: while( ! (ret = *(unsigned char *)asrc - *(unsigned char *)adst) && *adst)
                                    100 ;	genAssign
                                    101 ;	genCopy
      000016 BD 0E 01         [ 5]  102 	lda	0x10e,x
      000019 9D 06 01         [ 5]  103 	sta	0x106,x
      00001C BD 0D 01         [ 5]  104 	lda	0x10d,x
      00001F 9D 05 01         [ 5]  105 	sta	0x105,x
                                    106 ;	Raw cost for generated ic 34 : (12, 18.000000) count=1.000000
                                    107 ;	genLabel
      000022                        108 00102$:
                                    109 ;	Raw cost for generated ic 4 : (0, 0.000000) count=2.285713
                                    110 ;	genPointerGet
                                    111 ;	  setupDPTR - off=0 remat=(null) savea=0
      000022 BA               [ 2]  112 	tsx
      000023 BD 07 01         [ 5]  113 	lda	0x107,x
      000026 85*00            [ 3]  114 	sta	*(DPTR+0)
      000028 BD 08 01         [ 5]  115 	lda	0x108,x
      00002B 85*01            [ 3]  116 	sta	*(DPTR+1)
      00002D A0 00            [ 2]  117 	ldy	#0x00
      00002F B1*00            [ 6]  118 	lda	[DPTR],y
      000031 A8               [ 2]  119 	tay
                                    120 ;	Raw cost for generated ic 6 : (16, 25.000000) count=2.285713
                                    121 ;	genCast
                                    122 ;	genCopy
      000032 A9 00            [ 2]  123 	lda	#0x00
      000034 9D 04 01         [ 5]  124 	sta	0x104,x
      000037 98               [ 2]  125 	tya
      000038 9D 03 01         [ 5]  126 	sta	0x103,x
                                    127 ;	Raw cost for generated ic 7 : (9, 14.000000) count=2.285713
                                    128 ;	genPointerGet
                                    129 ;	  setupDPTR - off=0 remat=(null) savea=0
      00003B BD 05 01         [ 5]  130 	lda	0x105,x
      00003E 85*00            [ 3]  131 	sta	*(DPTR+0)
      000040 BD 06 01         [ 5]  132 	lda	0x106,x
      000043 85*01            [ 3]  133 	sta	*(DPTR+1)
      000045 A0 00            [ 2]  134 	ldy	#0x00
      000047 B1*00            [ 6]  135 	lda	[DPTR],y
      000049 A8               [ 2]  136 	tay
                                    137 ;	Raw cost for generated ic 9 : (15, 23.000000) count=2.285713
                                    138 ;	genCast
                                    139 ;	genCopy
      00004A A9 00            [ 2]  140 	lda	#0x00
      00004C 9D 02 01         [ 5]  141 	sta	0x102,x
      00004F 98               [ 2]  142 	tya
      000050 9D 01 01         [ 5]  143 	sta	0x101,x
                                    144 ;	Raw cost for generated ic 10 : (9, 14.000000) count=2.285713
                                    145 ;	genMinus
      000053 BD 03 01         [ 5]  146 	lda	0x103,x
      000056 38               [ 2]  147 	sec
      000057 FD 01 01         [ 5]  148 	sbc	0x101,x
      00005A 9D 09 01         [ 5]  149 	sta	0x109,x
      00005D BD 04 01         [ 5]  150 	lda	0x104,x
      000060 FD 02 01         [ 5]  151 	sbc	0x102,x
      000063 9D 0A 01         [ 5]  152 	sta	0x10a,x
                                    153 ;	Raw cost for generated ic 11 : (19, 28.000000) count=2.285713
                                    154 ;	genAssign
                                    155 ;	genCopy
      000066 9D 02 01         [ 5]  156 	sta	0x102,x
      000069 BD 09 01         [ 5]  157 	lda	0x109,x
      00006C 9D 01 01         [ 5]  158 	sta	0x101,x
                                    159 ;	Raw cost for generated ic 12 : (9, 14.000000) count=2.285713
                                    160 ;	genIfx
      00006F BD 0A 01         [ 5]  161 	lda	0x10a,x
      000072 1D 09 01         [ 5]  162 	ora	0x109,x
                                    163 ;	genIfxJump : z
      000075 D0 29            [ 4]  164 	bne	00104$
                                    165 ;	Raw cost for generated ic 13 : (11, 13.600000) count=2.285713
                                    166 ;	genIfx
      000077 C0 00            [ 2]  167 	cpy	#0x00
                                    168 ;	genIfxJump : z
      000079 F0 25            [ 4]  169 	beq	00104$
                                    170 ;	Raw cost for generated ic 18 : (7, 7.600000) count=1.714284
                                    171 ;	../_strcmp.c: 39: ++asrc, ++adst;
                                    172 ;	genPlus
                                    173 ;	  genPlusInc
      00007B BD 07 01         [ 5]  174 	lda	0x107,x
      00007E 18               [ 2]  175 	clc
      00007F 69 01            [ 2]  176 	adc	#0x01
      000081 9D 07 01         [ 5]  177 	sta	0x107,x
      000084 BD 08 01         [ 5]  178 	lda	0x108,x
      000087 69 00            [ 2]  179 	adc	#0x00
      000089 9D 08 01         [ 5]  180 	sta	0x108,x
                                    181 ;	Raw cost for generated ic 21 : (17, 24.000000) count=1.285713
                                    182 ;	genPlus
                                    183 ;	  genPlusInc
      00008C BD 05 01         [ 5]  184 	lda	0x105,x
      00008F 18               [ 2]  185 	clc
      000090 69 01            [ 2]  186 	adc	#0x01
      000092 9D 05 01         [ 5]  187 	sta	0x105,x
      000095 BD 06 01         [ 5]  188 	lda	0x106,x
      000098 69 00            [ 2]  189 	adc	#0x00
      00009A 9D 06 01         [ 5]  190 	sta	0x106,x
                                    191 ;	Raw cost for generated ic 23 : (17, 24.000000) count=1.285713
                                    192 ;	genGoto
      00009D 4Cr22r00         [ 3]  193 	jmp	00102$
                                    194 ;	Raw cost for generated ic 25 : (3, 3.000000) count=1.285713
                                    195 ;	genLabel
      0000A0                        196 00104$:
                                    197 ;	Raw cost for generated ic 26 : (0, 0.000000) count=0.999999
                                    198 ;	../_strcmp.c: 41: return( ret );
                                    199 ;	genRet
      0000A0 BA               [ 2]  200 	tsx
      0000A1 BD 02 01         [ 5]  201 	lda	0x102,x
      0000A4 85*00            [ 3]  202 	sta	*(REGTEMP+0)
      0000A6 BD 01 01         [ 5]  203 	lda	0x101,x
                                    204 ;	Raw cost for generated ic 27 : (11, 16.000000) count=0.999999
                                    205 ;	genLabel
                                    206 ;	Raw cost for generated ic 28 : (0, 0.000000) count=0.999999
                                    207 ;	../_strcmp.c: 42: }
                                    208 ;	genEndFunction
                                    209 ;	  adjustStack : cycles stk:46  incdec:30  adc:24
      0000A9 A6*00            [ 3]  210 	ldx	*(REGTEMP+0)
      0000AB 85*01            [ 3]  211 	sta	*(REGTEMP+1)
      0000AD BA               [ 2]  212 	tsx
      0000AE 8A               [ 2]  213 	txa
      0000AF 18               [ 2]  214 	clc
      0000B0 69 0A            [ 2]  215 	adc	#0x0a
      0000B2 AA               [ 2]  216 	tax
      0000B3 9A               [ 2]  217 	txs
      0000B4 A5*01            [ 3]  218 	lda	*(REGTEMP+1)
      0000B6 A6*00            [ 3]  219 	ldx	*(REGTEMP+0)
      0000B8 60               [ 6]  220 	rts
                                    221 ;	Raw cost for generated ic 29 : (16, 30.000000) count=0.999999
                                    222 	.area CODE
                                    223 	.area RODATA
                                    224 	.area XINIT
                                    225 	.area CABS    (ABS)
