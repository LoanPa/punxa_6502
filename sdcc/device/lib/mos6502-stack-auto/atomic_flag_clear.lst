                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler
                                      3 ; Version 4.5.10 #15691 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module atomic_flag_clear
                                      6 	
                                      7 	.optsdcc -mmos6502
                                      8 
                                      9 ;--------------------------------------------------------
                                     10 ;  Ordering of segments for the linker.
                                     11 ;--------------------------------------------------------
                                     12 	.area ZP      (PAG)
                                     13 	.area OSEG    (PAG, OVR)
                                     14 	.area _CODE
                                     15 	.area GSINIT
                                     16 	.area GSFINAL
                                     17 	.area CODE
                                     18 	.area RODATA
                                     19 	.area XINIT
                                     20 	.area _DATA
                                     21 	.area DATA
                                     22 	.area BSS
                                     23 ;--------------------------------------------------------
                                     24 ; Public variables in this module
                                     25 ;--------------------------------------------------------
                                     26 	.globl _atomic_flag_clear
                                     27 ;--------------------------------------------------------
                                     28 ; ZP ram data
                                     29 ;--------------------------------------------------------
                                     30 	.area ZP      (PAG)
                                     31 ;--------------------------------------------------------
                                     32 ; overlayable items in ram
                                     33 ;--------------------------------------------------------
                                     34 ;--------------------------------------------------------
                                     35 ; uninitialized external ram data
                                     36 ;--------------------------------------------------------
                                     37 	.area BSS
                                     38 ;--------------------------------------------------------
                                     39 ; absolute external ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area DABS    (ABS)
                                     42 ;--------------------------------------------------------
                                     43 ; initialized external ram data
                                     44 ;--------------------------------------------------------
                                     45 	.area DATA
                                     46 ;--------------------------------------------------------
                                     47 ; global & static initialisations
                                     48 ;--------------------------------------------------------
                                     49 	.area _CODE
                                     50 	.area GSINIT
                                     51 	.area GSFINAL
                                     52 	.area GSINIT
                                     53 ;--------------------------------------------------------
                                     54 ; Home
                                     55 ;--------------------------------------------------------
                                     56 	.area _CODE
                                     57 	.area _CODE
                                     58 ;--------------------------------------------------------
                                     59 ; code
                                     60 ;--------------------------------------------------------
                                     61 	.area CODE
                                     62 ;------------------------------------------------------------
                                     63 ;Allocation info for local variables in function 'atomic_flag_clear'
                                     64 ;------------------------------------------------------------
                                     65 ;object        Allocated to stack - sp +1 +2 
                                     66 ;------------------------------------------------------------
                                     67 ;	./../../include/stdatomic.h: 51: inline void atomic_flag_clear(volatile atomic_flag *object)
                                     68 ;	genLabel
                                     69 ;	Raw cost for generated ic 0 : (0, 0.000000) count=1.000000
                                     70 ;	-----------------------------------------
                                     71 ;	 function atomic_flag_clear
                                     72 ;	-----------------------------------------
                                     73 ;	Register assignment is optimal.
                                     74 ;	Stack space usage: 2 bytes.
      000000                         75 _atomic_flag_clear:
                                     76 ;	genReceive: size=2
                                     77 ;	pushreg: ofs=1
      000000 85*00            [ 3]   78 	sta	*(REGTEMP+0)
      000002 8A               [ 2]   79 	txa
      000003 48               [ 3]   80 	pha
      000004 A5*00            [ 3]   81 	lda	*(REGTEMP+0)
                                     82 ;	pushreg: ofs=0
      000006 48               [ 3]   83 	pha
                                     84 ;	Raw cost for generated ic 1 : (7, 14.000000) count=1.000000
                                     85 ;	skipping generated iCode
                                     86 ;	Raw cost for generated ic 2 : (0, 0.000000) count=1.000000
                                     87 ;	./../../include/stdatomic.h: 53: object->flag = 1;
                                     88 ;	genCast
                                     89 ;	genCopy
      000007 BA               [ 2]   90 	tsx
      000008 BD 01 01         [ 5]   91 	lda	0x101,x
      00000B A8               [ 2]   92 	tay
      00000C BD 02 01         [ 5]   93 	lda	0x102,x
      00000F AA               [ 2]   94 	tax
      000010 98               [ 2]   95 	tya
                                     96 ;	Raw cost for generated ic 4 : (10, 16.000000) count=1.000000
                                     97 ;	genPointerSet
                                     98 ;	  setupDPTR - off=0 remat=(null) savea=0
      000011 85*00            [ 3]   99 	sta	*(DPTR+0)
      000013 86*01            [ 3]  100 	stx	*(DPTR+1)
      000015 A9 01            [ 2]  101 	lda	#0x01
      000017 A0 00            [ 2]  102 	ldy	#0x00
      000019 91*00            [ 6]  103 	sta	[DPTR],y
                                    104 ;	Raw cost for generated ic 5 : (10, 16.000000) count=1.000000
                                    105 ;	genLabel
                                    106 ;	Raw cost for generated ic 6 : (0, 0.000000) count=1.000000
                                    107 ;	./../../include/stdatomic.h: 54: }
                                    108 ;	genEndFunction
                                    109 ;	  adjustStack : cycles stk:14  incdec:14  adc:24
      00001B 85*00            [ 3]  110 	sta	*(REGTEMP+0)
      00001D 68               [ 4]  111 	pla
      00001E 68               [ 4]  112 	pla
      00001F A5*00            [ 3]  113 	lda	*(REGTEMP+0)
      000021 60               [ 6]  114 	rts
                                    115 ;	Raw cost for generated ic 7 : (7, 20.000000) count=1.000000
                                    116 	.area CODE
                                    117 	.area RODATA
                                    118 	.area XINIT
                                    119 	.area CABS    (ABS)
