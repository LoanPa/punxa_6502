                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler
                                      3 ; Version 4.5.10 #15691 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module strnlen
                                      6 	
                                      7 	.optsdcc -mmos6502
                                      8 
                                      9 ;--------------------------------------------------------
                                     10 ;  Ordering of segments for the linker.
                                     11 ;--------------------------------------------------------
                                     12 	.area ZP      (PAG)
                                     13 	.area OSEG    (PAG, OVR)
                                     14 	.area _CODE
                                     15 	.area GSINIT
                                     16 	.area GSFINAL
                                     17 	.area CODE
                                     18 	.area RODATA
                                     19 	.area XINIT
                                     20 	.area _DATA
                                     21 	.area DATA
                                     22 	.area BSS
                                     23 ;--------------------------------------------------------
                                     24 ; Public variables in this module
                                     25 ;--------------------------------------------------------
                                     26 	.globl _strnlen
                                     27 ;--------------------------------------------------------
                                     28 ; ZP ram data
                                     29 ;--------------------------------------------------------
                                     30 	.area ZP      (PAG)
                                     31 ;--------------------------------------------------------
                                     32 ; overlayable items in ram
                                     33 ;--------------------------------------------------------
                                     34 ;--------------------------------------------------------
                                     35 ; uninitialized external ram data
                                     36 ;--------------------------------------------------------
                                     37 	.area BSS
                                     38 ;--------------------------------------------------------
                                     39 ; absolute external ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area DABS    (ABS)
                                     42 ;--------------------------------------------------------
                                     43 ; initialized external ram data
                                     44 ;--------------------------------------------------------
                                     45 	.area DATA
                                     46 ;--------------------------------------------------------
                                     47 ; global & static initialisations
                                     48 ;--------------------------------------------------------
                                     49 	.area _CODE
                                     50 	.area GSINIT
                                     51 	.area GSFINAL
                                     52 	.area GSINIT
                                     53 ;--------------------------------------------------------
                                     54 ; Home
                                     55 ;--------------------------------------------------------
                                     56 	.area _CODE
                                     57 	.area _CODE
                                     58 ;--------------------------------------------------------
                                     59 ; code
                                     60 ;--------------------------------------------------------
                                     61 	.area CODE
                                     62 ;------------------------------------------------------------
                                     63 ;Allocation info for local variables in function 'strnlen'
                                     64 ;------------------------------------------------------------
                                     65 ;n             Allocated to stack - sp +11 +2 
                                     66 ;s             Allocated to registers 
                                     67 ;i             Allocated to stack - sp +7 +2 
                                     68 ;sloc0         Allocated to stack - sp +5 +2 
                                     69 ;sloc1         Allocated to stack - sp +3 +2 
                                     70 ;sloc2         Allocated to stack - sp +1 +2 
                                     71 ;------------------------------------------------------------
                                     72 ;	../strnlen.c: 32: size_t strnlen (const char *s, size_t n)
                                     73 ;	genLabel
                                     74 ;	Raw cost for generated ic 0 : (0, 0.000000) count=1.000000
                                     75 ;	-----------------------------------------
                                     76 ;	 function strnlen
                                     77 ;	-----------------------------------------
                                     78 ;	Register assignment is optimal.
                                     79 ;	Stack space usage: 8 bytes.
      000000                         80 _strnlen:
                                     81 ;	  adjustStack : cycles stk:24  incdec:26  adc:24
      000000 48               [ 3]   82 	pha
      000001 48               [ 3]   83 	pha
      000002 48               [ 3]   84 	pha
      000003 48               [ 3]   85 	pha
      000004 48               [ 3]   86 	pha
      000005 48               [ 3]   87 	pha
      000006 48               [ 3]   88 	pha
      000007 48               [ 3]   89 	pha
                                     90 ;	Raw cost for generated ic 1 : (8, 24.000000) count=1.000000
                                     91 ;	genReceive
      000008 86*00            [ 3]   92 	stx	*(REGTEMP+0)
      00000A BA               [ 2]   93 	tsx
      00000B 9D 05 01         [ 5]   94 	sta	0x105,x
      00000E A5*00            [ 3]   95 	lda	*(REGTEMP+0)
      000010 9D 06 01         [ 5]   96 	sta	0x106,x
                                     97 ;	Raw cost for generated ic 2 : (11, 18.000000) count=1.000000
                                     98 ;	../strnlen.c: 36: while (n-- && *s++)
                                     99 ;	genAssign
                                    100 ;	genAssignLit
      000013 A9 00            [ 2]  101 	lda	#0x00
      000015 9D 07 01         [ 5]  102 	sta	0x107,x
      000018 9D 08 01         [ 5]  103 	sta	0x108,x
                                    104 ;	Raw cost for generated ic 30 : (8, 12.000000) count=1.000000
                                    105 ;	genAssign
                                    106 ;	genCopy
      00001B BD 0C 01         [ 5]  107 	lda	0x10c,x
      00001E 9D 04 01         [ 5]  108 	sta	0x104,x
      000021 BD 0B 01         [ 5]  109 	lda	0x10b,x
      000024 9D 03 01         [ 5]  110 	sta	0x103,x
                                    111 ;	Raw cost for generated ic 32 : (12, 18.000000) count=1.000000
                                    112 ;	genLabel
      000027                        113 00102$:
                                    114 ;	Raw cost for generated ic 4 : (0, 0.000000) count=2.285713
                                    115 ;	genAssign
                                    116 ;	genCopy
      000027 BA               [ 2]  117 	tsx
      000028 BD 04 01         [ 5]  118 	lda	0x104,x
      00002B 9D 02 01         [ 5]  119 	sta	0x102,x
                                    120 ;	Raw cost for generated ic 5 : (13, 20.000000) count=2.285713
                                    121 ;	genMinus
                                    122 ;	  genMinusDec - size=2  icount=1
      00002E BD 03 01         [ 5]  123 	lda	0x103,x
      000031 9D 01 01         [ 5]  124 	sta	0x101,x
      000034 38               [ 2]  125 	sec
      000035 E9 01            [ 2]  126 	sbc	#0x01
      000037 9D 03 01         [ 5]  127 	sta	0x103,x
      00003A BD 04 01         [ 5]  128 	lda	0x104,x
      00003D E9 00            [ 2]  129 	sbc	#0x00
      00003F 9D 04 01         [ 5]  130 	sta	0x104,x
                                    131 ;	Raw cost for generated ic 6 : (17, 24.000000) count=2.285713
                                    132 ;	genIfx
      000042 BD 02 01         [ 5]  133 	lda	0x102,x
      000045 1D 01 01         [ 5]  134 	ora	0x101,x
                                    135 ;	genIfxJump : z
      000048 F0 38            [ 4]  136 	beq	00104$
                                    137 ;	Raw cost for generated ic 8 : (11, 13.600000) count=2.285713
                                    138 ;	genPointerGet
                                    139 ;	  setupDPTR - off=0 remat=(null) savea=0
      00004A BD 05 01         [ 5]  140 	lda	0x105,x
      00004D 85*00            [ 3]  141 	sta	*(DPTR+0)
      00004F BD 06 01         [ 5]  142 	lda	0x106,x
      000052 85*01            [ 3]  143 	sta	*(DPTR+1)
      000054 A0 00            [ 2]  144 	ldy	#0x00
      000056 B1*00            [ 6]  145 	lda	[DPTR],y
      000058 A8               [ 2]  146 	tay
                                    147 ;	Raw cost for generated ic 14 : (15, 23.000000) count=1.714284
                                    148 ;	genPlus
                                    149 ;	  genPlusInc
      000059 BD 05 01         [ 5]  150 	lda	0x105,x
      00005C 18               [ 2]  151 	clc
      00005D 69 01            [ 2]  152 	adc	#0x01
      00005F 9D 05 01         [ 5]  153 	sta	0x105,x
      000062 BD 06 01         [ 5]  154 	lda	0x106,x
      000065 69 00            [ 2]  155 	adc	#0x00
      000067 9D 06 01         [ 5]  156 	sta	0x106,x
                                    157 ;	Raw cost for generated ic 12 : (17, 24.000000) count=1.714284
                                    158 ;	genIfx
      00006A C0 00            [ 2]  159 	cpy	#0x00
                                    160 ;	genIfxJump : z
      00006C F0 14            [ 4]  161 	beq	00104$
                                    162 ;	Raw cost for generated ic 15 : (7, 7.600000) count=1.714284
                                    163 ;	../strnlen.c: 37: i++ ;
                                    164 ;	genPlus
                                    165 ;	  genPlusInc
      00006E BD 07 01         [ 5]  166 	lda	0x107,x
      000071 18               [ 2]  167 	clc
      000072 69 01            [ 2]  168 	adc	#0x01
      000074 9D 07 01         [ 5]  169 	sta	0x107,x
      000077 BD 08 01         [ 5]  170 	lda	0x108,x
      00007A 69 00            [ 2]  171 	adc	#0x00
      00007C 9D 08 01         [ 5]  172 	sta	0x108,x
                                    173 ;	Raw cost for generated ic 19 : (17, 24.000000) count=1.285713
                                    174 ;	genGoto
      00007F 4Cr27r00         [ 3]  175 	jmp	00102$
                                    176 ;	Raw cost for generated ic 21 : (3, 3.000000) count=1.285713
                                    177 ;	genLabel
      000082                        178 00104$:
                                    179 ;	Raw cost for generated ic 22 : (0, 0.000000) count=0.999999
                                    180 ;	../strnlen.c: 39: return i;
                                    181 ;	genRet
      000082 BA               [ 2]  182 	tsx
      000083 BD 08 01         [ 5]  183 	lda	0x108,x
      000086 85*00            [ 3]  184 	sta	*(REGTEMP+0)
      000088 BD 07 01         [ 5]  185 	lda	0x107,x
                                    186 ;	Raw cost for generated ic 23 : (11, 16.000000) count=0.999999
                                    187 ;	genLabel
                                    188 ;	Raw cost for generated ic 24 : (0, 0.000000) count=0.999999
                                    189 ;	../strnlen.c: 40: }
                                    190 ;	genEndFunction
                                    191 ;	  adjustStack : cycles stk:38  incdec:26  adc:24
      00008B A6*00            [ 3]  192 	ldx	*(REGTEMP+0)
      00008D 85*01            [ 3]  193 	sta	*(REGTEMP+1)
      00008F BA               [ 2]  194 	tsx
      000090 8A               [ 2]  195 	txa
      000091 18               [ 2]  196 	clc
      000092 69 08            [ 2]  197 	adc	#0x08
      000094 AA               [ 2]  198 	tax
      000095 9A               [ 2]  199 	txs
      000096 A5*01            [ 3]  200 	lda	*(REGTEMP+1)
      000098 A6*00            [ 3]  201 	ldx	*(REGTEMP+0)
      00009A 60               [ 6]  202 	rts
                                    203 ;	Raw cost for generated ic 25 : (16, 30.000000) count=0.999999
                                    204 	.area CODE
                                    205 	.area RODATA
                                    206 	.area XINIT
                                    207 	.area CABS    (ABS)
