                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler
                                      3 ; Version 4.5.10 #15691 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _strstr
                                      6 	
      000000                          7 	.r65c02
                                      8 	.optsdcc -mmos65c02
                                      9 
                                     10 ;--------------------------------------------------------
                                     11 ;  Ordering of segments for the linker.
                                     12 ;--------------------------------------------------------
                                     13 	.area ZP      (PAG)
                                     14 	.area OSEG    (PAG, OVR)
                                     15 	.area _CODE
                                     16 	.area GSINIT
                                     17 	.area GSFINAL
                                     18 	.area CODE
                                     19 	.area RODATA
                                     20 	.area XINIT
                                     21 	.area _DATA
                                     22 	.area DATA
                                     23 	.area BSS
                                     24 ;--------------------------------------------------------
                                     25 ; Public variables in this module
                                     26 ;--------------------------------------------------------
                                     27 	.globl _strstr_PARM_2
                                     28 	.globl _strstr
                                     29 ;--------------------------------------------------------
                                     30 ; ZP ram data
                                     31 ;--------------------------------------------------------
                                     32 	.area ZP      (PAG)
                                     33 ;--------------------------------------------------------
                                     34 ; overlayable items in ram
                                     35 ;--------------------------------------------------------
                                     36 	.area	OSEG    (PAG, OVR)
      000000                         37 _strstr_sloc0_1_0:
      000000                         38 	.ds 2
      000002                         39 _strstr_sloc1_1_0:
      000002                         40 	.ds 2
      000004                         41 _strstr_sloc2_1_0:
      000004                         42 	.ds 2
      000006                         43 _strstr_sloc3_1_0:
      000006                         44 	.ds 2
      000008                         45 _strstr_sloc4_1_0:
      000008                         46 	.ds 2
                                     47 ;--------------------------------------------------------
                                     48 ; uninitialized external ram data
                                     49 ;--------------------------------------------------------
                                     50 	.area BSS
      000000                         51 _strstr_PARM_2:
      000000                         52 	.ds 2
      000002                         53 _strstr_cp_10000_28:
      000002                         54 	.ds 2
                                     55 ;--------------------------------------------------------
                                     56 ; absolute external ram data
                                     57 ;--------------------------------------------------------
                                     58 	.area DABS    (ABS)
                                     59 ;--------------------------------------------------------
                                     60 ; initialized external ram data
                                     61 ;--------------------------------------------------------
                                     62 	.area DATA
                                     63 ;--------------------------------------------------------
                                     64 ; global & static initialisations
                                     65 ;--------------------------------------------------------
                                     66 	.area _CODE
                                     67 	.area GSINIT
                                     68 	.area GSFINAL
                                     69 	.area GSINIT
                                     70 ;--------------------------------------------------------
                                     71 ; Home
                                     72 ;--------------------------------------------------------
                                     73 	.area _CODE
                                     74 	.area _CODE
                                     75 ;--------------------------------------------------------
                                     76 ; code
                                     77 ;--------------------------------------------------------
                                     78 	.area CODE
                                     79 ;------------------------------------------------------------
                                     80 ;Allocation info for local variables in function 'strstr'
                                     81 ;------------------------------------------------------------
                                     82 ;str2          Allocated with name '_strstr_PARM_2'
                                     83 ;str1          Allocated to registers a x 
                                     84 ;cp            Allocated with name '_strstr_cp_10000_28'
                                     85 ;s1            Allocated to registers 
                                     86 ;s2            Allocated to registers 
                                     87 ;sloc0         Allocated with name '_strstr_sloc0_1_0'
                                     88 ;sloc1         Allocated with name '_strstr_sloc1_1_0'
                                     89 ;sloc2         Allocated with name '_strstr_sloc2_1_0'
                                     90 ;sloc3         Allocated with name '_strstr_sloc3_1_0'
                                     91 ;sloc4         Allocated with name '_strstr_sloc4_1_0'
                                     92 ;------------------------------------------------------------
                                     93 ;	../_strstr.c: 31: char *strstr ( const char *str1, const char *str2 )
                                     94 ;	genLabel
                                     95 ;	Raw cost for generated ic 0 : (0, 0.000000) count=1.000000
                                     96 ;	-----------------------------------------
                                     97 ;	 function strstr
                                     98 ;	-----------------------------------------
                                     99 ;	Register assignment is optimal.
                                    100 ;	Stack space usage: 0 bytes.
      000000                        101 _strstr:
                                    102 ;	Raw cost for generated ic 1 : (0, 0.000000) count=1.000000
                                    103 ;	genReceive
                                    104 ;	Raw cost for generated ic 2 : (0, 0.000000) count=1.000000
                                    105 ;	../_strstr.c: 33: const char *cp = str1;
                                    106 ;	genAssign
                                    107 ;	genCopy
      000000 8Dr02r00         [ 4]  108 	sta	_strstr_cp_10000_28
      000003 8Er03r00         [ 4]  109 	stx	(_strstr_cp_10000_28 + 1)
                                    110 ;	Raw cost for generated ic 3 : (6, 8.000000) count=1.000000
                                    111 ;	../_strstr.c: 37: if (!*str2)
                                    112 ;	genAssign
                                    113 ;	genCopy
      000006 ACr01r00         [ 4]  114 	ldy	(_strstr_PARM_2 + 1)
      000009 84*01            [ 3]  115 	sty	*(_strstr_sloc0_1_0 + 1)
      00000B ACr00r00         [ 4]  116 	ldy	_strstr_PARM_2
      00000E 84*00            [ 3]  117 	sty	*_strstr_sloc0_1_0
                                    118 ;	Raw cost for generated ic 4 : (10, 14.000000) count=1.000000
                                    119 ;	genPointerGet
      000010 A0 00            [ 2]  120 	ldy	#0x00
      000012 B1*00            [ 6]  121 	lda	[*_strstr_sloc0_1_0],y
      000014 A8               [ 2]  122 	tay
      000015 ADr02r00         [ 4]  123 	lda	(_strstr_cp_10000_28+0)
                                    124 ;	Raw cost for generated ic 5 : (8, 13.000000) count=1.000000
                                    125 ;	genIfx
      000018 C0 00            [ 2]  126 	cpy	#0x00
                                    127 ;	genIfxJump : z
      00001A D0 01            [ 4]  128 	bne	00122$
                                    129 ;	Raw cost for generated ic 6 : (7, 7.600000) count=1.000000
                                    130 ;	../_strstr.c: 38: return ((char*)str1);
                                    131 ;	genRet
      00001C 60               [ 6]  132 	rts
                                    133 ;	Raw cost for generated ic 9 : (3, 3.000000) count=0.750000
                                    134 ;	../_strstr.c: 40: while (*cp)
                                    135 ;	genLabel
      00001D                        136 00122$:
                                    137 ;	Raw cost for generated ic 64 : (0, 0.000000) count=1.000000
                                    138 ;	genAssign
                                    139 ;	genCopy
      00001D 85*02            [ 3]  140 	sta	*_strstr_sloc1_1_0
      00001F 86*03            [ 3]  141 	stx	*(_strstr_sloc1_1_0 + 1)
                                    142 ;	Raw cost for generated ic 70 : (4, 6.000000) count=1.000000
                                    143 ;	genLabel
      000021                        144 00110$:
                                    145 ;	Raw cost for generated ic 11 : (0, 0.000000) count=3.999937
                                    146 ;	genPointerGet
      000021 A0 00            [ 2]  147 	ldy	#0x00
      000023 B1*02            [ 6]  148 	lda	[*_strstr_sloc1_1_0],y
                                    149 ;	Raw cost for generated ic 13 : (4, 7.000000) count=3.999937
                                    150 ;	genIfx
                                    151 ;	genIfxJump : z
      000025 F0 61            [ 4]  152 	beq	00112$
                                    153 ;	Raw cost for generated ic 14 : (5, 5.600000) count=3.999937
                                    154 ;	../_strstr.c: 43: s2 = str2;
                                    155 ;	genAssign
                                    156 ;	genCopy
      000027 A5*01            [ 3]  157 	lda	*(_strstr_sloc0_1_0 + 1)
      000029 85*05            [ 3]  158 	sta	*(_strstr_sloc2_1_0 + 1)
      00002B A5*00            [ 3]  159 	lda	*_strstr_sloc0_1_0
      00002D 85*04            [ 3]  160 	sta	*_strstr_sloc2_1_0
                                    161 ;	Raw cost for generated ic 18 : (8, 12.000000) count=2.999953
                                    162 ;	../_strstr.c: 45: while (*s1 && *s2 && !(*s1-*s2))
                                    163 ;	genAssign
                                    164 ;	genCopy
      00002F A5*03            [ 3]  165 	lda	*(_strstr_sloc1_1_0 + 1)
      000031 85*07            [ 3]  166 	sta	*(_strstr_sloc3_1_0 + 1)
      000033 A5*02            [ 3]  167 	lda	*_strstr_sloc1_1_0
      000035 85*06            [ 3]  168 	sta	*_strstr_sloc3_1_0
                                    169 ;	Raw cost for generated ic 65 : (8, 12.000000) count=2.999953
                                    170 ;	genLabel
      000037                        171 00105$:
                                    172 ;	Raw cost for generated ic 19 : (0, 0.000000) count=5.189096
                                    173 ;	genPointerGet
      000037 A0 00            [ 2]  174 	ldy	#0x00
      000039 B1*06            [ 6]  175 	lda	[*_strstr_sloc3_1_0],y
      00003B AA               [ 2]  176 	tax
                                    177 ;	Raw cost for generated ic 21 : (5, 9.000000) count=5.189096
                                    178 ;	genIfx
                                    179 ;	genIfxJump : z
      00003C F0 2A            [ 4]  180 	beq	00107$
                                    181 ;	Raw cost for generated ic 22 : (5, 5.600000) count=5.189096
                                    182 ;	genPointerGet
      00003E B1*04            [ 6]  183 	lda	[*_strstr_sloc2_1_0],y
      000040 A8               [ 2]  184 	tay
                                    185 ;	Raw cost for generated ic 26 : (3, 7.000000) count=3.891822
                                    186 ;	genIfx
                                    187 ;	genIfxJump : z
      000041 F0 25            [ 4]  188 	beq	00107$
                                    189 ;	Raw cost for generated ic 27 : (5, 5.600000) count=3.891822
                                    190 ;	genCast
                                    191 ;	genCopy
      000043 8A               [ 2]  192 	txa
      000044 A2 00            [ 2]  193 	ldx	#0x00
                                    194 ;	Raw cost for generated ic 32 : (3, 4.000000) count=2.918866
                                    195 ;	genCast
                                    196 ;	genCopy
      000046 86*09            [ 3]  197 	stx	*(_strstr_sloc4_1_0 + 1)
      000048 84*08            [ 3]  198 	sty	*_strstr_sloc4_1_0
                                    199 ;	Raw cost for generated ic 35 : (4, 6.000000) count=2.918866
                                    200 ;	genMinus
      00004A 38               [ 2]  201 	sec
      00004B E5*08            [ 4]  202 	sbc	*_strstr_sloc4_1_0
      00004D 48               [ 3]  203 	pha
      00004E 8A               [ 2]  204 	txa
      00004F E5*09            [ 4]  205 	sbc	*(_strstr_sloc4_1_0 + 1)
      000051 AA               [ 2]  206 	tax
      000052 68               [ 4]  207 	pla
                                    208 ;	Raw cost for generated ic 36 : (9, 19.000000) count=2.918866
                                    209 ;	genIfx
                                    210 ;	genIfxJump : z
      000053 D0 13            [ 4]  211 	bne	00107$
      000055 E0 00            [ 2]  212 	cpx	#0x00
      000057 D0 0F            [ 4]  213 	bne	00107$
                                    214 ;	Raw cost for generated ic 37 : (9, 10.200000) count=2.918866
                                    215 ;	../_strstr.c: 46: s1++, s2++;
                                    216 ;	genPlus
                                    217 ;	  genPlusInc
      000059 E6*06            [ 5]  218 	inc	*_strstr_sloc3_1_0
      00005B D0 02            [ 4]  219 	bne	00174$
      00005D E6*07            [ 5]  220 	inc	*(_strstr_sloc3_1_0 + 1)
      00005F                        221 00174$:
                                    222 ;	Raw cost for generated ic 41 : (6, 12.600000) count=2.189143
                                    223 ;	genPlus
                                    224 ;	  genPlusInc
      00005F E6*04            [ 5]  225 	inc	*_strstr_sloc2_1_0
      000061 D0 D4            [ 4]  226 	bne	00105$
      000063 E6*05            [ 5]  227 	inc	*(_strstr_sloc2_1_0 + 1)
                                    228 ;	Raw cost for generated ic 44 : (6, 12.600000) count=2.189143
                                    229 ;	genGoto
      000065 4Cr37r00         [ 3]  230 	jmp	00105$
                                    231 ;	Raw cost for generated ic 46 : (3, 3.000000) count=2.189143
                                    232 ;	genLabel
      000068                        233 00107$:
                                    234 ;	Raw cost for generated ic 47 : (0, 0.000000) count=2.999946
                                    235 ;	../_strstr.c: 48: if (!*s2)
                                    236 ;	genPointerGet
      000068 A0 00            [ 2]  237 	ldy	#0x00
      00006A B1*04            [ 6]  238 	lda	[*_strstr_sloc2_1_0],y
                                    239 ;	Raw cost for generated ic 49 : (4, 7.000000) count=2.999946
                                    240 ;	genIfx
                                    241 ;	genIfxJump : z
      00006C D0 07            [ 4]  242 	bne	00109$
                                    243 ;	Raw cost for generated ic 50 : (5, 5.600000) count=2.999946
                                    244 ;	../_strstr.c: 49: return ((char*)cp);
                                    245 ;	genRet
      00006E AEr03r00         [ 4]  246 	ldx	(_strstr_cp_10000_28 + 1)
      000071 ADr02r00         [ 4]  247 	lda	_strstr_cp_10000_28
      000074 60               [ 6]  248 	rts
                                    249 ;	Raw cost for generated ic 53 : (9, 11.000000) count=2.249953
                                    250 ;	genLabel
      000075                        251 00109$:
                                    252 ;	Raw cost for generated ic 54 : (0, 0.000000) count=2.999937
                                    253 ;	../_strstr.c: 51: cp++;
                                    254 ;	genPlus
                                    255 ;	  genPlusInc
      000075 E6*02            [ 5]  256 	inc	*_strstr_sloc1_1_0
      000077 D0 02            [ 4]  257 	bne	00178$
      000079 E6*03            [ 5]  258 	inc	*(_strstr_sloc1_1_0 + 1)
      00007B                        259 00178$:
                                    260 ;	Raw cost for generated ic 56 : (6, 12.600000) count=2.999937
                                    261 ;	genAssign
                                    262 ;	genCopy
      00007B A5*03            [ 3]  263 	lda	*(_strstr_sloc1_1_0 + 1)
      00007D 8Dr03r00         [ 4]  264 	sta	(_strstr_cp_10000_28 + 1)
      000080 A5*02            [ 3]  265 	lda	*_strstr_sloc1_1_0
      000082 8Dr02r00         [ 4]  266 	sta	_strstr_cp_10000_28
                                    267 ;	Raw cost for generated ic 57 : (10, 14.000000) count=2.999937
                                    268 ;	genGoto
      000085 4Cr21r00         [ 3]  269 	jmp	00110$
                                    270 ;	Raw cost for generated ic 58 : (3, 3.000000) count=2.999937
                                    271 ;	genLabel
      000088                        272 00112$:
                                    273 ;	Raw cost for generated ic 59 : (0, 0.000000) count=0.999984
                                    274 ;	../_strstr.c: 54: return (NULL) ;
                                    275 ;	genRet
      000088 A9 00            [ 2]  276 	lda	#0x00
      00008A AA               [ 2]  277 	tax
                                    278 ;	Raw cost for generated ic 60 : (3, 4.000000) count=0.999984
                                    279 ;	genLabel
                                    280 ;	Raw cost for generated ic 61 : (0, 0.000000) count=0.999984
                                    281 ;	../_strstr.c: 55: }
                                    282 ;	genEndFunction
      00008B 60               [ 6]  283 	rts
                                    284 ;	Raw cost for generated ic 62 : (1, 6.000000) count=0.999984
                                    285 	.area CODE
                                    286 	.area RODATA
                                    287 	.area XINIT
                                    288 	.area CABS    (ABS)
