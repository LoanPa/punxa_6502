                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler
                                      3 ; Version 4.5.10 #15691 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module powf
                                      6 	
      000000                          7 	.r65c02
                                      8 	.optsdcc -mmos65c02
                                      9 
                                     10 ;--------------------------------------------------------
                                     11 ;  Ordering of segments for the linker.
                                     12 ;--------------------------------------------------------
                                     13 	.area ZP      (PAG)
                                     14 	.area OSEG    (PAG, OVR)
                                     15 	.area _CODE
                                     16 	.area GSINIT
                                     17 	.area GSFINAL
                                     18 	.area CODE
                                     19 	.area RODATA
                                     20 	.area XINIT
                                     21 	.area _DATA
                                     22 	.area DATA
                                     23 	.area BSS
                                     24 ;--------------------------------------------------------
                                     25 ; Public variables in this module
                                     26 ;--------------------------------------------------------
                                     27 	.globl _logf
                                     28 	.globl _expf
                                     29 	.globl _powf_PARM_2
                                     30 	.globl _powf_PARM_1
                                     31 	.globl _powf
                                     32 ;--------------------------------------------------------
                                     33 ; ZP ram data
                                     34 ;--------------------------------------------------------
                                     35 	.area ZP      (PAG)
      000000                         36 _powf_sloc0_1_0:
      000000                         37 	.ds 4
                                     38 ;--------------------------------------------------------
                                     39 ; overlayable items in ram
                                     40 ;--------------------------------------------------------
                                     41 ;--------------------------------------------------------
                                     42 ; uninitialized external ram data
                                     43 ;--------------------------------------------------------
                                     44 	.area BSS
      000000                         45 _powf_PARM_1:
      000000                         46 	.ds 4
      000004                         47 _powf_PARM_2:
      000004                         48 	.ds 4
                                     49 ;--------------------------------------------------------
                                     50 ; absolute external ram data
                                     51 ;--------------------------------------------------------
                                     52 	.area DABS    (ABS)
                                     53 ;--------------------------------------------------------
                                     54 ; initialized external ram data
                                     55 ;--------------------------------------------------------
                                     56 	.area DATA
                                     57 ;--------------------------------------------------------
                                     58 ; global & static initialisations
                                     59 ;--------------------------------------------------------
                                     60 	.area _CODE
                                     61 	.area GSINIT
                                     62 	.area GSFINAL
                                     63 	.area GSINIT
                                     64 ;--------------------------------------------------------
                                     65 ; Home
                                     66 ;--------------------------------------------------------
                                     67 	.area _CODE
                                     68 	.area _CODE
                                     69 ;--------------------------------------------------------
                                     70 ; code
                                     71 ;--------------------------------------------------------
                                     72 	.area CODE
                                     73 ;------------------------------------------------------------
                                     74 ;Allocation info for local variables in function 'powf'
                                     75 ;------------------------------------------------------------
                                     76 ;sloc0         Allocated with name '_powf_sloc0_1_0'
                                     77 ;x             Allocated with name '_powf_PARM_1'
                                     78 ;y             Allocated with name '_powf_PARM_2'
                                     79 ;------------------------------------------------------------
                                     80 ;	../powf.c: 35: float powf(float x, float y)
                                     81 ;	genLabel
                                     82 ;	Raw cost for generated ic 0 : (0, 0.000000) count=1.000000
                                     83 ;	-----------------------------------------
                                     84 ;	 function powf
                                     85 ;	-----------------------------------------
                                     86 ;	Register assignment is optimal.
                                     87 ;	Stack space usage: 0 bytes.
      000000                         88 _powf:
                                     89 ;	Raw cost for generated ic 1 : (0, 0.000000) count=1.000000
                                     90 ;	../powf.c: 37: if(y == 0.0) return 1.0;
                                     91 ;	genIfx
      000000 ADr07r00         [ 4]   92 	lda	(_powf_PARM_2 + 3)
      000003 29 7F            [ 2]   93 	and	#0x7F
      000005 0Dr06r00         [ 4]   94 	ora	(_powf_PARM_2 + 2)
      000008 0Dr05r00         [ 4]   95 	ora	(_powf_PARM_2 + 1)
      00000B 0Dr04r00         [ 4]   96 	ora	_powf_PARM_2
                                     97 ;	genIfxJump : z
      00000E D0 0C            [ 4]   98 	bne	00102$
                                     99 ;	Raw cost for generated ic 2 : (19, 23.600000) count=1.000000
                                    100 ;	genRet
      000010 A9 00            [ 2]  101 	lda	#0x00
      000012 AA               [ 2]  102 	tax
      000013 A0 80            [ 2]  103 	ldy	#0x80
      000015 84*00            [ 3]  104 	sty	*___SDCC_m6502_ret2
      000017 A0 3F            [ 2]  105 	ldy	#0x3f
      000019 84*00            [ 3]  106 	sty	*___SDCC_m6502_ret3
      00001B 60               [ 6]  107 	rts
                                    108 ;	Raw cost for generated ic 5 : (14, 17.000000) count=0.750000
                                    109 ;	genLabel
      00001C                        110 00102$:
                                    111 ;	Raw cost for generated ic 6 : (0, 0.000000) count=1.000000
                                    112 ;	../powf.c: 38: if(y == 1.0) return x;
                                    113 ;	genAssign
                                    114 ;	genCopy
      00001C ADr07r00         [ 4]  115 	lda	(_powf_PARM_2 + 3)
      00001F 8Dr03r00         [ 4]  116 	sta	(___fseq_PARM_1 + 3)
      000022 ADr06r00         [ 4]  117 	lda	(_powf_PARM_2 + 2)
      000025 8Dr02r00         [ 4]  118 	sta	(___fseq_PARM_1 + 2)
      000028 ADr05r00         [ 4]  119 	lda	(_powf_PARM_2 + 1)
      00002B 8Dr01r00         [ 4]  120 	sta	(___fseq_PARM_1 + 1)
      00002E ADr04r00         [ 4]  121 	lda	_powf_PARM_2
      000031 8Dr00r00         [ 4]  122 	sta	___fseq_PARM_1
                                    123 ;	Raw cost for generated ic 27 : (24, 32.000000) count=1.000000
                                    124 ;	genAssign
                                    125 ;	genAssignLit
      000034 9Cr00r00         [ 4]  126 	stz	___fseq_PARM_2
      000037 9Cr01r00         [ 4]  127 	stz	(___fseq_PARM_2 + 1)
      00003A A2 80            [ 2]  128 	ldx	#0x80
      00003C 8Er02r00         [ 4]  129 	stx	(___fseq_PARM_2 + 2)
      00003F A2 3F            [ 2]  130 	ldx	#0x3f
      000041 8Er03r00         [ 4]  131 	stx	(___fseq_PARM_2 + 3)
                                    132 ;	Raw cost for generated ic 28 : (16, 20.000000) count=1.000000
                                    133 ;	genCall
      000044 20r00r00         [ 6]  134 	jsr	___fseq
                                    135 ;	assignResultValue
                                    136 ;	Raw cost for generated ic 29 : (3, 6.000000) count=1.000000
                                    137 ;	genIfx
      000047 C9 00            [ 2]  138 	cmp	#0x00
                                    139 ;	genIfxJump : z
      000049 F0 11            [ 4]  140 	beq	00104$
                                    141 ;	Raw cost for generated ic 8 : (7, 7.600000) count=1.000000
                                    142 ;	genRet
      00004B ADr03r00         [ 4]  143 	lda	(_powf_PARM_1 + 3)
      00004E 85*00            [ 3]  144 	sta	*___SDCC_m6502_ret3
      000050 ADr02r00         [ 4]  145 	lda	(_powf_PARM_1 + 2)
      000053 85*00            [ 3]  146 	sta	*___SDCC_m6502_ret2
      000055 AEr01r00         [ 4]  147 	ldx	(_powf_PARM_1 + 1)
      000058 ADr00r00         [ 4]  148 	lda	_powf_PARM_1
      00005B 60               [ 6]  149 	rts
                                    150 ;	Raw cost for generated ic 11 : (19, 25.000000) count=0.750000
                                    151 ;	genLabel
      00005C                        152 00104$:
                                    153 ;	Raw cost for generated ic 12 : (0, 0.000000) count=1.000000
                                    154 ;	../powf.c: 39: if(x <= 0.0) return 0.0;
                                    155 ;	genAssign
                                    156 ;	genAssignLit
      00005C 9Cr00r00         [ 4]  157 	stz	___fslt_PARM_1
      00005F 9Cr01r00         [ 4]  158 	stz	(___fslt_PARM_1 + 1)
      000062 9Cr02r00         [ 4]  159 	stz	(___fslt_PARM_1 + 2)
      000065 9Cr03r00         [ 4]  160 	stz	(___fslt_PARM_1 + 3)
                                    161 ;	Raw cost for generated ic 30 : (12, 16.000000) count=1.000000
                                    162 ;	genAssign
                                    163 ;	genCopy
      000068 ADr03r00         [ 4]  164 	lda	(_powf_PARM_1 + 3)
      00006B 8Dr03r00         [ 4]  165 	sta	(___fslt_PARM_2 + 3)
      00006E ADr02r00         [ 4]  166 	lda	(_powf_PARM_1 + 2)
      000071 8Dr02r00         [ 4]  167 	sta	(___fslt_PARM_2 + 2)
      000074 ADr01r00         [ 4]  168 	lda	(_powf_PARM_1 + 1)
      000077 8Dr01r00         [ 4]  169 	sta	(___fslt_PARM_2 + 1)
      00007A ADr00r00         [ 4]  170 	lda	_powf_PARM_1
      00007D 8Dr00r00         [ 4]  171 	sta	___fslt_PARM_2
                                    172 ;	Raw cost for generated ic 31 : (24, 32.000000) count=1.000000
                                    173 ;	genCall
      000080 20r00r00         [ 6]  174 	jsr	___fslt
                                    175 ;	assignResultValue
                                    176 ;	Raw cost for generated ic 32 : (3, 6.000000) count=1.000000
                                    177 ;	genIfx
      000083 C9 00            [ 2]  178 	cmp	#0x00
                                    179 ;	genIfxJump : z
      000085 D0 08            [ 4]  180 	bne	00106$
                                    181 ;	Raw cost for generated ic 14 : (7, 7.600000) count=1.000000
                                    182 ;	genRet
      000087 A9 00            [ 2]  183 	lda	#0x00
      000089 AA               [ 2]  184 	tax
      00008A 85*00            [ 3]  185 	sta	*___SDCC_m6502_ret2
      00008C 85*00            [ 3]  186 	sta	*___SDCC_m6502_ret3
      00008E 60               [ 6]  187 	rts
                                    188 ;	Raw cost for generated ic 17 : (10, 13.000000) count=0.750000
                                    189 ;	genLabel
      00008F                        190 00106$:
                                    191 ;	Raw cost for generated ic 18 : (0, 0.000000) count=1.000000
                                    192 ;	../powf.c: 40: return expf(logf(x) * y);
                                    193 ;	genAssign
                                    194 ;	genCopy
      00008F ADr03r00         [ 4]  195 	lda	(_powf_PARM_1 + 3)
      000092 8Dr03r00         [ 4]  196 	sta	(_logf_PARM_1 + 3)
      000095 ADr02r00         [ 4]  197 	lda	(_powf_PARM_1 + 2)
      000098 8Dr02r00         [ 4]  198 	sta	(_logf_PARM_1 + 2)
      00009B ADr01r00         [ 4]  199 	lda	(_powf_PARM_1 + 1)
      00009E 8Dr01r00         [ 4]  200 	sta	(_logf_PARM_1 + 1)
      0000A1 ADr00r00         [ 4]  201 	lda	_powf_PARM_1
      0000A4 8Dr00r00         [ 4]  202 	sta	_logf_PARM_1
                                    203 ;	Raw cost for generated ic 19 : (24, 32.000000) count=1.000000
                                    204 ;	genCall
      0000A7 20r00r00         [ 6]  205 	jsr	_logf
                                    206 ;	assignResultValue
      0000AA 8Dr00r00         [ 4]  207 	sta	___fsmul_PARM_1
      0000AD 8Er01r00         [ 4]  208 	stx	(___fsmul_PARM_1 + 1)
      0000B0 A5*00            [ 3]  209 	lda	*___SDCC_m6502_ret2
      0000B2 8Dr02r00         [ 4]  210 	sta	(___fsmul_PARM_1 + 2)
      0000B5 A5*00            [ 3]  211 	lda	*___SDCC_m6502_ret3
      0000B7 8Dr03r00         [ 4]  212 	sta	(___fsmul_PARM_1 + 3)
                                    213 ;	Raw cost for generated ic 20 : (19, 28.000000) count=1.000000
                                    214 ;	genAssign
                                    215 ;	genCopy
      0000BA ADr07r00         [ 4]  216 	lda	(_powf_PARM_2 + 3)
      0000BD 8Dr03r00         [ 4]  217 	sta	(___fsmul_PARM_2 + 3)
      0000C0 ADr06r00         [ 4]  218 	lda	(_powf_PARM_2 + 2)
      0000C3 8Dr02r00         [ 4]  219 	sta	(___fsmul_PARM_2 + 2)
      0000C6 ADr05r00         [ 4]  220 	lda	(_powf_PARM_2 + 1)
      0000C9 8Dr01r00         [ 4]  221 	sta	(___fsmul_PARM_2 + 1)
      0000CC ADr04r00         [ 4]  222 	lda	_powf_PARM_2
      0000CF 8Dr00r00         [ 4]  223 	sta	___fsmul_PARM_2
                                    224 ;	Raw cost for generated ic 34 : (24, 32.000000) count=1.000000
                                    225 ;	genCall
      0000D2 20r00r00         [ 6]  226 	jsr	___fsmul
                                    227 ;	assignResultValue
      0000D5 8Dr00r00         [ 4]  228 	sta	_expf_PARM_1
      0000D8 8Er01r00         [ 4]  229 	stx	(_expf_PARM_1 + 1)
      0000DB A5*00            [ 3]  230 	lda	*___SDCC_m6502_ret2
      0000DD 8Dr02r00         [ 4]  231 	sta	(_expf_PARM_1 + 2)
      0000E0 A5*00            [ 3]  232 	lda	*___SDCC_m6502_ret3
      0000E2 8Dr03r00         [ 4]  233 	sta	(_expf_PARM_1 + 3)
                                    234 ;	Raw cost for generated ic 35 : (19, 28.000000) count=1.000000
                                    235 ;	genCall
      0000E5 20r00r00         [ 6]  236 	jsr	_expf
                                    237 ;	assignResultValue
      0000E8 85*00            [ 3]  238 	sta	*_powf_sloc0_1_0
      0000EA 86*01            [ 3]  239 	stx	*(_powf_sloc0_1_0 + 1)
      0000EC A5*00            [ 3]  240 	lda	*___SDCC_m6502_ret2
      0000EE 85*02            [ 3]  241 	sta	*(_powf_sloc0_1_0 + 2)
      0000F0 A5*00            [ 3]  242 	lda	*___SDCC_m6502_ret3
      0000F2 85*03            [ 3]  243 	sta	*(_powf_sloc0_1_0 + 3)
                                    244 ;	Raw cost for generated ic 23 : (15, 24.000000) count=1.000000
                                    245 ;	genRet
      0000F4 85*00            [ 3]  246 	sta	*___SDCC_m6502_ret3
      0000F6 A5*02            [ 3]  247 	lda	*(_powf_sloc0_1_0 + 2)
      0000F8 85*00            [ 3]  248 	sta	*___SDCC_m6502_ret2
      0000FA A5*00            [ 3]  249 	lda	*_powf_sloc0_1_0
                                    250 ;	Raw cost for generated ic 24 : (8, 12.000000) count=1.000000
                                    251 ;	genLabel
                                    252 ;	Raw cost for generated ic 25 : (0, 0.000000) count=1.000000
                                    253 ;	../powf.c: 41: }
                                    254 ;	genEndFunction
      0000FC 60               [ 6]  255 	rts
                                    256 ;	Raw cost for generated ic 26 : (1, 6.000000) count=1.000000
                                    257 	.area CODE
                                    258 	.area RODATA
                                    259 	.area XINIT
                                    260 	.area CABS    (ABS)
