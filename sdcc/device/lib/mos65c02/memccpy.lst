                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler
                                      3 ; Version 4.5.10 #15691 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module memccpy
                                      6 	
      000000                          7 	.r65c02
                                      8 	.optsdcc -mmos65c02
                                      9 
                                     10 ;--------------------------------------------------------
                                     11 ;  Ordering of segments for the linker.
                                     12 ;--------------------------------------------------------
                                     13 	.area ZP      (PAG)
                                     14 	.area OSEG    (PAG, OVR)
                                     15 	.area _CODE
                                     16 	.area GSINIT
                                     17 	.area GSFINAL
                                     18 	.area CODE
                                     19 	.area RODATA
                                     20 	.area XINIT
                                     21 	.area _DATA
                                     22 	.area DATA
                                     23 	.area BSS
                                     24 ;--------------------------------------------------------
                                     25 ; Public variables in this module
                                     26 ;--------------------------------------------------------
                                     27 	.globl _memccpy_PARM_4
                                     28 	.globl _memccpy_PARM_3
                                     29 	.globl _memccpy_PARM_2
                                     30 	.globl _memccpy
                                     31 ;--------------------------------------------------------
                                     32 ; ZP ram data
                                     33 ;--------------------------------------------------------
                                     34 	.area ZP      (PAG)
                                     35 ;--------------------------------------------------------
                                     36 ; overlayable items in ram
                                     37 ;--------------------------------------------------------
                                     38 	.area	OSEG    (PAG, OVR)
      000000                         39 _memccpy_sloc0_1_0:
      000000                         40 	.ds 2
      000002                         41 _memccpy_sloc1_1_0:
      000002                         42 	.ds 2
      000004                         43 _memccpy_sloc2_1_0:
      000004                         44 	.ds 2
      000006                         45 _memccpy_sloc3_1_0:
      000006                         46 	.ds 1
                                     47 ;--------------------------------------------------------
                                     48 ; uninitialized external ram data
                                     49 ;--------------------------------------------------------
                                     50 	.area BSS
      000000                         51 _memccpy_PARM_2:
      000000                         52 	.ds 2
      000002                         53 _memccpy_PARM_3:
      000002                         54 	.ds 2
      000004                         55 _memccpy_PARM_4:
      000004                         56 	.ds 2
                                     57 ;--------------------------------------------------------
                                     58 ; absolute external ram data
                                     59 ;--------------------------------------------------------
                                     60 	.area DABS    (ABS)
                                     61 ;--------------------------------------------------------
                                     62 ; initialized external ram data
                                     63 ;--------------------------------------------------------
                                     64 	.area DATA
                                     65 ;--------------------------------------------------------
                                     66 ; global & static initialisations
                                     67 ;--------------------------------------------------------
                                     68 	.area _CODE
                                     69 	.area GSINIT
                                     70 	.area GSFINAL
                                     71 	.area GSINIT
                                     72 ;--------------------------------------------------------
                                     73 ; Home
                                     74 ;--------------------------------------------------------
                                     75 	.area _CODE
                                     76 	.area _CODE
                                     77 ;--------------------------------------------------------
                                     78 ; code
                                     79 ;--------------------------------------------------------
                                     80 	.area CODE
                                     81 ;------------------------------------------------------------
                                     82 ;Allocation info for local variables in function 'memccpy'
                                     83 ;------------------------------------------------------------
                                     84 ;src           Allocated with name '_memccpy_PARM_2'
                                     85 ;c             Allocated with name '_memccpy_PARM_3'
                                     86 ;n             Allocated with name '_memccpy_PARM_4'
                                     87 ;dst           Allocated to registers a x 
                                     88 ;d             Allocated to registers a x 
                                     89 ;s             Allocated to registers 
                                     90 ;sloc0         Allocated with name '_memccpy_sloc0_1_0'
                                     91 ;sloc1         Allocated with name '_memccpy_sloc1_1_0'
                                     92 ;sloc2         Allocated with name '_memccpy_sloc2_1_0'
                                     93 ;sloc3         Allocated with name '_memccpy_sloc3_1_0'
                                     94 ;------------------------------------------------------------
                                     95 ;	../memccpy.c: 31: void *memccpy (void *restrict dst, const void *restrict src, int c, size_t n)
                                     96 ;	genLabel
                                     97 ;	Raw cost for generated ic 0 : (0, 0.000000) count=1.000000
                                     98 ;	-----------------------------------------
                                     99 ;	 function memccpy
                                    100 ;	-----------------------------------------
                                    101 ;	Register assignment is optimal.
                                    102 ;	Stack space usage: 0 bytes.
      000000                        103 _memccpy:
                                    104 ;	Raw cost for generated ic 1 : (0, 0.000000) count=1.000000
                                    105 ;	genReceive
                                    106 ;	Raw cost for generated ic 2 : (0, 0.000000) count=1.000000
                                    107 ;	../memccpy.c: 33: char *d = dst;
                                    108 ;	genCast
                                    109 ;	genCopy
      000000 85*00            [ 3]  110 	sta	*_memccpy_sloc0_1_0
      000002 86*01            [ 3]  111 	stx	*(_memccpy_sloc0_1_0 + 1)
                                    112 ;	Raw cost for generated ic 3 : (4, 6.000000) count=1.000000
                                    113 ;	../memccpy.c: 34: const char *s = src;
                                    114 ;	genCast
                                    115 ;	genCopy
      000004 ADr01r00         [ 4]  116 	lda	(_memccpy_PARM_2 + 1)
      000007 85*03            [ 3]  117 	sta	*(_memccpy_sloc1_1_0 + 1)
      000009 ADr00r00         [ 4]  118 	lda	_memccpy_PARM_2
      00000C 85*02            [ 3]  119 	sta	*_memccpy_sloc1_1_0
                                    120 ;	Raw cost for generated ic 5 : (10, 14.000000) count=1.000000
                                    121 ;	../memccpy.c: 36: while (n--)
                                    122 ;	genAssign
                                    123 ;	genCopy
      00000E ADr05r00         [ 4]  124 	lda	(_memccpy_PARM_4 + 1)
      000011 85*05            [ 3]  125 	sta	*(_memccpy_sloc2_1_0 + 1)
      000013 ADr04r00         [ 4]  126 	lda	_memccpy_PARM_4
      000016 85*04            [ 3]  127 	sta	*_memccpy_sloc2_1_0
                                    128 ;	Raw cost for generated ic 38 : (10, 14.000000) count=1.000000
                                    129 ;	genLabel
      000018                        130 00103$:
                                    131 ;	Raw cost for generated ic 7 : (0, 0.000000) count=2.285713
                                    132 ;	genAssign
                                    133 ;	genCopy
      000018 A6*05            [ 3]  134 	ldx	*(_memccpy_sloc2_1_0 + 1)
      00001A A5*04            [ 3]  135 	lda	*_memccpy_sloc2_1_0
                                    136 ;	Raw cost for generated ic 8 : (4, 6.000000) count=2.285713
                                    137 ;	genMinus
                                    138 ;	  genMinusDec - size=2  icount=1
      00001C A4*04            [ 3]  139 	ldy	*_memccpy_sloc2_1_0
      00001E D0 02            [ 4]  140 	bne	00129$
      000020 C6*05            [ 5]  141 	dec	*(_memccpy_sloc2_1_0 + 1)
      000022                        142 00129$:
      000022 C6*04            [ 5]  143 	dec	*_memccpy_sloc2_1_0
                                    144 ;	Raw cost for generated ic 9 : (8, 15.600000) count=2.285713
                                    145 ;	genIfx
      000024 C9 00            [ 2]  146 	cmp	#0x00
                                    147 ;	genIfxJump : z
      000026 D0 04            [ 4]  148 	bne	00131$
      000028 E0 00            [ 2]  149 	cpx	#0x00
      00002A F0 20            [ 4]  150 	beq	00105$
      00002C                        151 00131$:
                                    152 ;	Raw cost for generated ic 11 : (11, 12.200000) count=2.285713
                                    153 ;	../memccpy.c: 37: if ((*d++ = *s++) == (unsigned char)c)
                                    154 ;	genPointerGet
      00002C A0 00            [ 2]  155 	ldy	#0x00
      00002E B1*02            [ 6]  156 	lda	[*_memccpy_sloc1_1_0],y
      000030 85*06            [ 3]  157 	sta	*_memccpy_sloc3_1_0
                                    158 ;	Raw cost for generated ic 20 : (6, 10.000000) count=1.714284
                                    159 ;	genPlus
                                    160 ;	  genPlusInc
      000032 E6*02            [ 5]  161 	inc	*_memccpy_sloc1_1_0
      000034 D0 02            [ 4]  162 	bne	00132$
      000036 E6*03            [ 5]  163 	inc	*(_memccpy_sloc1_1_0 + 1)
      000038                        164 00132$:
                                    165 ;	Raw cost for generated ic 18 : (6, 12.600000) count=1.714284
                                    166 ;	genPointerSet
      000038 91*00            [ 6]  167 	sta	[*_memccpy_sloc0_1_0],y
                                    168 ;	Raw cost for generated ic 21 : (2, 6.000000) count=1.714284
                                    169 ;	genPlus
                                    170 ;	  genPlusInc
      00003A E6*00            [ 5]  171 	inc	*_memccpy_sloc0_1_0
      00003C D0 02            [ 4]  172 	bne	00133$
      00003E E6*01            [ 5]  173 	inc	*(_memccpy_sloc0_1_0 + 1)
      000040                        174 00133$:
                                    175 ;	Raw cost for generated ic 15 : (6, 12.600000) count=1.714284
                                    176 ;	genAssign
                                    177 ;	genCopy
      000040 A6*01            [ 3]  178 	ldx	*(_memccpy_sloc0_1_0 + 1)
      000042 A5*00            [ 3]  179 	lda	*_memccpy_sloc0_1_0
                                    180 ;	Raw cost for generated ic 16 : (4, 6.000000) count=1.714284
                                    181 ;	genCast
                                    182 ;	genCopy
      000044 ACr02r00         [ 4]  183 	ldy	_memccpy_PARM_3
                                    184 ;	Raw cost for generated ic 22 : (3, 4.000000) count=1.714284
                                    185 ;	genCmpEQorNE
      000047 C4*06            [ 3]  186 	cpy	*_memccpy_sloc3_1_0
      000049 D0 CD            [ 4]  187 	bne	00103$
                                    188 ;	Raw cost for generated ic 23 : (7, 8.600000) count=1.714284
                                    189 ;	skipping generated iCode
                                    190 ;	Raw cost for generated ic 24 : (0, 0.000000) count=1.714284
                                    191 ;	../memccpy.c: 38: return (d);
                                    192 ;	genCast
                                    193 ;	genCopy
                                    194 ;	Raw cost for generated ic 27 : (0, 0.000000) count=0.428570
                                    195 ;	genRet
      00004B 60               [ 6]  196 	rts
                                    197 ;	Raw cost for generated ic 28 : (3, 3.000000) count=0.428570
                                    198 ;	genLabel
      00004C                        199 00105$:
                                    200 ;	Raw cost for generated ic 31 : (0, 0.000000) count=0.999998
                                    201 ;	../memccpy.c: 40: return (0);
                                    202 ;	genRet
      00004C A9 00            [ 2]  203 	lda	#0x00
      00004E AA               [ 2]  204 	tax
                                    205 ;	Raw cost for generated ic 32 : (3, 4.000000) count=0.999998
                                    206 ;	genLabel
                                    207 ;	Raw cost for generated ic 33 : (0, 0.000000) count=0.999998
                                    208 ;	../memccpy.c: 41: }
                                    209 ;	genEndFunction
      00004F 60               [ 6]  210 	rts
                                    211 ;	Raw cost for generated ic 34 : (1, 6.000000) count=0.999998
                                    212 	.area CODE
                                    213 	.area RODATA
                                    214 	.area XINIT
                                    215 	.area CABS    (ABS)
