                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler
                                      3 ; Version 4.5.10 #15691 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module wcrtomb
                                      6 	
      000000                          7 	.r65c02
                                      8 	.optsdcc -mmos65c02
                                      9 
                                     10 ;--------------------------------------------------------
                                     11 ;  Ordering of segments for the linker.
                                     12 ;--------------------------------------------------------
                                     13 	.area ZP      (PAG)
                                     14 	.area OSEG    (PAG, OVR)
                                     15 	.area _CODE
                                     16 	.area GSINIT
                                     17 	.area GSFINAL
                                     18 	.area CODE
                                     19 	.area RODATA
                                     20 	.area XINIT
                                     21 	.area _DATA
                                     22 	.area DATA
                                     23 	.area BSS
                                     24 ;--------------------------------------------------------
                                     25 ; Public variables in this module
                                     26 ;--------------------------------------------------------
                                     27 	.globl _wctomb
                                     28 	.globl _wcrtomb_PARM_3
                                     29 	.globl _wcrtomb_PARM_2
                                     30 	.globl _wcrtomb
                                     31 ;--------------------------------------------------------
                                     32 ; ZP ram data
                                     33 ;--------------------------------------------------------
                                     34 	.area ZP      (PAG)
                                     35 ;--------------------------------------------------------
                                     36 ; overlayable items in ram
                                     37 ;--------------------------------------------------------
                                     38 ;--------------------------------------------------------
                                     39 ; uninitialized external ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area BSS
      000000                         42 _wcrtomb_PARM_2:
      000000                         43 	.ds 4
      000004                         44 _wcrtomb_PARM_3:
      000004                         45 	.ds 2
                                     46 ;--------------------------------------------------------
                                     47 ; absolute external ram data
                                     48 ;--------------------------------------------------------
                                     49 	.area DABS    (ABS)
                                     50 ;--------------------------------------------------------
                                     51 ; initialized external ram data
                                     52 ;--------------------------------------------------------
                                     53 	.area DATA
                                     54 ;--------------------------------------------------------
                                     55 ; global & static initialisations
                                     56 ;--------------------------------------------------------
                                     57 	.area _CODE
                                     58 	.area GSINIT
                                     59 	.area GSFINAL
                                     60 	.area GSINIT
                                     61 ;--------------------------------------------------------
                                     62 ; Home
                                     63 ;--------------------------------------------------------
                                     64 	.area _CODE
                                     65 	.area _CODE
                                     66 ;--------------------------------------------------------
                                     67 ; code
                                     68 ;--------------------------------------------------------
                                     69 	.area CODE
                                     70 ;------------------------------------------------------------
                                     71 ;Allocation info for local variables in function 'wcrtomb'
                                     72 ;------------------------------------------------------------
                                     73 ;wc            Allocated with name '_wcrtomb_PARM_2'
                                     74 ;ps            Allocated with name '_wcrtomb_PARM_3'
                                     75 ;s             Allocated to registers a x 
                                     76 ;ret           Allocated to registers a x 
                                     77 ;------------------------------------------------------------
                                     78 ;	../wcrtomb.c: 34: size_t wcrtomb(char *restrict s, wchar_t wc, mbstate_t *restrict ps)
                                     79 ;	genLabel
                                     80 ;	Raw cost for generated ic 0 : (0, 0.000000) count=1.000000
                                     81 ;	-----------------------------------------
                                     82 ;	 function wcrtomb
                                     83 ;	-----------------------------------------
                                     84 ;	Register assignment is optimal.
                                     85 ;	Stack space usage: 0 bytes.
      000000                         86 _wcrtomb:
                                     87 ;	Raw cost for generated ic 1 : (0, 0.000000) count=1.000000
                                     88 ;	genReceive
                                     89 ;	Raw cost for generated ic 2 : (0, 0.000000) count=1.000000
                                     90 ;	../wcrtomb.c: 40: ret = wctomb(s, wc);
                                     91 ;	genAssign
                                     92 ;	genCopy
      000000 ACr03r00         [ 4]   93 	ldy	(_wcrtomb_PARM_2 + 3)
      000003 8Cr03r00         [ 4]   94 	sty	(_wctomb_PARM_2 + 3)
      000006 ACr02r00         [ 4]   95 	ldy	(_wcrtomb_PARM_2 + 2)
      000009 8Cr02r00         [ 4]   96 	sty	(_wctomb_PARM_2 + 2)
      00000C ACr01r00         [ 4]   97 	ldy	(_wcrtomb_PARM_2 + 1)
      00000F 8Cr01r00         [ 4]   98 	sty	(_wctomb_PARM_2 + 1)
      000012 ACr00r00         [ 4]   99 	ldy	_wcrtomb_PARM_2
      000015 8Cr00r00         [ 4]  100 	sty	_wctomb_PARM_2
                                    101 ;	Raw cost for generated ic 4 : (24, 32.000000) count=1.000000
                                    102 ;	Raw cost for generated ic 3 : (0, 0.000000) count=1.000000
                                    103 ;	genCall
                                    104 ;	genSend
      000018 20r00r00         [ 6]  105 	jsr	_wctomb
                                    106 ;	assignResultValue
                                    107 ;	Raw cost for generated ic 5 : (3, 6.000000) count=1.000000
                                    108 ;	../wcrtomb.c: 42: if(ret == (size_t)(-1))
                                    109 ;	genCmpEQorNE
      00001B C9 FF            [ 2]  110 	cmp	#0xff
      00001D D0 0D            [ 4]  111 	bne	00102$
      00001F E0 FF            [ 2]  112 	cpx	#0xff
      000021 F0 01            [ 4]  113 	beq	00113$
      000023 60               [ 6]  114 	rts
      000024                        115 00113$:
                                    116 ;	Raw cost for generated ic 7 : (14, 15.200001) count=1.000000
                                    117 ;	skipping generated iCode
                                    118 ;	Raw cost for generated ic 8 : (0, 0.000000) count=1.000000
                                    119 ;	../wcrtomb.c: 43: errno = EILSEQ;
                                    120 ;	genAssign
                                    121 ;	genAssignLit
      000024 A0 54            [ 2]  122 	ldy	#0x54
      000026 8Cr00r00         [ 4]  123 	sty	_errno
      000029 9Cr01r00         [ 4]  124 	stz	(_errno + 1)
                                    125 ;	Raw cost for generated ic 12 : (8, 10.000000) count=0.750000
                                    126 ;	genLabel
      00002C                        127 00102$:
                                    128 ;	Raw cost for generated ic 13 : (0, 0.000000) count=1.000000
                                    129 ;	../wcrtomb.c: 45: return(ret);
                                    130 ;	genRet
                                    131 ;	Raw cost for generated ic 14 : (0, 0.000000) count=1.000000
                                    132 ;	genLabel
                                    133 ;	Raw cost for generated ic 15 : (0, 0.000000) count=1.000000
                                    134 ;	../wcrtomb.c: 46: }
                                    135 ;	genEndFunction
      00002C 60               [ 6]  136 	rts
                                    137 ;	Raw cost for generated ic 16 : (1, 6.000000) count=1.000000
                                    138 	.area CODE
                                    139 	.area RODATA
                                    140 	.area XINIT
                                    141 	.area CABS    (ABS)
