                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler
                                      3 ; Version 4.5.10 #15691 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _strncmp
                                      6 	
      000000                          7 	.r65c02
                                      8 	.optsdcc -mmos65c02
                                      9 
                                     10 ;--------------------------------------------------------
                                     11 ;  Ordering of segments for the linker.
                                     12 ;--------------------------------------------------------
                                     13 	.area ZP      (PAG)
                                     14 	.area OSEG    (PAG, OVR)
                                     15 	.area _CODE
                                     16 	.area GSINIT
                                     17 	.area GSFINAL
                                     18 	.area CODE
                                     19 	.area RODATA
                                     20 	.area XINIT
                                     21 	.area _DATA
                                     22 	.area DATA
                                     23 	.area BSS
                                     24 ;--------------------------------------------------------
                                     25 ; Public variables in this module
                                     26 ;--------------------------------------------------------
                                     27 	.globl _strncmp_PARM_3
                                     28 	.globl _strncmp_PARM_2
                                     29 	.globl _strncmp
                                     30 ;--------------------------------------------------------
                                     31 ; ZP ram data
                                     32 ;--------------------------------------------------------
                                     33 	.area ZP      (PAG)
                                     34 ;--------------------------------------------------------
                                     35 ; overlayable items in ram
                                     36 ;--------------------------------------------------------
                                     37 	.area	OSEG    (PAG, OVR)
      000000                         38 _strncmp_sloc0_1_0:
      000000                         39 	.ds 2
      000002                         40 _strncmp_sloc1_1_0:
      000002                         41 	.ds 2
      000004                         42 _strncmp_sloc2_1_0:
      000004                         43 	.ds 2
                                     44 ;--------------------------------------------------------
                                     45 ; uninitialized external ram data
                                     46 ;--------------------------------------------------------
                                     47 	.area BSS
      000000                         48 _strncmp_PARM_2:
      000000                         49 	.ds 2
      000002                         50 _strncmp_PARM_3:
      000002                         51 	.ds 2
                                     52 ;--------------------------------------------------------
                                     53 ; absolute external ram data
                                     54 ;--------------------------------------------------------
                                     55 	.area DABS    (ABS)
                                     56 ;--------------------------------------------------------
                                     57 ; initialized external ram data
                                     58 ;--------------------------------------------------------
                                     59 	.area DATA
                                     60 ;--------------------------------------------------------
                                     61 ; global & static initialisations
                                     62 ;--------------------------------------------------------
                                     63 	.area _CODE
                                     64 	.area GSINIT
                                     65 	.area GSFINAL
                                     66 	.area GSINIT
                                     67 ;--------------------------------------------------------
                                     68 ; Home
                                     69 ;--------------------------------------------------------
                                     70 	.area _CODE
                                     71 	.area _CODE
                                     72 ;--------------------------------------------------------
                                     73 ; code
                                     74 ;--------------------------------------------------------
                                     75 	.area CODE
                                     76 ;------------------------------------------------------------
                                     77 ;Allocation info for local variables in function 'strncmp'
                                     78 ;------------------------------------------------------------
                                     79 ;last          Allocated with name '_strncmp_PARM_2'
                                     80 ;count         Allocated with name '_strncmp_PARM_3'
                                     81 ;first         Allocated to registers a x 
                                     82 ;sloc0         Allocated with name '_strncmp_sloc0_1_0'
                                     83 ;sloc1         Allocated with name '_strncmp_sloc1_1_0'
                                     84 ;sloc2         Allocated with name '_strncmp_sloc2_1_0'
                                     85 ;------------------------------------------------------------
                                     86 ;	../_strncmp.c: 31: int strncmp ( const char * first, const char * last, size_t count )
                                     87 ;	genLabel
                                     88 ;	Raw cost for generated ic 0 : (0, 0.000000) count=1.000000
                                     89 ;	-----------------------------------------
                                     90 ;	 function strncmp
                                     91 ;	-----------------------------------------
                                     92 ;	Register assignment is optimal.
                                     93 ;	Stack space usage: 0 bytes.
      000000                         94 _strncmp:
                                     95 ;	Raw cost for generated ic 1 : (0, 0.000000) count=1.000000
                                     96 ;	genReceive
                                     97 ;	Raw cost for generated ic 2 : (0, 0.000000) count=1.000000
                                     98 ;	../_strncmp.c: 33: if (!count)
                                     99 ;	genIfx
      000000 85*00            [ 3]  100 	sta	*(REGTEMP+0)
      000002 ADr03r00         [ 4]  101 	lda	(_strncmp_PARM_3 + 1)
      000005 0Dr02r00         [ 4]  102 	ora	_strncmp_PARM_3
      000008 08               [ 3]  103 	php
      000009 A5*00            [ 3]  104 	lda	*(REGTEMP+0)
      00000B 28               [ 4]  105 	plp
                                    106 ;	genIfxJump : z
      00000C D0 04            [ 4]  107 	bne	00114$
                                    108 ;	Raw cost for generated ic 3 : (17, 26.600000) count=1.000000
                                    109 ;	../_strncmp.c: 34: return(0);
                                    110 ;	genRet
      00000E A9 00            [ 2]  111 	lda	#0x00
      000010 AA               [ 2]  112 	tax
      000011 60               [ 6]  113 	rts
                                    114 ;	Raw cost for generated ic 6 : (6, 7.000000) count=0.750000
                                    115 ;	../_strncmp.c: 36: while (--count && *first && *first == *last) {
                                    116 ;	genLabel
      000012                        117 00114$:
                                    118 ;	Raw cost for generated ic 45 : (0, 0.000000) count=1.000000
                                    119 ;	genAssign
                                    120 ;	genCopy
      000012 85*00            [ 3]  121 	sta	*_strncmp_sloc0_1_0
      000014 86*01            [ 3]  122 	stx	*(_strncmp_sloc0_1_0 + 1)
                                    123 ;	Raw cost for generated ic 46 : (4, 6.000000) count=1.000000
                                    124 ;	genAssign
                                    125 ;	genCopy
      000016 ADr01r00         [ 4]  126 	lda	(_strncmp_PARM_2 + 1)
      000019 85*03            [ 3]  127 	sta	*(_strncmp_sloc1_1_0 + 1)
      00001B ADr00r00         [ 4]  128 	lda	_strncmp_PARM_2
      00001E 85*02            [ 3]  129 	sta	*_strncmp_sloc1_1_0
                                    130 ;	Raw cost for generated ic 49 : (10, 14.000000) count=1.000000
                                    131 ;	genAssign
                                    132 ;	genCopy
      000020 ADr03r00         [ 4]  133 	lda	(_strncmp_PARM_3 + 1)
      000023 85*05            [ 3]  134 	sta	*(_strncmp_sloc2_1_0 + 1)
      000025 ADr02r00         [ 4]  135 	lda	_strncmp_PARM_3
      000028 85*04            [ 3]  136 	sta	*_strncmp_sloc2_1_0
                                    137 ;	Raw cost for generated ic 51 : (10, 14.000000) count=1.000000
                                    138 ;	genLabel
      00002A                        139 00105$:
                                    140 ;	Raw cost for generated ic 8 : (0, 0.000000) count=1.729728
                                    141 ;	genMinus
                                    142 ;	  genMinusDec - size=2  icount=1
      00002A A5*04            [ 3]  143 	lda	*_strncmp_sloc2_1_0
      00002C D0 02            [ 4]  144 	bne	00143$
      00002E C6*05            [ 5]  145 	dec	*(_strncmp_sloc2_1_0 + 1)
      000030                        146 00143$:
      000030 C6*04            [ 5]  147 	dec	*_strncmp_sloc2_1_0
                                    148 ;	Raw cost for generated ic 9 : (8, 15.600000) count=1.729728
                                    149 ;	genIfx
      000032 A5*05            [ 3]  150 	lda	*(_strncmp_sloc2_1_0 + 1)
      000034 05*04            [ 3]  151 	ora	*_strncmp_sloc2_1_0
                                    152 ;	genIfxJump : z
      000036 F0 1E            [ 4]  153 	beq	00107$
                                    154 ;	Raw cost for generated ic 11 : (9, 11.600000) count=1.729728
                                    155 ;	genPointerGet
      000038 A0 00            [ 2]  156 	ldy	#0x00
      00003A B1*00            [ 6]  157 	lda	[*_strncmp_sloc0_1_0],y
      00003C AA               [ 2]  158 	tax
                                    159 ;	Raw cost for generated ic 15 : (5, 9.000000) count=1.297296
                                    160 ;	genIfx
                                    161 ;	genIfxJump : z
      00003D F0 17            [ 4]  162 	beq	00107$
                                    163 ;	Raw cost for generated ic 16 : (5, 5.600000) count=1.297296
                                    164 ;	genPointerGet
      00003F B1*02            [ 6]  165 	lda	[*_strncmp_sloc1_1_0],y
                                    166 ;	Raw cost for generated ic 22 : (2, 5.000000) count=0.972971
                                    167 ;	genCmpEQorNE
      000041 86*00            [ 3]  168 	stx	*(REGTEMP+0)
      000043 C5*00            [ 3]  169 	cmp	*(REGTEMP+0)
      000045 D0 0F            [ 4]  170 	bne	00107$
                                    171 ;	Raw cost for generated ic 23 : (9, 11.600000) count=0.972971
                                    172 ;	skipping generated iCode
                                    173 ;	Raw cost for generated ic 24 : (0, 0.000000) count=0.972971
                                    174 ;	../_strncmp.c: 37: first++;
                                    175 ;	genPlus
                                    176 ;	  genPlusInc
      000047 E6*00            [ 5]  177 	inc	*_strncmp_sloc0_1_0
      000049 D0 02            [ 4]  178 	bne	00149$
      00004B E6*01            [ 5]  179 	inc	*(_strncmp_sloc0_1_0 + 1)
      00004D                        180 00149$:
                                    181 ;	Raw cost for generated ic 28 : (6, 12.600000) count=0.729728
                                    182 ;	../_strncmp.c: 38: last++;
                                    183 ;	genPlus
                                    184 ;	  genPlusInc
      00004D E6*02            [ 5]  185 	inc	*_strncmp_sloc1_1_0
      00004F D0 D9            [ 4]  186 	bne	00105$
      000051 E6*03            [ 5]  187 	inc	*(_strncmp_sloc1_1_0 + 1)
                                    188 ;	Raw cost for generated ic 31 : (6, 12.600000) count=0.729728
                                    189 ;	genGoto
      000053 4Cr2Ar00         [ 3]  190 	jmp	00105$
                                    191 ;	Raw cost for generated ic 33 : (3, 3.000000) count=0.729728
                                    192 ;	genLabel
      000056                        193 00107$:
                                    194 ;	Raw cost for generated ic 34 : (0, 0.000000) count=0.999998
                                    195 ;	../_strncmp.c: 41: return( *first - *last );
                                    196 ;	genPointerGet
      000056 A0 00            [ 2]  197 	ldy	#0x00
      000058 B1*00            [ 6]  198 	lda	[*_strncmp_sloc0_1_0],y
                                    199 ;	Raw cost for generated ic 36 : (4, 7.000000) count=0.999998
                                    200 ;	genCast
                                    201 ;	genCopy
      00005A A2 00            [ 2]  202 	ldx	#0x00
                                    203 ;	Raw cost for generated ic 37 : (2, 2.000000) count=0.999998
                                    204 ;	genPointerGet
      00005C 85*00            [ 3]  205 	sta	*(REGTEMP+0)
      00005E B1*02            [ 6]  206 	lda	[*_strncmp_sloc1_1_0],y
      000060 A8               [ 2]  207 	tay
      000061 A5*00            [ 3]  208 	lda	*(REGTEMP+0)
                                    209 ;	Raw cost for generated ic 39 : (7, 13.000000) count=0.999998
                                    210 ;	genCast
                                    211 ;	genCopy
      000063 86*05            [ 3]  212 	stx	*(_strncmp_sloc2_1_0 + 1)
      000065 84*04            [ 3]  213 	sty	*_strncmp_sloc2_1_0
                                    214 ;	Raw cost for generated ic 40 : (4, 6.000000) count=0.999998
                                    215 ;	genMinus
      000067 38               [ 2]  216 	sec
      000068 E5*04            [ 4]  217 	sbc	*_strncmp_sloc2_1_0
      00006A 48               [ 3]  218 	pha
      00006B 8A               [ 2]  219 	txa
      00006C E5*05            [ 4]  220 	sbc	*(_strncmp_sloc2_1_0 + 1)
      00006E AA               [ 2]  221 	tax
      00006F 68               [ 4]  222 	pla
                                    223 ;	Raw cost for generated ic 41 : (9, 19.000000) count=0.999998
                                    224 ;	genRet
                                    225 ;	Raw cost for generated ic 42 : (0, 0.000000) count=0.999998
                                    226 ;	genLabel
                                    227 ;	Raw cost for generated ic 43 : (0, 0.000000) count=0.999998
                                    228 ;	../_strncmp.c: 42: }
                                    229 ;	genEndFunction
      000070 60               [ 6]  230 	rts
                                    231 ;	Raw cost for generated ic 44 : (1, 6.000000) count=0.999998
                                    232 	.area CODE
                                    233 	.area RODATA
                                    234 	.area XINIT
                                    235 	.area CABS    (ABS)
