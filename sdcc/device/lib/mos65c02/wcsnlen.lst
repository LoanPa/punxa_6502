                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler
                                      3 ; Version 4.5.10 #15691 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module wcsnlen
                                      6 	
      000000                          7 	.r65c02
                                      8 	.optsdcc -mmos65c02
                                      9 
                                     10 ;--------------------------------------------------------
                                     11 ;  Ordering of segments for the linker.
                                     12 ;--------------------------------------------------------
                                     13 	.area ZP      (PAG)
                                     14 	.area OSEG    (PAG, OVR)
                                     15 	.area _CODE
                                     16 	.area GSINIT
                                     17 	.area GSFINAL
                                     18 	.area CODE
                                     19 	.area RODATA
                                     20 	.area XINIT
                                     21 	.area _DATA
                                     22 	.area DATA
                                     23 	.area BSS
                                     24 ;--------------------------------------------------------
                                     25 ; Public variables in this module
                                     26 ;--------------------------------------------------------
                                     27 	.globl _wcsnlen_PARM_2
                                     28 	.globl _wcsnlen
                                     29 ;--------------------------------------------------------
                                     30 ; ZP ram data
                                     31 ;--------------------------------------------------------
                                     32 	.area ZP      (PAG)
                                     33 ;--------------------------------------------------------
                                     34 ; overlayable items in ram
                                     35 ;--------------------------------------------------------
                                     36 	.area	OSEG    (PAG, OVR)
      000000                         37 _wcsnlen_i_10000_16:
      000000                         38 	.ds 2
      000002                         39 _wcsnlen_sloc0_1_0:
      000002                         40 	.ds 2
      000004                         41 _wcsnlen_sloc1_1_0:
      000004                         42 	.ds 2
      000006                         43 _wcsnlen_sloc2_1_0:
      000006                         44 	.ds 4
                                     45 ;--------------------------------------------------------
                                     46 ; uninitialized external ram data
                                     47 ;--------------------------------------------------------
                                     48 	.area BSS
      000000                         49 _wcsnlen_PARM_2:
      000000                         50 	.ds 2
                                     51 ;--------------------------------------------------------
                                     52 ; absolute external ram data
                                     53 ;--------------------------------------------------------
                                     54 	.area DABS    (ABS)
                                     55 ;--------------------------------------------------------
                                     56 ; initialized external ram data
                                     57 ;--------------------------------------------------------
                                     58 	.area DATA
                                     59 ;--------------------------------------------------------
                                     60 ; global & static initialisations
                                     61 ;--------------------------------------------------------
                                     62 	.area _CODE
                                     63 	.area GSINIT
                                     64 	.area GSFINAL
                                     65 	.area GSINIT
                                     66 ;--------------------------------------------------------
                                     67 ; Home
                                     68 ;--------------------------------------------------------
                                     69 	.area _CODE
                                     70 	.area _CODE
                                     71 ;--------------------------------------------------------
                                     72 ; code
                                     73 ;--------------------------------------------------------
                                     74 	.area CODE
                                     75 ;------------------------------------------------------------
                                     76 ;Allocation info for local variables in function 'wcsnlen'
                                     77 ;------------------------------------------------------------
                                     78 ;n             Allocated with name '_wcsnlen_PARM_2'
                                     79 ;s             Allocated to registers 
                                     80 ;i             Allocated with name '_wcsnlen_i_10000_16'
                                     81 ;sloc0         Allocated with name '_wcsnlen_sloc0_1_0'
                                     82 ;sloc1         Allocated with name '_wcsnlen_sloc1_1_0'
                                     83 ;sloc2         Allocated with name '_wcsnlen_sloc2_1_0'
                                     84 ;------------------------------------------------------------
                                     85 ;	../wcsnlen.c: 32: size_t wcsnlen (const wchar_t *s, size_t n)
                                     86 ;	genLabel
                                     87 ;	Raw cost for generated ic 0 : (0, 0.000000) count=1.000000
                                     88 ;	-----------------------------------------
                                     89 ;	 function wcsnlen
                                     90 ;	-----------------------------------------
                                     91 ;	Register assignment is optimal.
                                     92 ;	Stack space usage: 0 bytes.
      000000                         93 _wcsnlen:
                                     94 ;	Raw cost for generated ic 1 : (0, 0.000000) count=1.000000
                                     95 ;	genReceive
      000000 85*02            [ 3]   96 	sta	*_wcsnlen_sloc0_1_0
      000002 86*03            [ 3]   97 	stx	*(_wcsnlen_sloc0_1_0 + 1)
                                     98 ;	Raw cost for generated ic 2 : (4, 6.000000) count=1.000000
                                     99 ;	../wcsnlen.c: 36: while (n-- && *s++)
                                    100 ;	genAssign
                                    101 ;	genAssignLit
      000004 64*00            [ 3]  102 	stz	*_wcsnlen_i_10000_16
      000006 64*01            [ 3]  103 	stz	*(_wcsnlen_i_10000_16 + 1)
                                    104 ;	Raw cost for generated ic 30 : (6, 8.000000) count=1.000000
                                    105 ;	genAssign
                                    106 ;	genCopy
      000008 ADr01r00         [ 4]  107 	lda	(_wcsnlen_PARM_2 + 1)
      00000B 85*05            [ 3]  108 	sta	*(_wcsnlen_sloc1_1_0 + 1)
      00000D ADr00r00         [ 4]  109 	lda	_wcsnlen_PARM_2
      000010 85*04            [ 3]  110 	sta	*_wcsnlen_sloc1_1_0
                                    111 ;	Raw cost for generated ic 32 : (10, 14.000000) count=1.000000
                                    112 ;	genLabel
      000012                        113 00102$:
                                    114 ;	Raw cost for generated ic 4 : (0, 0.000000) count=2.285713
                                    115 ;	genAssign
                                    116 ;	genCopy
      000012 A6*05            [ 3]  117 	ldx	*(_wcsnlen_sloc1_1_0 + 1)
      000014 A5*04            [ 3]  118 	lda	*_wcsnlen_sloc1_1_0
                                    119 ;	Raw cost for generated ic 5 : (4, 6.000000) count=2.285713
                                    120 ;	genMinus
                                    121 ;	  genMinusDec - size=2  icount=1
      000016 A4*04            [ 3]  122 	ldy	*_wcsnlen_sloc1_1_0
      000018 D0 02            [ 4]  123 	bne	00126$
      00001A C6*05            [ 5]  124 	dec	*(_wcsnlen_sloc1_1_0 + 1)
      00001C                        125 00126$:
      00001C C6*04            [ 5]  126 	dec	*_wcsnlen_sloc1_1_0
                                    127 ;	Raw cost for generated ic 6 : (8, 15.600000) count=2.285713
                                    128 ;	genIfx
      00001E C9 00            [ 2]  129 	cmp	#0x00
                                    130 ;	genIfxJump : z
      000020 D0 04            [ 4]  131 	bne	00128$
      000022 E0 00            [ 2]  132 	cpx	#0x00
      000024 F0 33            [ 4]  133 	beq	00104$
      000026                        134 00128$:
                                    135 ;	Raw cost for generated ic 8 : (11, 12.200000) count=2.285713
                                    136 ;	genPointerGet
      000026 A0 00            [ 2]  137 	ldy	#0x00
      000028 B1*02            [ 6]  138 	lda	[*_wcsnlen_sloc0_1_0],y
      00002A 85*06            [ 3]  139 	sta	*_wcsnlen_sloc2_1_0
      00002C C8               [ 2]  140 	iny
      00002D B1*02            [ 6]  141 	lda	[*_wcsnlen_sloc0_1_0],y
      00002F 85*07            [ 3]  142 	sta	*(_wcsnlen_sloc2_1_0 + 1)
      000031 C8               [ 2]  143 	iny
      000032 B1*02            [ 6]  144 	lda	[*_wcsnlen_sloc0_1_0],y
      000034 85*08            [ 3]  145 	sta	*(_wcsnlen_sloc2_1_0 + 2)
      000036 C8               [ 2]  146 	iny
      000037 B1*02            [ 6]  147 	lda	[*_wcsnlen_sloc0_1_0],y
      000039 85*09            [ 3]  148 	sta	*(_wcsnlen_sloc2_1_0 + 3)
                                    149 ;	Raw cost for generated ic 14 : (21, 40.000000) count=1.714284
                                    150 ;	genPlus
                                    151 ;	  genPlusInc
      00003B A5*02            [ 3]  152 	lda	*_wcsnlen_sloc0_1_0
      00003D 18               [ 2]  153 	clc
      00003E 69 04            [ 3]  154 	adc	#0x04
      000040 85*02            [ 3]  155 	sta	*_wcsnlen_sloc0_1_0
      000042 90 02            [ 4]  156 	bcc	00129$
      000044 E6*03            [ 5]  157 	inc	*(_wcsnlen_sloc0_1_0 + 1)
      000046                        158 00129$:
                                    159 ;	Raw cost for generated ic 12 : (11, 17.600000) count=1.714284
                                    160 ;	genIfx
      000046 A5*09            [ 3]  161 	lda	*(_wcsnlen_sloc2_1_0 + 3)
      000048 05*08            [ 3]  162 	ora	*(_wcsnlen_sloc2_1_0 + 2)
      00004A 05*07            [ 3]  163 	ora	*(_wcsnlen_sloc2_1_0 + 1)
      00004C 05*06            [ 3]  164 	ora	*_wcsnlen_sloc2_1_0
                                    165 ;	genIfxJump : z
      00004E F0 09            [ 4]  166 	beq	00104$
                                    167 ;	Raw cost for generated ic 15 : (13, 17.600000) count=1.714284
                                    168 ;	../wcsnlen.c: 37: i++ ;
                                    169 ;	genPlus
                                    170 ;	  genPlusInc
      000050 E6*00            [ 5]  171 	inc	*_wcsnlen_i_10000_16
      000052 D0 BE            [ 4]  172 	bne	00102$
      000054 E6*01            [ 5]  173 	inc	*(_wcsnlen_i_10000_16 + 1)
                                    174 ;	Raw cost for generated ic 19 : (6, 12.600000) count=1.285713
                                    175 ;	genGoto
      000056 4Cr12r00         [ 3]  176 	jmp	00102$
                                    177 ;	Raw cost for generated ic 21 : (3, 3.000000) count=1.285713
                                    178 ;	genLabel
      000059                        179 00104$:
                                    180 ;	Raw cost for generated ic 22 : (0, 0.000000) count=0.999999
                                    181 ;	../wcsnlen.c: 39: return i;
                                    182 ;	genRet
      000059 A6*01            [ 3]  183 	ldx	*(_wcsnlen_i_10000_16 + 1)
      00005B A5*00            [ 3]  184 	lda	*_wcsnlen_i_10000_16
                                    185 ;	Raw cost for generated ic 23 : (4, 6.000000) count=0.999999
                                    186 ;	genLabel
                                    187 ;	Raw cost for generated ic 24 : (0, 0.000000) count=0.999999
                                    188 ;	../wcsnlen.c: 40: }
                                    189 ;	genEndFunction
      00005D 60               [ 6]  190 	rts
                                    191 ;	Raw cost for generated ic 25 : (1, 6.000000) count=0.999999
                                    192 	.area CODE
                                    193 	.area RODATA
                                    194 	.area XINIT
                                    195 	.area CABS    (ABS)
