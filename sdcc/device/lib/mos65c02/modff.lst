                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler
                                      3 ; Version 4.5.10 #15691 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module modff
                                      6 	
      000000                          7 	.r65c02
                                      8 	.optsdcc -mmos65c02
                                      9 
                                     10 ;--------------------------------------------------------
                                     11 ;  Ordering of segments for the linker.
                                     12 ;--------------------------------------------------------
                                     13 	.area ZP      (PAG)
                                     14 	.area OSEG    (PAG, OVR)
                                     15 	.area _CODE
                                     16 	.area GSINIT
                                     17 	.area GSFINAL
                                     18 	.area CODE
                                     19 	.area RODATA
                                     20 	.area XINIT
                                     21 	.area _DATA
                                     22 	.area DATA
                                     23 	.area BSS
                                     24 ;--------------------------------------------------------
                                     25 ; Public variables in this module
                                     26 ;--------------------------------------------------------
                                     27 	.globl _modff_PARM_2
                                     28 	.globl _modff_PARM_1
                                     29 	.globl _modff
                                     30 ;--------------------------------------------------------
                                     31 ; ZP ram data
                                     32 ;--------------------------------------------------------
                                     33 	.area ZP      (PAG)
      000000                         34 _modff_sloc0_1_0:
      000000                         35 	.ds 2
      000002                         36 _modff_sloc1_1_0:
      000002                         37 	.ds 4
                                     38 ;--------------------------------------------------------
                                     39 ; overlayable items in ram
                                     40 ;--------------------------------------------------------
                                     41 ;--------------------------------------------------------
                                     42 ; uninitialized external ram data
                                     43 ;--------------------------------------------------------
                                     44 	.area BSS
      000000                         45 _modff_PARM_1:
      000000                         46 	.ds 4
      000004                         47 _modff_PARM_2:
      000004                         48 	.ds 2
                                     49 ;--------------------------------------------------------
                                     50 ; absolute external ram data
                                     51 ;--------------------------------------------------------
                                     52 	.area DABS    (ABS)
                                     53 ;--------------------------------------------------------
                                     54 ; initialized external ram data
                                     55 ;--------------------------------------------------------
                                     56 	.area DATA
                                     57 ;--------------------------------------------------------
                                     58 ; global & static initialisations
                                     59 ;--------------------------------------------------------
                                     60 	.area _CODE
                                     61 	.area GSINIT
                                     62 	.area GSFINAL
                                     63 	.area GSINIT
                                     64 ;--------------------------------------------------------
                                     65 ; Home
                                     66 ;--------------------------------------------------------
                                     67 	.area _CODE
                                     68 	.area _CODE
                                     69 ;--------------------------------------------------------
                                     70 ; code
                                     71 ;--------------------------------------------------------
                                     72 	.area CODE
                                     73 ;------------------------------------------------------------
                                     74 ;Allocation info for local variables in function 'modff'
                                     75 ;------------------------------------------------------------
                                     76 ;sloc0         Allocated with name '_modff_sloc0_1_0'
                                     77 ;sloc1         Allocated with name '_modff_sloc1_1_0'
                                     78 ;x             Allocated with name '_modff_PARM_1'
                                     79 ;y             Allocated with name '_modff_PARM_2'
                                     80 ;------------------------------------------------------------
                                     81 ;	../modff.c: 33: float modff(float x, float * y)
                                     82 ;	genLabel
                                     83 ;	Raw cost for generated ic 0 : (0, 0.000000) count=1.000000
                                     84 ;	-----------------------------------------
                                     85 ;	 function modff
                                     86 ;	-----------------------------------------
                                     87 ;	Register assignment is optimal.
                                     88 ;	Stack space usage: 0 bytes.
      000000                         89 _modff:
                                     90 ;	Raw cost for generated ic 1 : (0, 0.000000) count=1.000000
                                     91 ;	../modff.c: 35: *y=(long)x;
                                     92 ;	genAssign
                                     93 ;	genCopy
      000000 ADr05r00         [ 4]   94 	lda	(_modff_PARM_2 + 1)
      000003 85*01            [ 3]   95 	sta	*(_modff_sloc0_1_0 + 1)
      000005 ADr04r00         [ 4]   96 	lda	_modff_PARM_2
      000008 85*00            [ 3]   97 	sta	*_modff_sloc0_1_0
                                     98 ;	Raw cost for generated ic 2 : (10, 14.000000) count=1.000000
                                     99 ;	genAssign
                                    100 ;	genCopy
      00000A ADr03r00         [ 4]  101 	lda	(_modff_PARM_1 + 3)
      00000D 8Dr03r00         [ 4]  102 	sta	(___fs2slong_PARM_1 + 3)
      000010 ADr02r00         [ 4]  103 	lda	(_modff_PARM_1 + 2)
      000013 8Dr02r00         [ 4]  104 	sta	(___fs2slong_PARM_1 + 2)
      000016 ADr01r00         [ 4]  105 	lda	(_modff_PARM_1 + 1)
      000019 8Dr01r00         [ 4]  106 	sta	(___fs2slong_PARM_1 + 1)
      00001C ADr00r00         [ 4]  107 	lda	_modff_PARM_1
      00001F 8Dr00r00         [ 4]  108 	sta	___fs2slong_PARM_1
                                    109 ;	Raw cost for generated ic 12 : (24, 32.000000) count=1.000000
                                    110 ;	genCall
      000022 20r00r00         [ 6]  111 	jsr	___fs2slong
                                    112 ;	assignResultValue
      000025 8Dr00r00         [ 4]  113 	sta	___slong2fs_PARM_1
      000028 8Er01r00         [ 4]  114 	stx	(___slong2fs_PARM_1 + 1)
      00002B A5*00            [ 3]  115 	lda	*___SDCC_m6502_ret2
      00002D 8Dr02r00         [ 4]  116 	sta	(___slong2fs_PARM_1 + 2)
      000030 A5*00            [ 3]  117 	lda	*___SDCC_m6502_ret3
      000032 8Dr03r00         [ 4]  118 	sta	(___slong2fs_PARM_1 + 3)
                                    119 ;	Raw cost for generated ic 13 : (19, 28.000000) count=1.000000
                                    120 ;	genCall
      000035 20r00r00         [ 6]  121 	jsr	___slong2fs
                                    122 ;	assignResultValue
      000038 85*02            [ 3]  123 	sta	*_modff_sloc1_1_0
      00003A 86*03            [ 3]  124 	stx	*(_modff_sloc1_1_0 + 1)
      00003C A5*00            [ 3]  125 	lda	*___SDCC_m6502_ret2
      00003E 85*04            [ 3]  126 	sta	*(_modff_sloc1_1_0 + 2)
      000040 A5*00            [ 3]  127 	lda	*___SDCC_m6502_ret3
      000042 85*05            [ 3]  128 	sta	*(_modff_sloc1_1_0 + 3)
                                    129 ;	Raw cost for generated ic 15 : (15, 24.000000) count=1.000000
                                    130 ;	genPointerSet
      000044 A5*02            [ 3]  131 	lda	*_modff_sloc1_1_0
      000046 A0 00            [ 2]  132 	ldy	#0x00
      000048 91*00            [ 6]  133 	sta	[*_modff_sloc0_1_0],y
      00004A 8A               [ 2]  134 	txa
      00004B C8               [ 2]  135 	iny
      00004C 91*00            [ 6]  136 	sta	[*_modff_sloc0_1_0],y
      00004E A5*04            [ 3]  137 	lda	*(_modff_sloc1_1_0 + 2)
      000050 C8               [ 2]  138 	iny
      000051 91*00            [ 6]  139 	sta	[*_modff_sloc0_1_0],y
      000053 A5*05            [ 3]  140 	lda	*(_modff_sloc1_1_0 + 3)
      000055 C8               [ 2]  141 	iny
      000056 91*00            [ 6]  142 	sta	[*_modff_sloc0_1_0],y
                                    143 ;	Raw cost for generated ic 5 : (20, 43.000000) count=1.000000
                                    144 ;	../modff.c: 36: return (x-*y);
                                    145 ;	genAssign
                                    146 ;	genCopy
      000058 ADr03r00         [ 4]  147 	lda	(_modff_PARM_1 + 3)
      00005B 8Dr03r00         [ 4]  148 	sta	(___fssub_PARM_1 + 3)
      00005E ADr02r00         [ 4]  149 	lda	(_modff_PARM_1 + 2)
      000061 8Dr02r00         [ 4]  150 	sta	(___fssub_PARM_1 + 2)
      000064 ADr01r00         [ 4]  151 	lda	(_modff_PARM_1 + 1)
      000067 8Dr01r00         [ 4]  152 	sta	(___fssub_PARM_1 + 1)
      00006A ADr00r00         [ 4]  153 	lda	_modff_PARM_1
      00006D 8Dr00r00         [ 4]  154 	sta	___fssub_PARM_1
                                    155 ;	Raw cost for generated ic 16 : (24, 32.000000) count=1.000000
                                    156 ;	genAssign
                                    157 ;	genCopy
      000070 A5*05            [ 3]  158 	lda	*(_modff_sloc1_1_0 + 3)
      000072 8Dr03r00         [ 4]  159 	sta	(___fssub_PARM_2 + 3)
      000075 A5*04            [ 3]  160 	lda	*(_modff_sloc1_1_0 + 2)
      000077 8Dr02r00         [ 4]  161 	sta	(___fssub_PARM_2 + 2)
      00007A 8A               [ 2]  162 	txa
      00007B 8Dr01r00         [ 4]  163 	sta	(___fssub_PARM_2 + 1)
      00007E A5*02            [ 3]  164 	lda	*_modff_sloc1_1_0
      000080 8Dr00r00         [ 4]  165 	sta	___fssub_PARM_2
                                    166 ;	Raw cost for generated ic 17 : (19, 27.000000) count=1.000000
                                    167 ;	genCall
      000083 20r00r00         [ 6]  168 	jsr	___fssub
                                    169 ;	assignResultValue
      000086 85*02            [ 3]  170 	sta	*_modff_sloc1_1_0
      000088 86*03            [ 3]  171 	stx	*(_modff_sloc1_1_0 + 1)
      00008A A5*00            [ 3]  172 	lda	*___SDCC_m6502_ret2
      00008C 85*04            [ 3]  173 	sta	*(_modff_sloc1_1_0 + 2)
      00008E A5*00            [ 3]  174 	lda	*___SDCC_m6502_ret3
      000090 85*05            [ 3]  175 	sta	*(_modff_sloc1_1_0 + 3)
                                    176 ;	Raw cost for generated ic 18 : (15, 24.000000) count=1.000000
                                    177 ;	genRet
      000092 85*00            [ 3]  178 	sta	*___SDCC_m6502_ret3
      000094 A5*04            [ 3]  179 	lda	*(_modff_sloc1_1_0 + 2)
      000096 85*00            [ 3]  180 	sta	*___SDCC_m6502_ret2
      000098 A5*02            [ 3]  181 	lda	*_modff_sloc1_1_0
                                    182 ;	Raw cost for generated ic 9 : (8, 12.000000) count=1.000000
                                    183 ;	genLabel
                                    184 ;	Raw cost for generated ic 10 : (0, 0.000000) count=1.000000
                                    185 ;	../modff.c: 37: }
                                    186 ;	genEndFunction
      00009A 60               [ 6]  187 	rts
                                    188 ;	Raw cost for generated ic 11 : (1, 6.000000) count=1.000000
                                    189 	.area CODE
                                    190 	.area RODATA
                                    191 	.area XINIT
                                    192 	.area CABS    (ABS)
