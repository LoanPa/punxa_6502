                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler
                                      3 ; Version 4.5.10 #15691 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _strrchr
                                      6 	
      000000                          7 	.r65c02
                                      8 	.optsdcc -mmos65c02
                                      9 
                                     10 ;--------------------------------------------------------
                                     11 ;  Ordering of segments for the linker.
                                     12 ;--------------------------------------------------------
                                     13 	.area ZP      (PAG)
                                     14 	.area OSEG    (PAG, OVR)
                                     15 	.area _CODE
                                     16 	.area GSINIT
                                     17 	.area GSFINAL
                                     18 	.area CODE
                                     19 	.area RODATA
                                     20 	.area XINIT
                                     21 	.area _DATA
                                     22 	.area DATA
                                     23 	.area BSS
                                     24 ;--------------------------------------------------------
                                     25 ; Public variables in this module
                                     26 ;--------------------------------------------------------
                                     27 	.globl _strrchr_PARM_2
                                     28 	.globl _strrchr
                                     29 ;--------------------------------------------------------
                                     30 ; ZP ram data
                                     31 ;--------------------------------------------------------
                                     32 	.area ZP      (PAG)
                                     33 ;--------------------------------------------------------
                                     34 ; overlayable items in ram
                                     35 ;--------------------------------------------------------
                                     36 	.area	OSEG    (PAG, OVR)
      000000                         37 _strrchr_sloc0_1_0:
      000000                         38 	.ds 2
                                     39 ;--------------------------------------------------------
                                     40 ; uninitialized external ram data
                                     41 ;--------------------------------------------------------
                                     42 	.area BSS
      000000                         43 _strrchr_PARM_2:
      000000                         44 	.ds 1
      000001                         45 _strrchr_start_10000_28:
      000001                         46 	.ds 2
                                     47 ;--------------------------------------------------------
                                     48 ; absolute external ram data
                                     49 ;--------------------------------------------------------
                                     50 	.area DABS    (ABS)
                                     51 ;--------------------------------------------------------
                                     52 ; initialized external ram data
                                     53 ;--------------------------------------------------------
                                     54 	.area DATA
                                     55 ;--------------------------------------------------------
                                     56 ; global & static initialisations
                                     57 ;--------------------------------------------------------
                                     58 	.area _CODE
                                     59 	.area GSINIT
                                     60 	.area GSFINAL
                                     61 	.area GSINIT
                                     62 ;--------------------------------------------------------
                                     63 ; Home
                                     64 ;--------------------------------------------------------
                                     65 	.area _CODE
                                     66 	.area _CODE
                                     67 ;--------------------------------------------------------
                                     68 ; code
                                     69 ;--------------------------------------------------------
                                     70 	.area CODE
                                     71 ;------------------------------------------------------------
                                     72 ;Allocation info for local variables in function 'strrchr'
                                     73 ;------------------------------------------------------------
                                     74 ;ch            Allocated with name '_strrchr_PARM_2'
                                     75 ;string        Allocated to registers a x 
                                     76 ;start         Allocated with name '_strrchr_start_10000_28'
                                     77 ;sloc0         Allocated with name '_strrchr_sloc0_1_0'
                                     78 ;------------------------------------------------------------
                                     79 ;	../_strrchr.c: 32: char * strrchr ( const char * string, char ch )
                                     80 ;	genLabel
                                     81 ;	Raw cost for generated ic 0 : (0, 0.000000) count=1.000000
                                     82 ;	-----------------------------------------
                                     83 ;	 function strrchr
                                     84 ;	-----------------------------------------
                                     85 ;	Register assignment is optimal.
                                     86 ;	Stack space usage: 0 bytes.
      000000                         87 _strrchr:
                                     88 ;	Raw cost for generated ic 1 : (0, 0.000000) count=1.000000
                                     89 ;	genReceive
                                     90 ;	Raw cost for generated ic 2 : (0, 0.000000) count=1.000000
                                     91 ;	../_strrchr.c: 37: const char * start = string;
                                     92 ;	genAssign
                                     93 ;	genCopy
      000000 8Dr01r00         [ 4]   94 	sta	_strrchr_start_10000_28
      000003 8Er02r00         [ 4]   95 	stx	(_strrchr_start_10000_28 + 1)
                                     96 ;	Raw cost for generated ic 3 : (6, 8.000000) count=1.000000
                                     97 ;	../_strrchr.c: 39: while (*string++)                       /* find end of string */
                                     98 ;	genAssign
                                     99 ;	genCopy
      000006 85*00            [ 3]  100 	sta	*_strrchr_sloc0_1_0
      000008 86*01            [ 3]  101 	stx	*(_strrchr_sloc0_1_0 + 1)
                                    102 ;	Raw cost for generated ic 42 : (4, 6.000000) count=1.000000
                                    103 ;	genLabel
      00000A                        104 00101$:
                                    105 ;	Raw cost for generated ic 4 : (0, 0.000000) count=3.999999
                                    106 ;	genPointerGet
      00000A A0 00            [ 2]  107 	ldy	#0x00
      00000C B1*00            [ 6]  108 	lda	[*_strrchr_sloc0_1_0],y
                                    109 ;	Raw cost for generated ic 8 : (4, 7.000000) count=3.999999
                                    110 ;	genPlus
                                    111 ;	  genPlusInc
      00000E E6*00            [ 5]  112 	inc	*_strrchr_sloc0_1_0
      000010 D0 02            [ 4]  113 	bne	00143$
      000012 E6*01            [ 5]  114 	inc	*(_strrchr_sloc0_1_0 + 1)
      000014                        115 00143$:
                                    116 ;	Raw cost for generated ic 6 : (6, 12.600000) count=3.999999
                                    117 ;	genIfx
      000014 C9 00            [ 2]  118 	cmp	#0x00
                                    119 ;	genIfxJump : z
      000016 D0 F2            [ 4]  120 	bne	00101$
                                    121 ;	Raw cost for generated ic 9 : (7, 7.600000) count=3.999999
                                    122 ;	../_strrchr.c: 42: while (--string != start && *string != ch)
                                    123 ;	genAssign
                                    124 ;	genCopy
      000018 A6*01            [ 3]  125 	ldx	*(_strrchr_sloc0_1_0 + 1)
      00001A A5*00            [ 3]  126 	lda	*_strrchr_sloc0_1_0
                                    127 ;	Raw cost for generated ic 45 : (4, 6.000000) count=1.000000
                                    128 ;	genLabel
      00001C                        129 00105$:
                                    130 ;	Raw cost for generated ic 14 : (0, 0.000000) count=2.285712
                                    131 ;	genMinus
                                    132 ;	  genMinusDec - size=2  icount=1
      00001C 38               [ 2]  133 	sec
      00001D E9 01            [ 3]  134 	sbc	#0x01
      00001F B0 01            [ 4]  135 	bcs	00146$
      000021 CA               [ 2]  136 	dex
      000022                        137 00146$:
                                    138 ;	Raw cost for generated ic 15 : (6, 8.600000) count=2.285712
                                    139 ;	genCmpEQorNE
      000022 CDr01r00         [ 4]  140 	cmp	_strrchr_start_10000_28
      000025 D0 05            [ 4]  141 	bne	00148$
      000027 ECr02r00         [ 4]  142 	cpx	(_strrchr_start_10000_28 + 1)
      00002A F0 10            [ 4]  143 	beq	00107$
      00002C                        144 00148$:
                                    145 ;	Raw cost for generated ic 17 : (16, 19.200001) count=2.285712
                                    146 ;	skipping generated iCode
                                    147 ;	Raw cost for generated ic 18 : (0, 0.000000) count=2.285712
                                    148 ;	genPointerGet
                                    149 ;	  setupDPTR - off=0 remat=(null) savea=0
      00002C 85*00            [ 3]  150 	sta	*(DPTR+0)
      00002E 86*01            [ 3]  151 	stx	*(DPTR+1)
      000030 A0 00            [ 2]  152 	ldy	#0x00
      000032 B1*00            [ 6]  153 	lda	[DPTR],y
      000034 A8               [ 2]  154 	tay
      000035 A5*00            [ 3]  155 	lda	*(DPTR+0)
                                    156 ;	Raw cost for generated ic 22 : (11, 18.000000) count=1.714284
                                    157 ;	genCmpEQorNE
      000037 CCr00r00         [ 4]  158 	cpy	_strrchr_PARM_2
      00003A D0 E0            [ 4]  159 	bne	00105$
                                    160 ;	Raw cost for generated ic 23 : (8, 9.600000) count=1.714284
                                    161 ;	skipping generated iCode
                                    162 ;	Raw cost for generated ic 24 : (0, 0.000000) count=1.714284
                                    163 ;	genLabel
      00003C                        164 00107$:
                                    165 ;	Raw cost for generated ic 28 : (0, 0.000000) count=0.999999
                                    166 ;	../_strrchr.c: 45: if (*string == ch)                      /* char found ? */
                                    167 ;	genPointerGet
                                    168 ;	  setupDPTR - off=0 remat=(null) savea=0
      00003C 85*00            [ 3]  169 	sta	*(DPTR+0)
      00003E 86*01            [ 3]  170 	stx	*(DPTR+1)
      000040 A0 00            [ 2]  171 	ldy	#0x00
      000042 B1*00            [ 6]  172 	lda	[DPTR],y
      000044 A8               [ 2]  173 	tay
      000045 A5*00            [ 3]  174 	lda	*(DPTR+0)
                                    175 ;	Raw cost for generated ic 30 : (11, 18.000000) count=0.999999
                                    176 ;	genCmpEQorNE
      000047 CCr00r00         [ 4]  177 	cpy	_strrchr_PARM_2
      00004A D0 01            [ 4]  178 	bne	00109$
                                    179 ;	Raw cost for generated ic 31 : (8, 9.600000) count=0.999999
                                    180 ;	skipping generated iCode
                                    181 ;	Raw cost for generated ic 32 : (0, 0.000000) count=0.999999
                                    182 ;	../_strrchr.c: 46: return( (char *)string );
                                    183 ;	genRet
      00004C 60               [ 6]  184 	rts
                                    185 ;	Raw cost for generated ic 35 : (3, 3.000000) count=0.749999
                                    186 ;	genLabel
      00004D                        187 00109$:
                                    188 ;	Raw cost for generated ic 36 : (0, 0.000000) count=0.999999
                                    189 ;	../_strrchr.c: 48: return (NULL) ;
                                    190 ;	genRet
      00004D A9 00            [ 2]  191 	lda	#0x00
      00004F AA               [ 2]  192 	tax
                                    193 ;	Raw cost for generated ic 37 : (3, 4.000000) count=0.999999
                                    194 ;	genLabel
                                    195 ;	Raw cost for generated ic 38 : (0, 0.000000) count=0.999999
                                    196 ;	../_strrchr.c: 49: }
                                    197 ;	genEndFunction
      000050 60               [ 6]  198 	rts
                                    199 ;	Raw cost for generated ic 39 : (1, 6.000000) count=0.999999
                                    200 	.area CODE
                                    201 	.area RODATA
                                    202 	.area XINIT
                                    203 	.area CABS    (ABS)
