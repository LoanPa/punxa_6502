                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler
                                      3 ; Version 4.5.10 #15691 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _strncpy
                                      6 	
      000000                          7 	.r65c02
                                      8 	.optsdcc -mmos65c02
                                      9 
                                     10 ;--------------------------------------------------------
                                     11 ;  Ordering of segments for the linker.
                                     12 ;--------------------------------------------------------
                                     13 	.area ZP      (PAG)
                                     14 	.area OSEG    (PAG, OVR)
                                     15 	.area _CODE
                                     16 	.area GSINIT
                                     17 	.area GSFINAL
                                     18 	.area CODE
                                     19 	.area RODATA
                                     20 	.area XINIT
                                     21 	.area _DATA
                                     22 	.area DATA
                                     23 	.area BSS
                                     24 ;--------------------------------------------------------
                                     25 ; Public variables in this module
                                     26 ;--------------------------------------------------------
                                     27 	.globl _strncpy_PARM_3
                                     28 	.globl _strncpy_PARM_2
                                     29 	.globl _strncpy
                                     30 ;--------------------------------------------------------
                                     31 ; ZP ram data
                                     32 ;--------------------------------------------------------
                                     33 	.area ZP      (PAG)
                                     34 ;--------------------------------------------------------
                                     35 ; overlayable items in ram
                                     36 ;--------------------------------------------------------
                                     37 	.area	OSEG    (PAG, OVR)
      000000                         38 _strncpy_sloc0_1_0:
      000000                         39 	.ds 2
      000002                         40 _strncpy_sloc1_1_0:
      000002                         41 	.ds 2
      000004                         42 _strncpy_sloc2_1_0:
      000004                         43 	.ds 2
                                     44 ;--------------------------------------------------------
                                     45 ; uninitialized external ram data
                                     46 ;--------------------------------------------------------
                                     47 	.area BSS
      000000                         48 _strncpy_PARM_2:
      000000                         49 	.ds 2
      000002                         50 _strncpy_PARM_3:
      000002                         51 	.ds 2
      000004                         52 _strncpy_d1_10000_28:
      000004                         53 	.ds 2
                                     54 ;--------------------------------------------------------
                                     55 ; absolute external ram data
                                     56 ;--------------------------------------------------------
                                     57 	.area DABS    (ABS)
                                     58 ;--------------------------------------------------------
                                     59 ; initialized external ram data
                                     60 ;--------------------------------------------------------
                                     61 	.area DATA
                                     62 ;--------------------------------------------------------
                                     63 ; global & static initialisations
                                     64 ;--------------------------------------------------------
                                     65 	.area _CODE
                                     66 	.area GSINIT
                                     67 	.area GSFINAL
                                     68 	.area GSINIT
                                     69 ;--------------------------------------------------------
                                     70 ; Home
                                     71 ;--------------------------------------------------------
                                     72 	.area _CODE
                                     73 	.area _CODE
                                     74 ;--------------------------------------------------------
                                     75 ; code
                                     76 ;--------------------------------------------------------
                                     77 	.area CODE
                                     78 ;------------------------------------------------------------
                                     79 ;Allocation info for local variables in function 'strncpy'
                                     80 ;------------------------------------------------------------
                                     81 ;s             Allocated with name '_strncpy_PARM_2'
                                     82 ;n             Allocated with name '_strncpy_PARM_3'
                                     83 ;d             Allocated to registers a x 
                                     84 ;d1            Allocated with name '_strncpy_d1_10000_28'
                                     85 ;sloc0         Allocated with name '_strncpy_sloc0_1_0'
                                     86 ;sloc1         Allocated with name '_strncpy_sloc1_1_0'
                                     87 ;sloc2         Allocated with name '_strncpy_sloc2_1_0'
                                     88 ;------------------------------------------------------------
                                     89 ;	../_strncpy.c: 33: char *strncpy ( char * d, const char * s, size_t n )
                                     90 ;	genLabel
                                     91 ;	Raw cost for generated ic 0 : (0, 0.000000) count=1.000000
                                     92 ;	-----------------------------------------
                                     93 ;	 function strncpy
                                     94 ;	-----------------------------------------
                                     95 ;	Register assignment is optimal.
                                     96 ;	Stack space usage: 0 bytes.
      000000                         97 _strncpy:
                                     98 ;	Raw cost for generated ic 1 : (0, 0.000000) count=1.000000
                                     99 ;	genReceive
                                    100 ;	Raw cost for generated ic 2 : (0, 0.000000) count=1.000000
                                    101 ;	../_strncpy.c: 35: register char * d1 =  d;
                                    102 ;	genAssign
                                    103 ;	genCopy
      000000 8Dr04r00         [ 4]  104 	sta	_strncpy_d1_10000_28
      000003 8Er05r00         [ 4]  105 	stx	(_strncpy_d1_10000_28 + 1)
                                    106 ;	Raw cost for generated ic 3 : (6, 8.000000) count=1.000000
                                    107 ;	../_strncpy.c: 37: while ( n && *s )
                                    108 ;	genAssign
                                    109 ;	genCopy
      000006 ACr03r00         [ 4]  110 	ldy	(_strncpy_PARM_3 + 1)
      000009 84*01            [ 3]  111 	sty	*(_strncpy_sloc0_1_0 + 1)
      00000B ACr02r00         [ 4]  112 	ldy	_strncpy_PARM_3
      00000E 84*00            [ 3]  113 	sty	*_strncpy_sloc0_1_0
                                    114 ;	Raw cost for generated ic 44 : (10, 14.000000) count=1.000000
                                    115 ;	genAssign
                                    116 ;	genCopy
      000010 ACr01r00         [ 4]  117 	ldy	(_strncpy_PARM_2 + 1)
      000013 84*03            [ 3]  118 	sty	*(_strncpy_sloc1_1_0 + 1)
      000015 ACr00r00         [ 4]  119 	ldy	_strncpy_PARM_2
      000018 84*02            [ 3]  120 	sty	*_strncpy_sloc1_1_0
                                    121 ;	Raw cost for generated ic 47 : (10, 14.000000) count=1.000000
                                    122 ;	genAssign
                                    123 ;	genCopy
      00001A 85*04            [ 3]  124 	sta	*_strncpy_sloc2_1_0
      00001C 86*05            [ 3]  125 	stx	*(_strncpy_sloc2_1_0 + 1)
                                    126 ;	Raw cost for generated ic 49 : (4, 6.000000) count=1.000000
                                    127 ;	genLabel
      00001E                        128 00102$:
                                    129 ;	Raw cost for generated ic 4 : (0, 0.000000) count=2.285713
                                    130 ;	genIfx
      00001E A5*01            [ 3]  131 	lda	*(_strncpy_sloc0_1_0 + 1)
      000020 05*00            [ 3]  132 	ora	*_strncpy_sloc0_1_0
                                    133 ;	genIfxJump : z
      000022 F0 1F            [ 4]  134 	beq	00114$
                                    135 ;	Raw cost for generated ic 5 : (9, 11.600000) count=2.285713
                                    136 ;	genPointerGet
      000024 A0 00            [ 2]  137 	ldy	#0x00
      000026 B1*02            [ 6]  138 	lda	[*_strncpy_sloc1_1_0],y
                                    139 ;	Raw cost for generated ic 9 : (4, 7.000000) count=1.714284
                                    140 ;	genIfx
                                    141 ;	genIfxJump : z
      000028 F0 19            [ 4]  142 	beq	00114$
                                    143 ;	Raw cost for generated ic 10 : (5, 5.600000) count=1.714284
                                    144 ;	../_strncpy.c: 39: n-- ;
                                    145 ;	genMinus
                                    146 ;	  genMinusDec - size=2  icount=1
      00002A A6*00            [ 3]  147 	ldx	*_strncpy_sloc0_1_0
      00002C D0 02            [ 4]  148 	bne	00146$
      00002E C6*01            [ 5]  149 	dec	*(_strncpy_sloc0_1_0 + 1)
      000030                        150 00146$:
      000030 C6*00            [ 5]  151 	dec	*_strncpy_sloc0_1_0
                                    152 ;	Raw cost for generated ic 14 : (8, 15.600000) count=1.285713
                                    153 ;	../_strncpy.c: 40: *d++ = *s++ ;
                                    154 ;	genAssign
                                    155 ;	genCopy
                                    156 ;	Raw cost for generated ic 22 : (0, 0.000000) count=1.285713
                                    157 ;	genPlus
                                    158 ;	  genPlusInc
      000032 E6*02            [ 5]  159 	inc	*_strncpy_sloc1_1_0
      000034 D0 02            [ 4]  160 	bne	00147$
      000036 E6*03            [ 5]  161 	inc	*(_strncpy_sloc1_1_0 + 1)
      000038                        162 00147$:
                                    163 ;	Raw cost for generated ic 20 : (6, 12.600000) count=1.285713
                                    164 ;	genPointerSet
      000038 91*04            [ 6]  165 	sta	[*_strncpy_sloc2_1_0],y
                                    166 ;	Raw cost for generated ic 23 : (2, 6.000000) count=1.285713
                                    167 ;	genPlus
                                    168 ;	  genPlusInc
      00003A E6*04            [ 5]  169 	inc	*_strncpy_sloc2_1_0
      00003C D0 E0            [ 4]  170 	bne	00102$
      00003E E6*05            [ 5]  171 	inc	*(_strncpy_sloc2_1_0 + 1)
                                    172 ;	Raw cost for generated ic 17 : (6, 12.600000) count=1.285713
                                    173 ;	genGoto
      000040 4Cr1Er00         [ 3]  174 	jmp	00102$
                                    175 ;	Raw cost for generated ic 24 : (3, 3.000000) count=1.285713
                                    176 ;	../_strncpy.c: 42: while ( n-- )
                                    177 ;	genLabel
      000043                        178 00114$:
                                    179 ;	Raw cost for generated ic 43 : (0, 0.000000) count=0.999999
                                    180 ;	genAssign
                                    181 ;	genCopy
                                    182 ;	Raw cost for generated ic 51 : (0, 0.000000) count=0.999999
                                    183 ;	genAssign
                                    184 ;	genCopy
      000043 A5*01            [ 3]  185 	lda	*(_strncpy_sloc0_1_0 + 1)
      000045 85*03            [ 3]  186 	sta	*(_strncpy_sloc1_1_0 + 1)
      000047 A5*00            [ 3]  187 	lda	*_strncpy_sloc0_1_0
      000049 85*02            [ 3]  188 	sta	*_strncpy_sloc1_1_0
                                    189 ;	Raw cost for generated ic 54 : (8, 12.000000) count=0.999999
                                    190 ;	genLabel
      00004B                        191 00105$:
                                    192 ;	Raw cost for generated ic 26 : (0, 0.000000) count=3.999990
                                    193 ;	genAssign
                                    194 ;	genCopy
      00004B A6*03            [ 3]  195 	ldx	*(_strncpy_sloc1_1_0 + 1)
      00004D A5*02            [ 3]  196 	lda	*_strncpy_sloc1_1_0
                                    197 ;	Raw cost for generated ic 27 : (4, 6.000000) count=3.999990
                                    198 ;	genMinus
                                    199 ;	  genMinusDec - size=2  icount=1
      00004F A4*02            [ 3]  200 	ldy	*_strncpy_sloc1_1_0
      000051 D0 02            [ 4]  201 	bne	00149$
      000053 C6*03            [ 5]  202 	dec	*(_strncpy_sloc1_1_0 + 1)
      000055                        203 00149$:
      000055 C6*02            [ 5]  204 	dec	*_strncpy_sloc1_1_0
                                    205 ;	Raw cost for generated ic 28 : (8, 15.600000) count=3.999990
                                    206 ;	genIfx
      000057 C9 00            [ 2]  207 	cmp	#0x00
                                    208 ;	genIfxJump : z
      000059 D0 04            [ 4]  209 	bne	00151$
      00005B E0 00            [ 2]  210 	cpx	#0x00
      00005D F0 0E            [ 4]  211 	beq	00107$
      00005F                        212 00151$:
                                    213 ;	Raw cost for generated ic 30 : (11, 12.200000) count=3.999990
                                    214 ;	../_strncpy.c: 44: *d++ = '\0' ;
                                    215 ;	genPointerSet
      00005F A9 00            [ 2]  216 	lda	#0x00
      000061 A8               [ 2]  217 	tay
      000062 91*04            [ 6]  218 	sta	[*_strncpy_sloc2_1_0],y
                                    219 ;	Raw cost for generated ic 36 : (5, 10.000000) count=2.999990
                                    220 ;	genPlus
                                    221 ;	  genPlusInc
      000064 E6*04            [ 5]  222 	inc	*_strncpy_sloc2_1_0
      000066 D0 E3            [ 4]  223 	bne	00105$
      000068 E6*05            [ 5]  224 	inc	*(_strncpy_sloc2_1_0 + 1)
                                    225 ;	Raw cost for generated ic 34 : (6, 12.600000) count=2.999990
                                    226 ;	genGoto
      00006A 4Cr4Br00         [ 3]  227 	jmp	00105$
                                    228 ;	Raw cost for generated ic 37 : (3, 3.000000) count=2.999990
                                    229 ;	genLabel
      00006D                        230 00107$:
                                    231 ;	Raw cost for generated ic 38 : (0, 0.000000) count=0.999997
                                    232 ;	../_strncpy.c: 46: return d1;
                                    233 ;	genRet
      00006D AEr05r00         [ 4]  234 	ldx	(_strncpy_d1_10000_28 + 1)
      000070 ADr04r00         [ 4]  235 	lda	_strncpy_d1_10000_28
                                    236 ;	Raw cost for generated ic 39 : (6, 8.000000) count=0.999997
                                    237 ;	genLabel
                                    238 ;	Raw cost for generated ic 40 : (0, 0.000000) count=0.999997
                                    239 ;	../_strncpy.c: 47: }
                                    240 ;	genEndFunction
      000073 60               [ 6]  241 	rts
                                    242 ;	Raw cost for generated ic 41 : (1, 6.000000) count=0.999997
                                    243 	.area CODE
                                    244 	.area RODATA
                                    245 	.area XINIT
                                    246 	.area CABS    (ABS)
