                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler
                                      3 ; Version 4.5.10 #15691 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module fabsf
                                      6 	
      000000                          7 	.r65c02
                                      8 	.optsdcc -mmos65c02
                                      9 
                                     10 ;--------------------------------------------------------
                                     11 ;  Ordering of segments for the linker.
                                     12 ;--------------------------------------------------------
                                     13 	.area ZP      (PAG)
                                     14 	.area OSEG    (PAG, OVR)
                                     15 	.area _CODE
                                     16 	.area GSINIT
                                     17 	.area GSFINAL
                                     18 	.area CODE
                                     19 	.area RODATA
                                     20 	.area XINIT
                                     21 	.area _DATA
                                     22 	.area DATA
                                     23 	.area BSS
                                     24 ;--------------------------------------------------------
                                     25 ; Public variables in this module
                                     26 ;--------------------------------------------------------
                                     27 	.globl _fabsf_PARM_1
                                     28 	.globl _fabsf
                                     29 ;--------------------------------------------------------
                                     30 ; ZP ram data
                                     31 ;--------------------------------------------------------
                                     32 	.area ZP      (PAG)
                                     33 ;--------------------------------------------------------
                                     34 ; overlayable items in ram
                                     35 ;--------------------------------------------------------
                                     36 	.area	OSEG    (PAG, OVR)
      000000                         37 _fabsf_sloc0_1_0:
      000000                         38 	.ds 4
                                     39 ;--------------------------------------------------------
                                     40 ; uninitialized external ram data
                                     41 ;--------------------------------------------------------
                                     42 	.area BSS
      000000                         43 _fabsf_PARM_1:
      000000                         44 	.ds 4
      000004                         45 _fabsf_fl_10000_26:
      000004                         46 	.ds 4
                                     47 ;--------------------------------------------------------
                                     48 ; absolute external ram data
                                     49 ;--------------------------------------------------------
                                     50 	.area DABS    (ABS)
                                     51 ;--------------------------------------------------------
                                     52 ; initialized external ram data
                                     53 ;--------------------------------------------------------
                                     54 	.area DATA
                                     55 ;--------------------------------------------------------
                                     56 ; global & static initialisations
                                     57 ;--------------------------------------------------------
                                     58 	.area _CODE
                                     59 	.area GSINIT
                                     60 	.area GSFINAL
                                     61 	.area GSINIT
                                     62 ;--------------------------------------------------------
                                     63 ; Home
                                     64 ;--------------------------------------------------------
                                     65 	.area _CODE
                                     66 	.area _CODE
                                     67 ;--------------------------------------------------------
                                     68 ; code
                                     69 ;--------------------------------------------------------
                                     70 	.area CODE
                                     71 ;------------------------------------------------------------
                                     72 ;Allocation info for local variables in function 'fabsf'
                                     73 ;------------------------------------------------------------
                                     74 ;x             Allocated with name '_fabsf_PARM_1'
                                     75 ;fl            Allocated with name '_fabsf_fl_10000_26'
                                     76 ;sloc0         Allocated with name '_fabsf_sloc0_1_0'
                                     77 ;------------------------------------------------------------
                                     78 ;	../fabsf.c: 34: float fabsf(float x) _FLOAT_FUNC_REENTRANT
                                     79 ;	genLabel
                                     80 ;	Raw cost for generated ic 0 : (0, 0.000000) count=1.000000
                                     81 ;	-----------------------------------------
                                     82 ;	 function fabsf
                                     83 ;	-----------------------------------------
                                     84 ;	Register assignment is optimal.
                                     85 ;	Stack space usage: 0 bytes.
      000000                         86 _fabsf:
                                     87 ;	Raw cost for generated ic 1 : (0, 0.000000) count=1.000000
                                     88 ;	../fabsf.c: 38: fl.f = x;
                                     89 ;	skipping iCode since result will be rematerialized
                                     90 ;	Raw cost for generated ic 2 : (0, 0.000000) count=1.000000
                                     91 ;	genPointerSet
                                     92 ;	genDataPointerSet
      000000 ADr03r00         [ 4]   93 	lda	(_fabsf_PARM_1 + 3)
      000003 8Dr07r00         [ 4]   94 	sta	(_fabsf_fl_10000_26 + 3)
      000006 ADr02r00         [ 4]   95 	lda	(_fabsf_PARM_1 + 2)
      000009 8Dr06r00         [ 4]   96 	sta	(_fabsf_fl_10000_26 + 2)
      00000C ADr01r00         [ 4]   97 	lda	(_fabsf_PARM_1 + 1)
      00000F 8Dr05r00         [ 4]   98 	sta	(_fabsf_fl_10000_26 + 1)
      000012 ADr00r00         [ 4]   99 	lda	_fabsf_PARM_1
      000015 8Dr04r00         [ 4]  100 	sta	_fabsf_fl_10000_26
                                    101 ;	Raw cost for generated ic 4 : (24, 32.000000) count=1.000000
                                    102 ;	../fabsf.c: 39: fl.l &= 0x7fffffff;
                                    103 ;	skipping iCode since result will be rematerialized
                                    104 ;	Raw cost for generated ic 6 : (0, 0.000000) count=1.000000
                                    105 ;	genPointerGet
                                    106 ;	genDataPointerGet
      000018 ADr07r00         [ 4]  107 	lda	(_fabsf_fl_10000_26 + 3)
      00001B 85*03            [ 3]  108 	sta	*(_fabsf_sloc0_1_0 + 3)
      00001D ADr06r00         [ 4]  109 	lda	(_fabsf_fl_10000_26 + 2)
      000020 85*02            [ 3]  110 	sta	*(_fabsf_sloc0_1_0 + 2)
      000022 ADr05r00         [ 4]  111 	lda	(_fabsf_fl_10000_26 + 1)
      000025 85*01            [ 3]  112 	sta	*(_fabsf_sloc0_1_0 + 1)
      000027 ADr04r00         [ 4]  113 	lda	_fabsf_fl_10000_26
      00002A 85*00            [ 3]  114 	sta	*_fabsf_sloc0_1_0
                                    115 ;	Raw cost for generated ic 9 : (20, 28.000000) count=1.000000
                                    116 ;	genAnd
      00002C A5*03            [ 3]  117 	lda	*(_fabsf_sloc0_1_0 + 3)
      00002E 29 7F            [ 2]  118 	and	#0x7f
      000030 85*03            [ 3]  119 	sta	*(_fabsf_sloc0_1_0 + 3)
                                    120 ;	Raw cost for generated ic 10 : (6, 8.000000) count=1.000000
                                    121 ;	genPointerSet
                                    122 ;	genDataPointerSet
      000032 8Dr07r00         [ 4]  123 	sta	(_fabsf_fl_10000_26 + 3)
      000035 A5*02            [ 3]  124 	lda	*(_fabsf_sloc0_1_0 + 2)
      000037 8Dr06r00         [ 4]  125 	sta	(_fabsf_fl_10000_26 + 2)
      00003A A5*01            [ 3]  126 	lda	*(_fabsf_sloc0_1_0 + 1)
      00003C 8Dr05r00         [ 4]  127 	sta	(_fabsf_fl_10000_26 + 1)
      00003F A5*00            [ 3]  128 	lda	*_fabsf_sloc0_1_0
      000041 8Dr04r00         [ 4]  129 	sta	_fabsf_fl_10000_26
                                    130 ;	Raw cost for generated ic 11 : (18, 25.000000) count=1.000000
                                    131 ;	../fabsf.c: 40: return fl.f;
                                    132 ;	genPointerGet
                                    133 ;	genDataPointerGet
      000044 ADr07r00         [ 4]  134 	lda	(_fabsf_fl_10000_26 + 3)
      000047 85*03            [ 3]  135 	sta	*(_fabsf_sloc0_1_0 + 3)
      000049 ADr06r00         [ 4]  136 	lda	(_fabsf_fl_10000_26 + 2)
      00004C 85*02            [ 3]  137 	sta	*(_fabsf_sloc0_1_0 + 2)
      00004E ADr05r00         [ 4]  138 	lda	(_fabsf_fl_10000_26 + 1)
      000051 85*01            [ 3]  139 	sta	*(_fabsf_sloc0_1_0 + 1)
      000053 ADr04r00         [ 4]  140 	lda	_fabsf_fl_10000_26
      000056 85*00            [ 3]  141 	sta	*_fabsf_sloc0_1_0
                                    142 ;	Raw cost for generated ic 14 : (20, 28.000000) count=1.000000
                                    143 ;	genRet
      000058 A5*03            [ 3]  144 	lda	*(_fabsf_sloc0_1_0 + 3)
      00005A 85*00            [ 3]  145 	sta	*___SDCC_m6502_ret3
      00005C A5*02            [ 3]  146 	lda	*(_fabsf_sloc0_1_0 + 2)
      00005E 85*00            [ 3]  147 	sta	*___SDCC_m6502_ret2
      000060 A6*01            [ 3]  148 	ldx	*(_fabsf_sloc0_1_0 + 1)
      000062 A5*00            [ 3]  149 	lda	*_fabsf_sloc0_1_0
                                    150 ;	Raw cost for generated ic 15 : (12, 18.000000) count=1.000000
                                    151 ;	genLabel
                                    152 ;	Raw cost for generated ic 16 : (0, 0.000000) count=1.000000
                                    153 ;	../fabsf.c: 41: }
                                    154 ;	genEndFunction
      000064 60               [ 6]  155 	rts
                                    156 ;	Raw cost for generated ic 17 : (1, 6.000000) count=1.000000
                                    157 	.area CODE
                                    158 	.area RODATA
                                    159 	.area XINIT
                                    160 	.area CABS    (ABS)
