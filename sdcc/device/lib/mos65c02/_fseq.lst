                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler
                                      3 ; Version 4.5.10 #15691 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _fseq
                                      6 	
      000000                          7 	.r65c02
                                      8 	.optsdcc -mmos65c02
                                      9 
                                     10 ;--------------------------------------------------------
                                     11 ;  Ordering of segments for the linker.
                                     12 ;--------------------------------------------------------
                                     13 	.area ZP      (PAG)
                                     14 	.area OSEG    (PAG, OVR)
                                     15 	.area _CODE
                                     16 	.area GSINIT
                                     17 	.area GSFINAL
                                     18 	.area CODE
                                     19 	.area RODATA
                                     20 	.area XINIT
                                     21 	.area _DATA
                                     22 	.area DATA
                                     23 	.area BSS
                                     24 ;--------------------------------------------------------
                                     25 ; Public variables in this module
                                     26 ;--------------------------------------------------------
                                     27 	.globl ___fseq_PARM_2
                                     28 	.globl ___fseq_PARM_1
                                     29 	.globl ___fseq
                                     30 ;--------------------------------------------------------
                                     31 ; ZP ram data
                                     32 ;--------------------------------------------------------
                                     33 	.area ZP      (PAG)
                                     34 ;--------------------------------------------------------
                                     35 ; overlayable items in ram
                                     36 ;--------------------------------------------------------
                                     37 	.area	OSEG    (PAG, OVR)
      000000                         38 ___fseq_sloc0_1_0:
      000000                         39 	.ds 4
      000004                         40 ___fseq_sloc1_1_0:
      000004                         41 	.ds 4
                                     42 ;--------------------------------------------------------
                                     43 ; uninitialized external ram data
                                     44 ;--------------------------------------------------------
                                     45 	.area BSS
      000000                         46 ___fseq_PARM_1:
      000000                         47 	.ds 4
      000004                         48 ___fseq_PARM_2:
      000004                         49 	.ds 4
      000008                         50 ___fseq_fl1_10000_21:
      000008                         51 	.ds 4
      00000C                         52 ___fseq_fl2_10000_21:
      00000C                         53 	.ds 4
                                     54 ;--------------------------------------------------------
                                     55 ; absolute external ram data
                                     56 ;--------------------------------------------------------
                                     57 	.area DABS    (ABS)
                                     58 ;--------------------------------------------------------
                                     59 ; initialized external ram data
                                     60 ;--------------------------------------------------------
                                     61 	.area DATA
                                     62 ;--------------------------------------------------------
                                     63 ; global & static initialisations
                                     64 ;--------------------------------------------------------
                                     65 	.area _CODE
                                     66 	.area GSINIT
                                     67 	.area GSFINAL
                                     68 	.area GSINIT
                                     69 ;--------------------------------------------------------
                                     70 ; Home
                                     71 ;--------------------------------------------------------
                                     72 	.area _CODE
                                     73 	.area _CODE
                                     74 ;--------------------------------------------------------
                                     75 ; code
                                     76 ;--------------------------------------------------------
                                     77 	.area CODE
                                     78 ;------------------------------------------------------------
                                     79 ;Allocation info for local variables in function '__fseq'
                                     80 ;------------------------------------------------------------
                                     81 ;a1            Allocated with name '___fseq_PARM_1'
                                     82 ;a2            Allocated with name '___fseq_PARM_2'
                                     83 ;fl1           Allocated with name '___fseq_fl1_10000_21'
                                     84 ;fl2           Allocated with name '___fseq_fl2_10000_21'
                                     85 ;sloc0         Allocated with name '___fseq_sloc0_1_0'
                                     86 ;sloc1         Allocated with name '___fseq_sloc1_1_0'
                                     87 ;------------------------------------------------------------
                                     88 ;	../_fseq.c: 82: _Bool __fseq (float a1, float a2) __SDCC_FLOAT_NONBANKED
                                     89 ;	genLabel
                                     90 ;	Raw cost for generated ic 0 : (0, 0.000000) count=1.000000
                                     91 ;	-----------------------------------------
                                     92 ;	 function __fseq
                                     93 ;	-----------------------------------------
                                     94 ;	Register assignment is optimal.
                                     95 ;	Stack space usage: 0 bytes.
      000000                         96 ___fseq:
                                     97 ;	Raw cost for generated ic 1 : (0, 0.000000) count=1.000000
                                     98 ;	../_fseq.c: 86: fl1.f = a1;
                                     99 ;	skipping iCode since result will be rematerialized
                                    100 ;	Raw cost for generated ic 2 : (0, 0.000000) count=1.000000
                                    101 ;	genPointerSet
                                    102 ;	genDataPointerSet
      000000 ADr03r00         [ 4]  103 	lda	(___fseq_PARM_1 + 3)
      000003 8Dr0Br00         [ 4]  104 	sta	(___fseq_fl1_10000_21 + 3)
      000006 ADr02r00         [ 4]  105 	lda	(___fseq_PARM_1 + 2)
      000009 8Dr0Ar00         [ 4]  106 	sta	(___fseq_fl1_10000_21 + 2)
      00000C ADr01r00         [ 4]  107 	lda	(___fseq_PARM_1 + 1)
      00000F 8Dr09r00         [ 4]  108 	sta	(___fseq_fl1_10000_21 + 1)
      000012 ADr00r00         [ 4]  109 	lda	___fseq_PARM_1
      000015 8Dr08r00         [ 4]  110 	sta	___fseq_fl1_10000_21
                                    111 ;	Raw cost for generated ic 4 : (24, 32.000000) count=1.000000
                                    112 ;	../_fseq.c: 87: fl2.f = a2;
                                    113 ;	skipping iCode since result will be rematerialized
                                    114 ;	Raw cost for generated ic 5 : (0, 0.000000) count=1.000000
                                    115 ;	genPointerSet
                                    116 ;	genDataPointerSet
      000018 ADr07r00         [ 4]  117 	lda	(___fseq_PARM_2 + 3)
      00001B 8Dr0Fr00         [ 4]  118 	sta	(___fseq_fl2_10000_21 + 3)
      00001E ADr06r00         [ 4]  119 	lda	(___fseq_PARM_2 + 2)
      000021 8Dr0Er00         [ 4]  120 	sta	(___fseq_fl2_10000_21 + 2)
      000024 ADr05r00         [ 4]  121 	lda	(___fseq_PARM_2 + 1)
      000027 8Dr0Dr00         [ 4]  122 	sta	(___fseq_fl2_10000_21 + 1)
      00002A ADr04r00         [ 4]  123 	lda	___fseq_PARM_2
      00002D 8Dr0Cr00         [ 4]  124 	sta	___fseq_fl2_10000_21
                                    125 ;	Raw cost for generated ic 7 : (24, 32.000000) count=1.000000
                                    126 ;	../_fseq.c: 89: if (fl1.l == fl2.l)
                                    127 ;	skipping iCode since result will be rematerialized
                                    128 ;	Raw cost for generated ic 8 : (0, 0.000000) count=1.000000
                                    129 ;	genPointerGet
                                    130 ;	genDataPointerGet
      000030 ADr0Br00         [ 4]  131 	lda	(___fseq_fl1_10000_21 + 3)
      000033 85*03            [ 3]  132 	sta	*(___fseq_sloc0_1_0 + 3)
      000035 ADr0Ar00         [ 4]  133 	lda	(___fseq_fl1_10000_21 + 2)
      000038 85*02            [ 3]  134 	sta	*(___fseq_sloc0_1_0 + 2)
      00003A ADr09r00         [ 4]  135 	lda	(___fseq_fl1_10000_21 + 1)
      00003D 85*01            [ 3]  136 	sta	*(___fseq_sloc0_1_0 + 1)
      00003F ADr08r00         [ 4]  137 	lda	___fseq_fl1_10000_21
      000042 85*00            [ 3]  138 	sta	*___fseq_sloc0_1_0
                                    139 ;	Raw cost for generated ic 10 : (20, 28.000000) count=1.000000
                                    140 ;	skipping iCode since result will be rematerialized
                                    141 ;	Raw cost for generated ic 11 : (0, 0.000000) count=1.000000
                                    142 ;	genPointerGet
                                    143 ;	genDataPointerGet
      000044 ADr0Fr00         [ 4]  144 	lda	(___fseq_fl2_10000_21 + 3)
      000047 85*07            [ 3]  145 	sta	*(___fseq_sloc1_1_0 + 3)
      000049 ADr0Er00         [ 4]  146 	lda	(___fseq_fl2_10000_21 + 2)
      00004C 85*06            [ 3]  147 	sta	*(___fseq_sloc1_1_0 + 2)
      00004E ADr0Dr00         [ 4]  148 	lda	(___fseq_fl2_10000_21 + 1)
      000051 85*05            [ 3]  149 	sta	*(___fseq_sloc1_1_0 + 1)
      000053 ADr0Cr00         [ 4]  150 	lda	___fseq_fl2_10000_21
      000056 85*04            [ 3]  151 	sta	*___fseq_sloc1_1_0
                                    152 ;	Raw cost for generated ic 13 : (20, 28.000000) count=1.000000
                                    153 ;	genCmpEQorNE
      000058 A5*00            [ 3]  154 	lda	*___fseq_sloc0_1_0
      00005A C5*04            [ 3]  155 	cmp	*___fseq_sloc1_1_0
      00005C D0 15            [ 4]  156 	bne	00102$
      00005E A5*01            [ 3]  157 	lda	*(___fseq_sloc0_1_0 + 1)
      000060 C5*05            [ 3]  158 	cmp	*(___fseq_sloc1_1_0 + 1)
      000062 D0 0F            [ 4]  159 	bne	00102$
      000064 A5*02            [ 3]  160 	lda	*(___fseq_sloc0_1_0 + 2)
      000066 C5*06            [ 3]  161 	cmp	*(___fseq_sloc1_1_0 + 2)
      000068 D0 09            [ 4]  162 	bne	00102$
      00006A A5*03            [ 3]  163 	lda	*(___fseq_sloc0_1_0 + 3)
      00006C C5*07            [ 3]  164 	cmp	*(___fseq_sloc1_1_0 + 3)
      00006E D0 03            [ 4]  165 	bne	00102$
                                    166 ;	Raw cost for generated ic 14 : (36, 46.400002) count=1.000000
                                    167 ;	skipping generated iCode
                                    168 ;	Raw cost for generated ic 15 : (0, 0.000000) count=1.000000
                                    169 ;	../_fseq.c: 90: return (1);
                                    170 ;	genRet
      000070 A9 01            [ 2]  171 	lda	#0x01
      000072 60               [ 6]  172 	rts
                                    173 ;	Raw cost for generated ic 18 : (5, 5.000000) count=0.750000
                                    174 ;	genLabel
      000073                        175 00102$:
                                    176 ;	Raw cost for generated ic 19 : (0, 0.000000) count=1.000000
                                    177 ;	../_fseq.c: 92: if ((fl1.l & 0x7fffffff) == 0 && (fl2.l & 0x7fffffff) == 0)
                                    178 ;	skipping iCode since result will be rematerialized
                                    179 ;	Raw cost for generated ic 20 : (0, 0.000000) count=1.000000
                                    180 ;	genPointerGet
                                    181 ;	genDataPointerGet
      000073 ADr0Br00         [ 4]  182 	lda	(___fseq_fl1_10000_21 + 3)
      000076 85*07            [ 3]  183 	sta	*(___fseq_sloc1_1_0 + 3)
      000078 ADr0Ar00         [ 4]  184 	lda	(___fseq_fl1_10000_21 + 2)
      00007B 85*06            [ 3]  185 	sta	*(___fseq_sloc1_1_0 + 2)
      00007D ADr09r00         [ 4]  186 	lda	(___fseq_fl1_10000_21 + 1)
      000080 85*05            [ 3]  187 	sta	*(___fseq_sloc1_1_0 + 1)
      000082 ADr08r00         [ 4]  188 	lda	___fseq_fl1_10000_21
      000085 85*04            [ 3]  189 	sta	*___fseq_sloc1_1_0
                                    190 ;	Raw cost for generated ic 22 : (20, 28.000000) count=1.000000
                                    191 ;	genAnd
      000087 D0 0C            [ 4]  192 	bne	00131$
      000089 A5*05            [ 3]  193 	lda	*(___fseq_sloc1_1_0 + 1)
      00008B D0 08            [ 4]  194 	bne	00131$
      00008D A5*06            [ 3]  195 	lda	*(___fseq_sloc1_1_0 + 2)
      00008F D0 04            [ 4]  196 	bne	00131$
      000091 A5*07            [ 3]  197 	lda	*(___fseq_sloc1_1_0 + 3)
      000093 29 7F            [ 2]  198 	and	#0x7f
      000095                        199 00131$:
                                    200 ;	genIfxJump : z
      000095 D0 27            [ 4]  201 	bne	00104$
                                    202 ;	Raw cost for generated ic 23 : (19, 24.400000) count=1.000000
                                    203 ;	skipping generated iCode
                                    204 ;	Raw cost for generated ic 24 : (0, 0.000000) count=1.000000
                                    205 ;	skipping iCode since result will be rematerialized
                                    206 ;	Raw cost for generated ic 27 : (0, 0.000000) count=0.750000
                                    207 ;	genPointerGet
                                    208 ;	genDataPointerGet
      000097 ADr0Fr00         [ 4]  209 	lda	(___fseq_fl2_10000_21 + 3)
      00009A 85*07            [ 3]  210 	sta	*(___fseq_sloc1_1_0 + 3)
      00009C ADr0Er00         [ 4]  211 	lda	(___fseq_fl2_10000_21 + 2)
      00009F 85*06            [ 3]  212 	sta	*(___fseq_sloc1_1_0 + 2)
      0000A1 ADr0Dr00         [ 4]  213 	lda	(___fseq_fl2_10000_21 + 1)
      0000A4 85*05            [ 3]  214 	sta	*(___fseq_sloc1_1_0 + 1)
      0000A6 ADr0Cr00         [ 4]  215 	lda	___fseq_fl2_10000_21
      0000A9 85*04            [ 3]  216 	sta	*___fseq_sloc1_1_0
                                    217 ;	Raw cost for generated ic 29 : (20, 28.000000) count=0.750000
                                    218 ;	genAnd
      0000AB D0 0C            [ 4]  219 	bne	00133$
      0000AD A5*05            [ 3]  220 	lda	*(___fseq_sloc1_1_0 + 1)
      0000AF D0 08            [ 4]  221 	bne	00133$
      0000B1 A5*06            [ 3]  222 	lda	*(___fseq_sloc1_1_0 + 2)
      0000B3 D0 04            [ 4]  223 	bne	00133$
      0000B5 A5*07            [ 3]  224 	lda	*(___fseq_sloc1_1_0 + 3)
      0000B7 29 7F            [ 2]  225 	and	#0x7f
      0000B9                        226 00133$:
                                    227 ;	genIfxJump : z
      0000B9 D0 03            [ 4]  228 	bne	00104$
                                    229 ;	Raw cost for generated ic 30 : (19, 24.400000) count=0.750000
                                    230 ;	skipping generated iCode
                                    231 ;	Raw cost for generated ic 31 : (0, 0.000000) count=0.750000
                                    232 ;	../_fseq.c: 93: return (1);
                                    233 ;	genRet
      0000BB A9 01            [ 2]  234 	lda	#0x01
      0000BD 60               [ 6]  235 	rts
                                    236 ;	Raw cost for generated ic 34 : (5, 5.000000) count=0.562500
                                    237 ;	genLabel
      0000BE                        238 00104$:
                                    239 ;	Raw cost for generated ic 35 : (0, 0.000000) count=1.000000
                                    240 ;	../_fseq.c: 94: return (0);
                                    241 ;	genRet
      0000BE A9 00            [ 2]  242 	lda	#0x00
                                    243 ;	Raw cost for generated ic 36 : (2, 2.000000) count=1.000000
                                    244 ;	genLabel
                                    245 ;	Raw cost for generated ic 37 : (0, 0.000000) count=1.000000
                                    246 ;	../_fseq.c: 95: }
                                    247 ;	genEndFunction
      0000C0 60               [ 6]  248 	rts
                                    249 ;	Raw cost for generated ic 38 : (1, 6.000000) count=1.000000
                                    250 	.area CODE
                                    251 	.area RODATA
                                    252 	.area XINIT
                                    253 	.area CABS    (ABS)
