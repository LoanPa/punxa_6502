                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler
                                      3 ; Version 4.5.10 #15691 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _fsmul
                                      6 	
      000000                          7 	.r65c02
                                      8 	.optsdcc -mmos65c02
                                      9 
                                     10 ;--------------------------------------------------------
                                     11 ;  Ordering of segments for the linker.
                                     12 ;--------------------------------------------------------
                                     13 	.area ZP      (PAG)
                                     14 	.area OSEG    (PAG, OVR)
                                     15 	.area _CODE
                                     16 	.area GSINIT
                                     17 	.area GSFINAL
                                     18 	.area CODE
                                     19 	.area RODATA
                                     20 	.area XINIT
                                     21 	.area _DATA
                                     22 	.area DATA
                                     23 	.area BSS
                                     24 ;--------------------------------------------------------
                                     25 ; Public variables in this module
                                     26 ;--------------------------------------------------------
                                     27 	.globl ___fsmul_PARM_2
                                     28 	.globl ___fsmul_PARM_1
                                     29 	.globl ___fsmul
                                     30 ;--------------------------------------------------------
                                     31 ; ZP ram data
                                     32 ;--------------------------------------------------------
                                     33 	.area ZP      (PAG)
      000000                         34 ___fsmul_sloc0_1_0:
      000000                         35 	.ds 4
      000004                         36 ___fsmul_sloc1_1_0:
      000004                         37 	.ds 4
                                     38 ;--------------------------------------------------------
                                     39 ; overlayable items in ram
                                     40 ;--------------------------------------------------------
                                     41 ;--------------------------------------------------------
                                     42 ; uninitialized external ram data
                                     43 ;--------------------------------------------------------
                                     44 	.area BSS
      000000                         45 ___fsmul_PARM_1:
      000000                         46 	.ds 4
      000004                         47 ___fsmul_PARM_2:
      000004                         48 	.ds 4
      000008                         49 ___fsmul_fl1_10000_21:
      000008                         50 	.ds 4
      00000C                         51 ___fsmul_fl2_10000_21:
      00000C                         52 	.ds 4
      000010                         53 ___fsmul_result_10000_21:
      000010                         54 	.ds 4
      000014                         55 ___fsmul_exp_10000_21:
      000014                         56 	.ds 2
      000016                         57 ___fsmul_sign_10000_21:
      000016                         58 	.ds 1
                                     59 ;--------------------------------------------------------
                                     60 ; absolute external ram data
                                     61 ;--------------------------------------------------------
                                     62 	.area DABS    (ABS)
                                     63 ;--------------------------------------------------------
                                     64 ; initialized external ram data
                                     65 ;--------------------------------------------------------
                                     66 	.area DATA
                                     67 ;--------------------------------------------------------
                                     68 ; global & static initialisations
                                     69 ;--------------------------------------------------------
                                     70 	.area _CODE
                                     71 	.area GSINIT
                                     72 	.area GSFINAL
                                     73 	.area GSINIT
                                     74 ;--------------------------------------------------------
                                     75 ; Home
                                     76 ;--------------------------------------------------------
                                     77 	.area _CODE
                                     78 	.area _CODE
                                     79 ;--------------------------------------------------------
                                     80 ; code
                                     81 ;--------------------------------------------------------
                                     82 	.area CODE
                                     83 ;------------------------------------------------------------
                                     84 ;Allocation info for local variables in function '__fsmul'
                                     85 ;------------------------------------------------------------
                                     86 ;sloc0         Allocated with name '___fsmul_sloc0_1_0'
                                     87 ;sloc1         Allocated with name '___fsmul_sloc1_1_0'
                                     88 ;a1            Allocated with name '___fsmul_PARM_1'
                                     89 ;a2            Allocated with name '___fsmul_PARM_2'
                                     90 ;fl1           Allocated with name '___fsmul_fl1_10000_21'
                                     91 ;fl2           Allocated with name '___fsmul_fl2_10000_21'
                                     92 ;result        Allocated with name '___fsmul_result_10000_21'
                                     93 ;exp           Allocated with name '___fsmul_exp_10000_21'
                                     94 ;sign          Allocated with name '___fsmul_sign_10000_21'
                                     95 ;------------------------------------------------------------
                                     96 ;	../_fsmul.c: 241: float __fsmul (float a1, float a2) __SDCC_FLOAT_NONBANKED
                                     97 ;	genLabel
                                     98 ;	Raw cost for generated ic 0 : (0, 0.000000) count=1.000000
                                     99 ;	-----------------------------------------
                                    100 ;	 function __fsmul
                                    101 ;	-----------------------------------------
                                    102 ;	Register assignment is optimal.
                                    103 ;	Stack space usage: 0 bytes.
      000000                        104 ___fsmul:
                                    105 ;	Raw cost for generated ic 1 : (0, 0.000000) count=1.000000
                                    106 ;	../_fsmul.c: 248: fl1.f = a1;
                                    107 ;	skipping iCode since result will be rematerialized
                                    108 ;	Raw cost for generated ic 2 : (0, 0.000000) count=1.000000
                                    109 ;	genPointerSet
                                    110 ;	genDataPointerSet
      000000 ADr03r00         [ 4]  111 	lda	(___fsmul_PARM_1 + 3)
      000003 8Dr0Br00         [ 4]  112 	sta	(___fsmul_fl1_10000_21 + 3)
      000006 ADr02r00         [ 4]  113 	lda	(___fsmul_PARM_1 + 2)
      000009 8Dr0Ar00         [ 4]  114 	sta	(___fsmul_fl1_10000_21 + 2)
      00000C ADr01r00         [ 4]  115 	lda	(___fsmul_PARM_1 + 1)
      00000F 8Dr09r00         [ 4]  116 	sta	(___fsmul_fl1_10000_21 + 1)
      000012 ADr00r00         [ 4]  117 	lda	___fsmul_PARM_1
      000015 8Dr08r00         [ 4]  118 	sta	___fsmul_fl1_10000_21
                                    119 ;	Raw cost for generated ic 4 : (24, 32.000000) count=1.000000
                                    120 ;	../_fsmul.c: 249: fl2.f = a2;
                                    121 ;	skipping iCode since result will be rematerialized
                                    122 ;	Raw cost for generated ic 5 : (0, 0.000000) count=1.000000
                                    123 ;	genPointerSet
                                    124 ;	genDataPointerSet
      000018 ADr07r00         [ 4]  125 	lda	(___fsmul_PARM_2 + 3)
      00001B 8Dr0Fr00         [ 4]  126 	sta	(___fsmul_fl2_10000_21 + 3)
      00001E ADr06r00         [ 4]  127 	lda	(___fsmul_PARM_2 + 2)
      000021 8Dr0Er00         [ 4]  128 	sta	(___fsmul_fl2_10000_21 + 2)
      000024 ADr05r00         [ 4]  129 	lda	(___fsmul_PARM_2 + 1)
      000027 8Dr0Dr00         [ 4]  130 	sta	(___fsmul_fl2_10000_21 + 1)
      00002A ADr04r00         [ 4]  131 	lda	___fsmul_PARM_2
      00002D 8Dr0Cr00         [ 4]  132 	sta	___fsmul_fl2_10000_21
                                    133 ;	Raw cost for generated ic 7 : (24, 32.000000) count=1.000000
                                    134 ;	../_fsmul.c: 251: if (!fl1.l || !fl2.l)
                                    135 ;	skipping iCode since result will be rematerialized
                                    136 ;	Raw cost for generated ic 8 : (0, 0.000000) count=1.000000
                                    137 ;	genPointerGet
                                    138 ;	genDataPointerGet
      000030 ADr0Br00         [ 4]  139 	lda	(___fsmul_fl1_10000_21 + 3)
      000033 85*03            [ 3]  140 	sta	*(___fsmul_sloc0_1_0 + 3)
      000035 ADr0Ar00         [ 4]  141 	lda	(___fsmul_fl1_10000_21 + 2)
      000038 85*02            [ 3]  142 	sta	*(___fsmul_sloc0_1_0 + 2)
      00003A ADr09r00         [ 4]  143 	lda	(___fsmul_fl1_10000_21 + 1)
      00003D 85*01            [ 3]  144 	sta	*(___fsmul_sloc0_1_0 + 1)
      00003F ADr08r00         [ 4]  145 	lda	___fsmul_fl1_10000_21
      000042 85*00            [ 3]  146 	sta	*___fsmul_sloc0_1_0
                                    147 ;	Raw cost for generated ic 10 : (20, 28.000000) count=1.000000
                                    148 ;	genIfx
      000044 A5*03            [ 3]  149 	lda	*(___fsmul_sloc0_1_0 + 3)
      000046 05*02            [ 3]  150 	ora	*(___fsmul_sloc0_1_0 + 2)
      000048 05*01            [ 3]  151 	ora	*(___fsmul_sloc0_1_0 + 1)
      00004A 05*00            [ 3]  152 	ora	*___fsmul_sloc0_1_0
                                    153 ;	genIfxJump : z
      00004C F0 1E            [ 4]  154 	beq	00101$
                                    155 ;	Raw cost for generated ic 11 : (13, 17.600000) count=1.000000
                                    156 ;	skipping iCode since result will be rematerialized
                                    157 ;	Raw cost for generated ic 14 : (0, 0.000000) count=0.750000
                                    158 ;	genPointerGet
                                    159 ;	genDataPointerGet
      00004E ADr0Fr00         [ 4]  160 	lda	(___fsmul_fl2_10000_21 + 3)
      000051 85*03            [ 3]  161 	sta	*(___fsmul_sloc0_1_0 + 3)
      000053 ADr0Er00         [ 4]  162 	lda	(___fsmul_fl2_10000_21 + 2)
      000056 85*02            [ 3]  163 	sta	*(___fsmul_sloc0_1_0 + 2)
      000058 ADr0Dr00         [ 4]  164 	lda	(___fsmul_fl2_10000_21 + 1)
      00005B 85*01            [ 3]  165 	sta	*(___fsmul_sloc0_1_0 + 1)
      00005D ADr0Cr00         [ 4]  166 	lda	___fsmul_fl2_10000_21
      000060 85*00            [ 3]  167 	sta	*___fsmul_sloc0_1_0
                                    168 ;	Raw cost for generated ic 16 : (20, 28.000000) count=0.750000
                                    169 ;	genIfx
      000062 A5*03            [ 3]  170 	lda	*(___fsmul_sloc0_1_0 + 3)
      000064 05*02            [ 3]  171 	ora	*(___fsmul_sloc0_1_0 + 2)
      000066 05*01            [ 3]  172 	ora	*(___fsmul_sloc0_1_0 + 1)
      000068 05*00            [ 3]  173 	ora	*___fsmul_sloc0_1_0
                                    174 ;	genIfxJump : z
      00006A D0 08            [ 4]  175 	bne	00102$
                                    176 ;	Raw cost for generated ic 17 : (13, 17.600000) count=0.750000
                                    177 ;	genLabel
      00006C                        178 00101$:
                                    179 ;	Raw cost for generated ic 19 : (0, 0.000000) count=0.812500
                                    180 ;	../_fsmul.c: 252: return (0);
                                    181 ;	genRet
      00006C A9 00            [ 2]  182 	lda	#0x00
      00006E AA               [ 2]  183 	tax
      00006F 85*00            [ 3]  184 	sta	*___SDCC_m6502_ret2
      000071 85*00            [ 3]  185 	sta	*___SDCC_m6502_ret3
      000073 60               [ 6]  186 	rts
                                    187 ;	Raw cost for generated ic 20 : (10, 13.000000) count=0.812500
                                    188 ;	genLabel
      000074                        189 00102$:
                                    190 ;	Raw cost for generated ic 21 : (0, 0.000000) count=1.000000
                                    191 ;	../_fsmul.c: 255: sign = SIGN (fl1.l) ^ SIGN (fl2.l);
                                    192 ;	skipping iCode since result will be rematerialized
                                    193 ;	Raw cost for generated ic 22 : (0, 0.000000) count=1.000000
                                    194 ;	genPointerGet
                                    195 ;	genDataPointerGet
      000074 ADr0Br00         [ 4]  196 	lda	(___fsmul_fl1_10000_21 + 3)
      000077 85*03            [ 3]  197 	sta	*(___fsmul_sloc0_1_0 + 3)
      000079 ADr0Ar00         [ 4]  198 	lda	(___fsmul_fl1_10000_21 + 2)
      00007C 85*02            [ 3]  199 	sta	*(___fsmul_sloc0_1_0 + 2)
      00007E ADr09r00         [ 4]  200 	lda	(___fsmul_fl1_10000_21 + 1)
      000081 85*01            [ 3]  201 	sta	*(___fsmul_sloc0_1_0 + 1)
      000083 ADr08r00         [ 4]  202 	lda	___fsmul_fl1_10000_21
      000086 85*00            [ 3]  203 	sta	*___fsmul_sloc0_1_0
                                    204 ;	Raw cost for generated ic 24 : (20, 28.000000) count=1.000000
                                    205 ;	genRightShift
                                    206 ;	genRightShiftLiteral
                                    207 ;	  genrsh32 - shift=31
      000088 A5*03            [ 3]  208 	lda	*(___fsmul_sloc0_1_0 + 3)
      00008A 0A               [ 2]  209 	asl	a
      00008B A9 00            [ 2]  210 	lda	#0x00
      00008D 85*03            [ 3]  211 	sta	*(___fsmul_sloc0_1_0 + 3)
      00008F 85*02            [ 3]  212 	sta	*(___fsmul_sloc0_1_0 + 2)
      000091 85*01            [ 3]  213 	sta	*(___fsmul_sloc0_1_0 + 1)
      000093 2A               [ 2]  214 	rol	a
      000094 85*00            [ 3]  215 	sta	*___fsmul_sloc0_1_0
                                    216 ;	Raw cost for generated ic 25 : (14, 21.000000) count=1.000000
                                    217 ;	genCast
                                    218 ;	genCopy
                                    219 ;	Raw cost for generated ic 187 : (0, 0.000000) count=1.000000
                                    220 ;	genAnd
      000096 29 01            [ 2]  221 	and	#0x01
      000098 85*00            [ 3]  222 	sta	*___fsmul_sloc0_1_0
                                    223 ;	Raw cost for generated ic 26 : (4, 5.000000) count=1.000000
                                    224 ;	skipping iCode since result will be rematerialized
                                    225 ;	Raw cost for generated ic 27 : (0, 0.000000) count=1.000000
                                    226 ;	genPointerGet
                                    227 ;	genDataPointerGet
      00009A ADr0Fr00         [ 4]  228 	lda	(___fsmul_fl2_10000_21 + 3)
      00009D 85*07            [ 3]  229 	sta	*(___fsmul_sloc1_1_0 + 3)
      00009F ADr0Er00         [ 4]  230 	lda	(___fsmul_fl2_10000_21 + 2)
      0000A2 85*06            [ 3]  231 	sta	*(___fsmul_sloc1_1_0 + 2)
      0000A4 ADr0Dr00         [ 4]  232 	lda	(___fsmul_fl2_10000_21 + 1)
      0000A7 85*05            [ 3]  233 	sta	*(___fsmul_sloc1_1_0 + 1)
      0000A9 ADr0Cr00         [ 4]  234 	lda	___fsmul_fl2_10000_21
      0000AC 85*04            [ 3]  235 	sta	*___fsmul_sloc1_1_0
                                    236 ;	Raw cost for generated ic 29 : (20, 28.000000) count=1.000000
                                    237 ;	genRightShift
                                    238 ;	genRightShiftLiteral
                                    239 ;	  genrsh32 - shift=31
      0000AE A5*07            [ 3]  240 	lda	*(___fsmul_sloc1_1_0 + 3)
      0000B0 0A               [ 2]  241 	asl	a
      0000B1 A9 00            [ 2]  242 	lda	#0x00
      0000B3 85*07            [ 3]  243 	sta	*(___fsmul_sloc1_1_0 + 3)
      0000B5 85*06            [ 3]  244 	sta	*(___fsmul_sloc1_1_0 + 2)
      0000B7 85*05            [ 3]  245 	sta	*(___fsmul_sloc1_1_0 + 1)
      0000B9 2A               [ 2]  246 	rol	a
      0000BA 85*04            [ 3]  247 	sta	*___fsmul_sloc1_1_0
                                    248 ;	Raw cost for generated ic 30 : (14, 21.000000) count=1.000000
                                    249 ;	genCast
                                    250 ;	genCopy
                                    251 ;	Raw cost for generated ic 188 : (0, 0.000000) count=1.000000
                                    252 ;	genAnd
      0000BC 29 01            [ 2]  253 	and	#0x01
                                    254 ;	Raw cost for generated ic 31 : (2, 2.000000) count=1.000000
                                    255 ;	genXor
      0000BE 45*00            [ 3]  256 	eor	*___fsmul_sloc0_1_0
      0000C0 8Dr16r00         [ 4]  257 	sta	___fsmul_sign_10000_21
                                    258 ;	Raw cost for generated ic 32 : (5, 7.000000) count=1.000000
                                    259 ;	../_fsmul.c: 256: exp = EXP (fl1.l) - EXCESS;
                                    260 ;	skipping iCode since result will be rematerialized
                                    261 ;	Raw cost for generated ic 35 : (0, 0.000000) count=1.000000
                                    262 ;	genPointerGet
                                    263 ;	genDataPointerGet
      0000C3 ADr0Br00         [ 4]  264 	lda	(___fsmul_fl1_10000_21 + 3)
      0000C6 85*07            [ 3]  265 	sta	*(___fsmul_sloc1_1_0 + 3)
      0000C8 ADr0Ar00         [ 4]  266 	lda	(___fsmul_fl1_10000_21 + 2)
      0000CB 85*06            [ 3]  267 	sta	*(___fsmul_sloc1_1_0 + 2)
      0000CD ADr09r00         [ 4]  268 	lda	(___fsmul_fl1_10000_21 + 1)
      0000D0 85*05            [ 3]  269 	sta	*(___fsmul_sloc1_1_0 + 1)
      0000D2 ADr08r00         [ 4]  270 	lda	___fsmul_fl1_10000_21
      0000D5 85*04            [ 3]  271 	sta	*___fsmul_sloc1_1_0
                                    272 ;	Raw cost for generated ic 37 : (20, 28.000000) count=1.000000
                                    273 ;	genRightShift
                                    274 ;	genRightShiftLiteral
                                    275 ;	  genrsh32 - shift=23
      0000D7 A5*06            [ 3]  276 	lda	*(___fsmul_sloc1_1_0 + 2)
      0000D9 2A               [ 2]  277 	rol	a
      0000DA A5*07            [ 3]  278 	lda	*(___fsmul_sloc1_1_0 + 3)
      0000DC 2A               [ 2]  279 	rol	a
      0000DD 85*04            [ 3]  280 	sta	*___fsmul_sloc1_1_0
      0000DF A9 00            [ 2]  281 	lda	#0x00
      0000E1 85*06            [ 3]  282 	sta	*(___fsmul_sloc1_1_0 + 2)
      0000E3 85*07            [ 3]  283 	sta	*(___fsmul_sloc1_1_0 + 3)
      0000E5 2A               [ 2]  284 	rol	a
      0000E6 85*05            [ 3]  285 	sta	*(___fsmul_sloc1_1_0 + 1)
                                    286 ;	Raw cost for generated ic 38 : (17, 26.000000) count=1.000000
                                    287 ;	genCast
                                    288 ;	genCopy
                                    289 ;	Raw cost for generated ic 189 : (3, 5.000000) count=1.000000
                                    290 ;	genAnd
      0000E8 A5*04            [ 3]  291 	lda *___fsmul_sloc1_1_0
      0000EA A2 00            [ 2]  292 	ldx #0x00
                                    293 ;	Raw cost for generated ic 39 : (2, 2.000000) count=1.000000
                                    294 ;	genMinus
                                    295 ;	  genMinusDec - size=2  icount=126
      0000EC 38               [ 2]  296 	sec
      0000ED E9 7E            [ 3]  297 	sbc	#0x7e
      0000EF 85*04            [ 3]  298 	sta	*___fsmul_sloc1_1_0
      0000F1 8A               [ 2]  299 	txa
      0000F2 E9 00            [ 3]  300 	sbc	#0x00
      0000F4 85*05            [ 3]  301 	sta	*(___fsmul_sloc1_1_0 + 1)
                                    302 ;	Raw cost for generated ic 40 : (10, 14.000000) count=1.000000
                                    303 ;	../_fsmul.c: 257: exp += EXP (fl2.l);
                                    304 ;	skipping iCode since result will be rematerialized
                                    305 ;	Raw cost for generated ic 43 : (0, 0.000000) count=1.000000
                                    306 ;	genPointerGet
                                    307 ;	genDataPointerGet
      0000F6 ADr0Fr00         [ 4]  308 	lda	(___fsmul_fl2_10000_21 + 3)
      0000F9 85*03            [ 3]  309 	sta	*(___fsmul_sloc0_1_0 + 3)
      0000FB ADr0Er00         [ 4]  310 	lda	(___fsmul_fl2_10000_21 + 2)
      0000FE 85*02            [ 3]  311 	sta	*(___fsmul_sloc0_1_0 + 2)
      000100 ADr0Dr00         [ 4]  312 	lda	(___fsmul_fl2_10000_21 + 1)
      000103 85*01            [ 3]  313 	sta	*(___fsmul_sloc0_1_0 + 1)
      000105 ADr0Cr00         [ 4]  314 	lda	___fsmul_fl2_10000_21
      000108 85*00            [ 3]  315 	sta	*___fsmul_sloc0_1_0
                                    316 ;	Raw cost for generated ic 45 : (20, 28.000000) count=1.000000
                                    317 ;	genRightShift
                                    318 ;	genRightShiftLiteral
                                    319 ;	  genrsh32 - shift=23
      00010A A5*02            [ 3]  320 	lda	*(___fsmul_sloc0_1_0 + 2)
      00010C 2A               [ 2]  321 	rol	a
      00010D A5*03            [ 3]  322 	lda	*(___fsmul_sloc0_1_0 + 3)
      00010F 2A               [ 2]  323 	rol	a
      000110 85*00            [ 3]  324 	sta	*___fsmul_sloc0_1_0
      000112 8A               [ 2]  325 	txa
      000113 85*02            [ 3]  326 	sta	*(___fsmul_sloc0_1_0 + 2)
      000115 85*03            [ 3]  327 	sta	*(___fsmul_sloc0_1_0 + 3)
      000117 2A               [ 2]  328 	rol	a
      000118 85*01            [ 3]  329 	sta	*(___fsmul_sloc0_1_0 + 1)
                                    330 ;	Raw cost for generated ic 46 : (16, 26.000000) count=1.000000
                                    331 ;	genCast
                                    332 ;	genCopy
                                    333 ;	Raw cost for generated ic 190 : (3, 5.000000) count=1.000000
                                    334 ;	genAnd
      00011A A5*00            [ 3]  335 	lda *___fsmul_sloc0_1_0
      00011C A2 00            [ 2]  336 	ldx #0x00
                                    337 ;	Raw cost for generated ic 47 : (2, 2.000000) count=1.000000
                                    338 ;	genPlus
      00011E 18               [ 2]  339 	clc
      00011F 65*04            [ 4]  340 	adc	*___fsmul_sloc1_1_0
      000121 8Dr14r00         [ 4]  341 	sta	___fsmul_exp_10000_21
      000124 8A               [ 2]  342 	txa
      000125 65*05            [ 4]  343 	adc	*(___fsmul_sloc1_1_0 + 1)
      000127 8Dr15r00         [ 4]  344 	sta	(___fsmul_exp_10000_21 + 1)
                                    345 ;	Raw cost for generated ic 49 : (12, 18.000000) count=1.000000
                                    346 ;	../_fsmul.c: 259: fl1.l = MANT (fl1.l);
                                    347 ;	skipping iCode since result will be rematerialized
                                    348 ;	Raw cost for generated ic 52 : (0, 0.000000) count=1.000000
                                    349 ;	skipping iCode since result will be rematerialized
                                    350 ;	Raw cost for generated ic 54 : (0, 0.000000) count=1.000000
                                    351 ;	genPointerGet
                                    352 ;	genDataPointerGet
      00012A ADr0Br00         [ 4]  353 	lda	(___fsmul_fl1_10000_21 + 3)
      00012D 85*07            [ 3]  354 	sta	*(___fsmul_sloc1_1_0 + 3)
      00012F ADr0Ar00         [ 4]  355 	lda	(___fsmul_fl1_10000_21 + 2)
      000132 85*06            [ 3]  356 	sta	*(___fsmul_sloc1_1_0 + 2)
      000134 ADr09r00         [ 4]  357 	lda	(___fsmul_fl1_10000_21 + 1)
      000137 85*05            [ 3]  358 	sta	*(___fsmul_sloc1_1_0 + 1)
      000139 ADr08r00         [ 4]  359 	lda	___fsmul_fl1_10000_21
      00013C 85*04            [ 3]  360 	sta	*___fsmul_sloc1_1_0
                                    361 ;	Raw cost for generated ic 56 : (20, 28.000000) count=1.000000
                                    362 ;	genAnd
      00013E 86*07            [ 3]  363 	stx	*(___fsmul_sloc1_1_0 + 3)
                                    364 ;	Raw cost for generated ic 57 : (2, 3.000000) count=1.000000
                                    365 ;	genOr
      000140 A5*06            [ 3]  366 	lda	*(___fsmul_sloc1_1_0 + 2)
      000142 09 80            [ 2]  367 	ora	#0x80
      000144 85*06            [ 3]  368 	sta	*(___fsmul_sloc1_1_0 + 2)
                                    369 ;	Raw cost for generated ic 58 : (6, 8.000000) count=1.000000
                                    370 ;	genPointerSet
                                    371 ;	genDataPointerSet
      000146 A5*07            [ 3]  372 	lda	*(___fsmul_sloc1_1_0 + 3)
      000148 8Dr0Br00         [ 4]  373 	sta	(___fsmul_fl1_10000_21 + 3)
      00014B A5*06            [ 3]  374 	lda	*(___fsmul_sloc1_1_0 + 2)
      00014D 8Dr0Ar00         [ 4]  375 	sta	(___fsmul_fl1_10000_21 + 2)
      000150 A5*05            [ 3]  376 	lda	*(___fsmul_sloc1_1_0 + 1)
      000152 8Dr09r00         [ 4]  377 	sta	(___fsmul_fl1_10000_21 + 1)
      000155 A5*04            [ 3]  378 	lda	*___fsmul_sloc1_1_0
      000157 8Dr08r00         [ 4]  379 	sta	___fsmul_fl1_10000_21
                                    380 ;	Raw cost for generated ic 59 : (20, 28.000000) count=1.000000
                                    381 ;	../_fsmul.c: 260: fl2.l = MANT (fl2.l);
                                    382 ;	skipping iCode since result will be rematerialized
                                    383 ;	Raw cost for generated ic 60 : (0, 0.000000) count=1.000000
                                    384 ;	skipping iCode since result will be rematerialized
                                    385 ;	Raw cost for generated ic 62 : (0, 0.000000) count=1.000000
                                    386 ;	genPointerGet
                                    387 ;	genDataPointerGet
      00015A ADr0Fr00         [ 4]  388 	lda	(___fsmul_fl2_10000_21 + 3)
      00015D 85*07            [ 3]  389 	sta	*(___fsmul_sloc1_1_0 + 3)
      00015F ADr0Er00         [ 4]  390 	lda	(___fsmul_fl2_10000_21 + 2)
      000162 85*06            [ 3]  391 	sta	*(___fsmul_sloc1_1_0 + 2)
      000164 ADr0Dr00         [ 4]  392 	lda	(___fsmul_fl2_10000_21 + 1)
      000167 85*05            [ 3]  393 	sta	*(___fsmul_sloc1_1_0 + 1)
      000169 ADr0Cr00         [ 4]  394 	lda	___fsmul_fl2_10000_21
      00016C 85*04            [ 3]  395 	sta	*___fsmul_sloc1_1_0
                                    396 ;	Raw cost for generated ic 64 : (20, 28.000000) count=1.000000
                                    397 ;	genAnd
      00016E 86*07            [ 3]  398 	stx	*(___fsmul_sloc1_1_0 + 3)
                                    399 ;	Raw cost for generated ic 65 : (2, 3.000000) count=1.000000
                                    400 ;	genOr
      000170 A5*06            [ 3]  401 	lda	*(___fsmul_sloc1_1_0 + 2)
      000172 09 80            [ 2]  402 	ora	#0x80
      000174 85*06            [ 3]  403 	sta	*(___fsmul_sloc1_1_0 + 2)
                                    404 ;	Raw cost for generated ic 66 : (6, 8.000000) count=1.000000
                                    405 ;	genPointerSet
                                    406 ;	genDataPointerSet
      000176 A5*07            [ 3]  407 	lda	*(___fsmul_sloc1_1_0 + 3)
      000178 8Dr0Fr00         [ 4]  408 	sta	(___fsmul_fl2_10000_21 + 3)
      00017B A5*06            [ 3]  409 	lda	*(___fsmul_sloc1_1_0 + 2)
      00017D 8Dr0Er00         [ 4]  410 	sta	(___fsmul_fl2_10000_21 + 2)
      000180 A5*05            [ 3]  411 	lda	*(___fsmul_sloc1_1_0 + 1)
      000182 8Dr0Dr00         [ 4]  412 	sta	(___fsmul_fl2_10000_21 + 1)
      000185 A5*04            [ 3]  413 	lda	*___fsmul_sloc1_1_0
      000187 8Dr0Cr00         [ 4]  414 	sta	___fsmul_fl2_10000_21
                                    415 ;	Raw cost for generated ic 67 : (20, 28.000000) count=1.000000
                                    416 ;	../_fsmul.c: 263: result = (unsigned long)((unsigned short)(fl1.l >> 8)) * (unsigned short)(fl2.l >> 8);
                                    417 ;	skipping iCode since result will be rematerialized
                                    418 ;	Raw cost for generated ic 68 : (0, 0.000000) count=1.000000
                                    419 ;	genPointerGet
                                    420 ;	genDataPointerGet
      00018A ADr0Br00         [ 4]  421 	lda	(___fsmul_fl1_10000_21 + 3)
      00018D 85*07            [ 3]  422 	sta	*(___fsmul_sloc1_1_0 + 3)
      00018F ADr0Ar00         [ 4]  423 	lda	(___fsmul_fl1_10000_21 + 2)
      000192 85*06            [ 3]  424 	sta	*(___fsmul_sloc1_1_0 + 2)
      000194 ADr09r00         [ 4]  425 	lda	(___fsmul_fl1_10000_21 + 1)
      000197 85*05            [ 3]  426 	sta	*(___fsmul_sloc1_1_0 + 1)
      000199 ADr08r00         [ 4]  427 	lda	___fsmul_fl1_10000_21
      00019C 85*04            [ 3]  428 	sta	*___fsmul_sloc1_1_0
                                    429 ;	Raw cost for generated ic 70 : (20, 28.000000) count=1.000000
                                    430 ;	genRightShift
                                    431 ;	genRightShiftLiteral
                                    432 ;	  genrsh32 - shift=8
      00019E A5*05            [ 3]  433 	lda	*(___fsmul_sloc1_1_0 + 1)
      0001A0 85*04            [ 3]  434 	sta	*___fsmul_sloc1_1_0
      0001A2 A5*06            [ 3]  435 	lda	*(___fsmul_sloc1_1_0 + 2)
      0001A4 85*05            [ 3]  436 	sta	*(___fsmul_sloc1_1_0 + 1)
      0001A6 A5*07            [ 3]  437 	lda	*(___fsmul_sloc1_1_0 + 3)
      0001A8 85*06            [ 3]  438 	sta	*(___fsmul_sloc1_1_0 + 2)
      0001AA 86*07            [ 3]  439 	stx	*(___fsmul_sloc1_1_0 + 3)
                                    440 ;	Raw cost for generated ic 71 : (14, 21.000000) count=1.000000
                                    441 ;	genCast
                                    442 ;	genCopy
      0001AC A6*05            [ 3]  443 	ldx	*(___fsmul_sloc1_1_0 + 1)
      0001AE A5*04            [ 3]  444 	lda	*___fsmul_sloc1_1_0
                                    445 ;	Raw cost for generated ic 72 : (4, 6.000000) count=1.000000
                                    446 ;	genCast
                                    447 ;	genCopy
      0001B0 9Cr03r00         [ 4]  448 	stz	(__mullong_PARM_1 + 3)
      0001B3 9Cr02r00         [ 4]  449 	stz	(__mullong_PARM_1 + 2)
      0001B6 8Er01r00         [ 4]  450 	stx	(__mullong_PARM_1 + 1)
      0001B9 8Dr00r00         [ 4]  451 	sta	__mullong_PARM_1
                                    452 ;	Raw cost for generated ic 73 : (12, 16.000000) count=1.000000
                                    453 ;	skipping iCode since result will be rematerialized
                                    454 ;	Raw cost for generated ic 74 : (0, 0.000000) count=1.000000
                                    455 ;	genPointerGet
                                    456 ;	genDataPointerGet
      0001BC ADr0Fr00         [ 4]  457 	lda	(___fsmul_fl2_10000_21 + 3)
      0001BF 85*07            [ 3]  458 	sta	*(___fsmul_sloc1_1_0 + 3)
      0001C1 ADr0Er00         [ 4]  459 	lda	(___fsmul_fl2_10000_21 + 2)
      0001C4 85*06            [ 3]  460 	sta	*(___fsmul_sloc1_1_0 + 2)
      0001C6 ADr0Dr00         [ 4]  461 	lda	(___fsmul_fl2_10000_21 + 1)
      0001C9 85*05            [ 3]  462 	sta	*(___fsmul_sloc1_1_0 + 1)
      0001CB ADr0Cr00         [ 4]  463 	lda	___fsmul_fl2_10000_21
      0001CE 85*04            [ 3]  464 	sta	*___fsmul_sloc1_1_0
                                    465 ;	Raw cost for generated ic 76 : (20, 28.000000) count=1.000000
                                    466 ;	genRightShift
                                    467 ;	genRightShiftLiteral
                                    468 ;	  genrsh32 - shift=8
      0001D0 A5*05            [ 3]  469 	lda	*(___fsmul_sloc1_1_0 + 1)
      0001D2 85*04            [ 3]  470 	sta	*___fsmul_sloc1_1_0
      0001D4 A5*06            [ 3]  471 	lda	*(___fsmul_sloc1_1_0 + 2)
      0001D6 85*05            [ 3]  472 	sta	*(___fsmul_sloc1_1_0 + 1)
      0001D8 A5*07            [ 3]  473 	lda	*(___fsmul_sloc1_1_0 + 3)
      0001DA 85*06            [ 3]  474 	sta	*(___fsmul_sloc1_1_0 + 2)
      0001DC 64*07            [ 3]  475 	stz	*(___fsmul_sloc1_1_0 + 3)
                                    476 ;	Raw cost for generated ic 77 : (15, 22.000000) count=1.000000
                                    477 ;	genCast
                                    478 ;	genCopy
      0001DE A6*05            [ 3]  479 	ldx	*(___fsmul_sloc1_1_0 + 1)
      0001E0 A5*04            [ 3]  480 	lda	*___fsmul_sloc1_1_0
                                    481 ;	Raw cost for generated ic 78 : (4, 6.000000) count=1.000000
                                    482 ;	genCast
                                    483 ;	genCopy
      0001E2 9Cr03r00         [ 4]  484 	stz	(__mullong_PARM_2 + 3)
      0001E5 9Cr02r00         [ 4]  485 	stz	(__mullong_PARM_2 + 2)
      0001E8 8Er01r00         [ 4]  486 	stx	(__mullong_PARM_2 + 1)
      0001EB 8Dr00r00         [ 4]  487 	sta	__mullong_PARM_2
                                    488 ;	Raw cost for generated ic 79 : (12, 16.000000) count=1.000000
                                    489 ;	../_fsmul.c: 264: result += ((unsigned long)((unsigned short)(fl1.l & 0xff)) * (unsigned short)(fl2.l >> 8)) >> 8;
                                    490 ;	genCall
      0001EE 20r00r00         [ 6]  491 	jsr	__mullong
                                    492 ;	assignResultValue
      0001F1 85*04            [ 3]  493 	sta	*___fsmul_sloc1_1_0
      0001F3 86*05            [ 3]  494 	stx	*(___fsmul_sloc1_1_0 + 1)
      0001F5 A5*00            [ 3]  495 	lda	*___SDCC_m6502_ret2
      0001F7 85*06            [ 3]  496 	sta	*(___fsmul_sloc1_1_0 + 2)
      0001F9 A5*00            [ 3]  497 	lda	*___SDCC_m6502_ret3
      0001FB 85*07            [ 3]  498 	sta	*(___fsmul_sloc1_1_0 + 3)
                                    499 ;	Raw cost for generated ic 193 : (15, 24.000000) count=1.000000
                                    500 ;	skipping iCode since result will be rematerialized
                                    501 ;	Raw cost for generated ic 82 : (0, 0.000000) count=1.000000
                                    502 ;	genPointerGet
                                    503 ;	genDataPointerGet
      0001FD ADr0Br00         [ 4]  504 	lda	(___fsmul_fl1_10000_21 + 3)
      000200 85*03            [ 3]  505 	sta	*(___fsmul_sloc0_1_0 + 3)
      000202 ADr0Ar00         [ 4]  506 	lda	(___fsmul_fl1_10000_21 + 2)
      000205 85*02            [ 3]  507 	sta	*(___fsmul_sloc0_1_0 + 2)
      000207 ADr09r00         [ 4]  508 	lda	(___fsmul_fl1_10000_21 + 1)
      00020A 85*01            [ 3]  509 	sta	*(___fsmul_sloc0_1_0 + 1)
      00020C ADr08r00         [ 4]  510 	lda	___fsmul_fl1_10000_21
      00020F 85*00            [ 3]  511 	sta	*___fsmul_sloc0_1_0
                                    512 ;	Raw cost for generated ic 84 : (20, 28.000000) count=1.000000
                                    513 ;	genCast
                                    514 ;	genCopy
                                    515 ;	Raw cost for generated ic 185 : (2, 3.000000) count=1.000000
                                    516 ;	genAnd
      000211 A2 00            [ 2]  517 	ldx	#0x00
                                    518 ;	Raw cost for generated ic 85 : (2, 2.000000) count=1.000000
                                    519 ;	genCast
                                    520 ;	genCopy
      000213 8Er03r00         [ 4]  521 	stx	(__mullong_PARM_1 + 3)
      000216 8Er02r00         [ 4]  522 	stx	(__mullong_PARM_1 + 2)
      000219 8Er01r00         [ 4]  523 	stx	(__mullong_PARM_1 + 1)
      00021C 8Dr00r00         [ 4]  524 	sta	__mullong_PARM_1
                                    525 ;	Raw cost for generated ic 87 : (12, 16.000000) count=1.000000
                                    526 ;	skipping iCode since result will be rematerialized
                                    527 ;	Raw cost for generated ic 88 : (0, 0.000000) count=1.000000
                                    528 ;	genPointerGet
                                    529 ;	genDataPointerGet
      00021F ADr0Fr00         [ 4]  530 	lda	(___fsmul_fl2_10000_21 + 3)
      000222 85*03            [ 3]  531 	sta	*(___fsmul_sloc0_1_0 + 3)
      000224 ADr0Er00         [ 4]  532 	lda	(___fsmul_fl2_10000_21 + 2)
      000227 85*02            [ 3]  533 	sta	*(___fsmul_sloc0_1_0 + 2)
      000229 ADr0Dr00         [ 4]  534 	lda	(___fsmul_fl2_10000_21 + 1)
      00022C 85*01            [ 3]  535 	sta	*(___fsmul_sloc0_1_0 + 1)
      00022E ADr0Cr00         [ 4]  536 	lda	___fsmul_fl2_10000_21
      000231 85*00            [ 3]  537 	sta	*___fsmul_sloc0_1_0
                                    538 ;	Raw cost for generated ic 90 : (20, 28.000000) count=1.000000
                                    539 ;	genRightShift
                                    540 ;	genRightShiftLiteral
                                    541 ;	  genrsh32 - shift=8
      000233 A5*01            [ 3]  542 	lda	*(___fsmul_sloc0_1_0 + 1)
      000235 85*00            [ 3]  543 	sta	*___fsmul_sloc0_1_0
      000237 A5*02            [ 3]  544 	lda	*(___fsmul_sloc0_1_0 + 2)
      000239 85*01            [ 3]  545 	sta	*(___fsmul_sloc0_1_0 + 1)
      00023B A5*03            [ 3]  546 	lda	*(___fsmul_sloc0_1_0 + 3)
      00023D 85*02            [ 3]  547 	sta	*(___fsmul_sloc0_1_0 + 2)
      00023F 86*03            [ 3]  548 	stx	*(___fsmul_sloc0_1_0 + 3)
                                    549 ;	Raw cost for generated ic 91 : (14, 21.000000) count=1.000000
                                    550 ;	genCast
                                    551 ;	genCopy
      000241 A6*01            [ 3]  552 	ldx	*(___fsmul_sloc0_1_0 + 1)
      000243 A5*00            [ 3]  553 	lda	*___fsmul_sloc0_1_0
                                    554 ;	Raw cost for generated ic 92 : (4, 6.000000) count=1.000000
                                    555 ;	genCast
                                    556 ;	genCopy
      000245 9Cr03r00         [ 4]  557 	stz	(__mullong_PARM_2 + 3)
      000248 9Cr02r00         [ 4]  558 	stz	(__mullong_PARM_2 + 2)
      00024B 8Er01r00         [ 4]  559 	stx	(__mullong_PARM_2 + 1)
      00024E 8Dr00r00         [ 4]  560 	sta	__mullong_PARM_2
                                    561 ;	Raw cost for generated ic 93 : (12, 16.000000) count=1.000000
                                    562 ;	genCall
      000251 20r00r00         [ 6]  563 	jsr	__mullong
                                    564 ;	assignResultValue
      000254 85*00            [ 3]  565 	sta	*___fsmul_sloc0_1_0
      000256 86*01            [ 3]  566 	stx	*(___fsmul_sloc0_1_0 + 1)
      000258 A5*00            [ 3]  567 	lda	*___SDCC_m6502_ret2
      00025A 85*02            [ 3]  568 	sta	*(___fsmul_sloc0_1_0 + 2)
      00025C A5*00            [ 3]  569 	lda	*___SDCC_m6502_ret3
      00025E 85*03            [ 3]  570 	sta	*(___fsmul_sloc0_1_0 + 3)
                                    571 ;	Raw cost for generated ic 196 : (15, 24.000000) count=1.000000
                                    572 ;	genRightShift
                                    573 ;	genRightShiftLiteral
                                    574 ;	  genrsh32 - shift=8
      000260 A5*01            [ 3]  575 	lda	*(___fsmul_sloc0_1_0 + 1)
      000262 85*00            [ 3]  576 	sta	*___fsmul_sloc0_1_0
      000264 A5*02            [ 3]  577 	lda	*(___fsmul_sloc0_1_0 + 2)
      000266 85*01            [ 3]  578 	sta	*(___fsmul_sloc0_1_0 + 1)
      000268 A5*03            [ 3]  579 	lda	*(___fsmul_sloc0_1_0 + 3)
      00026A 85*02            [ 3]  580 	sta	*(___fsmul_sloc0_1_0 + 2)
      00026C 64*03            [ 3]  581 	stz	*(___fsmul_sloc0_1_0 + 3)
                                    582 ;	Raw cost for generated ic 95 : (15, 22.000000) count=1.000000
                                    583 ;	genPlus
      00026E A5*04            [ 3]  584 	lda	*___fsmul_sloc1_1_0
      000270 18               [ 2]  585 	clc
      000271 65*00            [ 4]  586 	adc	*___fsmul_sloc0_1_0
      000273 85*04            [ 3]  587 	sta	*___fsmul_sloc1_1_0
      000275 A5*05            [ 3]  588 	lda	*(___fsmul_sloc1_1_0 + 1)
      000277 65*01            [ 4]  589 	adc	*(___fsmul_sloc0_1_0 + 1)
      000279 85*05            [ 3]  590 	sta	*(___fsmul_sloc1_1_0 + 1)
      00027B A5*06            [ 3]  591 	lda	*(___fsmul_sloc1_1_0 + 2)
      00027D 65*02            [ 4]  592 	adc	*(___fsmul_sloc0_1_0 + 2)
      00027F 85*06            [ 3]  593 	sta	*(___fsmul_sloc1_1_0 + 2)
      000281 A5*07            [ 3]  594 	lda	*(___fsmul_sloc1_1_0 + 3)
      000283 65*03            [ 4]  595 	adc	*(___fsmul_sloc0_1_0 + 3)
      000285 85*07            [ 3]  596 	sta	*(___fsmul_sloc1_1_0 + 3)
                                    597 ;	Raw cost for generated ic 96 : (25, 38.000000) count=1.000000
                                    598 ;	../_fsmul.c: 265: result += ((unsigned long)((unsigned short)(fl2.l & 0xff)) * (unsigned short)(fl1.l >> 8)) >> 8;
                                    599 ;	skipping iCode since result will be rematerialized
                                    600 ;	Raw cost for generated ic 98 : (0, 0.000000) count=1.000000
                                    601 ;	genPointerGet
                                    602 ;	genDataPointerGet
      000287 ADr0Fr00         [ 4]  603 	lda	(___fsmul_fl2_10000_21 + 3)
      00028A 85*03            [ 3]  604 	sta	*(___fsmul_sloc0_1_0 + 3)
      00028C ADr0Er00         [ 4]  605 	lda	(___fsmul_fl2_10000_21 + 2)
      00028F 85*02            [ 3]  606 	sta	*(___fsmul_sloc0_1_0 + 2)
      000291 ADr0Dr00         [ 4]  607 	lda	(___fsmul_fl2_10000_21 + 1)
      000294 85*01            [ 3]  608 	sta	*(___fsmul_sloc0_1_0 + 1)
      000296 ADr0Cr00         [ 4]  609 	lda	___fsmul_fl2_10000_21
      000299 85*00            [ 3]  610 	sta	*___fsmul_sloc0_1_0
                                    611 ;	Raw cost for generated ic 100 : (20, 28.000000) count=1.000000
                                    612 ;	genCast
                                    613 ;	genCopy
                                    614 ;	Raw cost for generated ic 186 : (2, 3.000000) count=1.000000
                                    615 ;	genAnd
      00029B A2 00            [ 2]  616 	ldx	#0x00
                                    617 ;	Raw cost for generated ic 101 : (2, 2.000000) count=1.000000
                                    618 ;	genCast
                                    619 ;	genCopy
      00029D 8Er03r00         [ 4]  620 	stx	(__mullong_PARM_1 + 3)
      0002A0 8Er02r00         [ 4]  621 	stx	(__mullong_PARM_1 + 2)
      0002A3 8Er01r00         [ 4]  622 	stx	(__mullong_PARM_1 + 1)
      0002A6 8Dr00r00         [ 4]  623 	sta	__mullong_PARM_1
                                    624 ;	Raw cost for generated ic 103 : (12, 16.000000) count=1.000000
                                    625 ;	skipping iCode since result will be rematerialized
                                    626 ;	Raw cost for generated ic 104 : (0, 0.000000) count=1.000000
                                    627 ;	genPointerGet
                                    628 ;	genDataPointerGet
      0002A9 ADr0Br00         [ 4]  629 	lda	(___fsmul_fl1_10000_21 + 3)
      0002AC 85*03            [ 3]  630 	sta	*(___fsmul_sloc0_1_0 + 3)
      0002AE ADr0Ar00         [ 4]  631 	lda	(___fsmul_fl1_10000_21 + 2)
      0002B1 85*02            [ 3]  632 	sta	*(___fsmul_sloc0_1_0 + 2)
      0002B3 ADr09r00         [ 4]  633 	lda	(___fsmul_fl1_10000_21 + 1)
      0002B6 85*01            [ 3]  634 	sta	*(___fsmul_sloc0_1_0 + 1)
      0002B8 ADr08r00         [ 4]  635 	lda	___fsmul_fl1_10000_21
      0002BB 85*00            [ 3]  636 	sta	*___fsmul_sloc0_1_0
                                    637 ;	Raw cost for generated ic 106 : (20, 28.000000) count=1.000000
                                    638 ;	genRightShift
                                    639 ;	genRightShiftLiteral
                                    640 ;	  genrsh32 - shift=8
      0002BD A5*01            [ 3]  641 	lda	*(___fsmul_sloc0_1_0 + 1)
      0002BF 85*00            [ 3]  642 	sta	*___fsmul_sloc0_1_0
      0002C1 A5*02            [ 3]  643 	lda	*(___fsmul_sloc0_1_0 + 2)
      0002C3 85*01            [ 3]  644 	sta	*(___fsmul_sloc0_1_0 + 1)
      0002C5 A5*03            [ 3]  645 	lda	*(___fsmul_sloc0_1_0 + 3)
      0002C7 85*02            [ 3]  646 	sta	*(___fsmul_sloc0_1_0 + 2)
      0002C9 86*03            [ 3]  647 	stx	*(___fsmul_sloc0_1_0 + 3)
                                    648 ;	Raw cost for generated ic 107 : (14, 21.000000) count=1.000000
                                    649 ;	genCast
                                    650 ;	genCopy
      0002CB A6*01            [ 3]  651 	ldx	*(___fsmul_sloc0_1_0 + 1)
      0002CD A5*00            [ 3]  652 	lda	*___fsmul_sloc0_1_0
                                    653 ;	Raw cost for generated ic 108 : (4, 6.000000) count=1.000000
                                    654 ;	genCast
                                    655 ;	genCopy
      0002CF 9Cr03r00         [ 4]  656 	stz	(__mullong_PARM_2 + 3)
      0002D2 9Cr02r00         [ 4]  657 	stz	(__mullong_PARM_2 + 2)
      0002D5 8Er01r00         [ 4]  658 	stx	(__mullong_PARM_2 + 1)
      0002D8 8Dr00r00         [ 4]  659 	sta	__mullong_PARM_2
                                    660 ;	Raw cost for generated ic 109 : (12, 16.000000) count=1.000000
                                    661 ;	genCall
      0002DB 20r00r00         [ 6]  662 	jsr	__mullong
                                    663 ;	assignResultValue
      0002DE 85*00            [ 3]  664 	sta	*___fsmul_sloc0_1_0
      0002E0 86*01            [ 3]  665 	stx	*(___fsmul_sloc0_1_0 + 1)
      0002E2 A5*00            [ 3]  666 	lda	*___SDCC_m6502_ret2
      0002E4 85*02            [ 3]  667 	sta	*(___fsmul_sloc0_1_0 + 2)
      0002E6 A5*00            [ 3]  668 	lda	*___SDCC_m6502_ret3
      0002E8 85*03            [ 3]  669 	sta	*(___fsmul_sloc0_1_0 + 3)
                                    670 ;	Raw cost for generated ic 199 : (15, 24.000000) count=1.000000
                                    671 ;	genRightShift
                                    672 ;	genRightShiftLiteral
                                    673 ;	  genrsh32 - shift=8
      0002EA A5*01            [ 3]  674 	lda	*(___fsmul_sloc0_1_0 + 1)
      0002EC 85*00            [ 3]  675 	sta	*___fsmul_sloc0_1_0
      0002EE A5*02            [ 3]  676 	lda	*(___fsmul_sloc0_1_0 + 2)
      0002F0 85*01            [ 3]  677 	sta	*(___fsmul_sloc0_1_0 + 1)
      0002F2 A5*03            [ 3]  678 	lda	*(___fsmul_sloc0_1_0 + 3)
      0002F4 85*02            [ 3]  679 	sta	*(___fsmul_sloc0_1_0 + 2)
      0002F6 64*03            [ 3]  680 	stz	*(___fsmul_sloc0_1_0 + 3)
                                    681 ;	Raw cost for generated ic 111 : (15, 22.000000) count=1.000000
                                    682 ;	genPlus
      0002F8 A5*04            [ 3]  683 	lda	*___fsmul_sloc1_1_0
      0002FA 18               [ 2]  684 	clc
      0002FB 65*00            [ 4]  685 	adc	*___fsmul_sloc0_1_0
      0002FD 85*04            [ 3]  686 	sta	*___fsmul_sloc1_1_0
      0002FF A5*05            [ 3]  687 	lda	*(___fsmul_sloc1_1_0 + 1)
      000301 65*01            [ 4]  688 	adc	*(___fsmul_sloc0_1_0 + 1)
      000303 85*05            [ 3]  689 	sta	*(___fsmul_sloc1_1_0 + 1)
      000305 A5*06            [ 3]  690 	lda	*(___fsmul_sloc1_1_0 + 2)
      000307 65*02            [ 4]  691 	adc	*(___fsmul_sloc0_1_0 + 2)
      000309 85*06            [ 3]  692 	sta	*(___fsmul_sloc1_1_0 + 2)
      00030B A5*07            [ 3]  693 	lda	*(___fsmul_sloc1_1_0 + 3)
      00030D 65*03            [ 4]  694 	adc	*(___fsmul_sloc0_1_0 + 3)
      00030F 85*07            [ 3]  695 	sta	*(___fsmul_sloc1_1_0 + 3)
                                    696 ;	Raw cost for generated ic 112 : (25, 38.000000) count=1.000000
                                    697 ;	../_fsmul.c: 268: result += 0x40;
                                    698 ;	genPlus
                                    699 ;	  genPlusInc
      000311 A5*04            [ 3]  700 	lda	*___fsmul_sloc1_1_0
      000313 18               [ 2]  701 	clc
      000314 69 40            [ 3]  702 	adc	#0x40
      000316 85*00            [ 3]  703 	sta	*___fsmul_sloc0_1_0
      000318 A5*05            [ 3]  704 	lda	*(___fsmul_sloc1_1_0 + 1)
      00031A 69 00            [ 3]  705 	adc	#0x00
      00031C 85*01            [ 3]  706 	sta	*(___fsmul_sloc0_1_0 + 1)
      00031E A5*06            [ 3]  707 	lda	*(___fsmul_sloc1_1_0 + 2)
      000320 69 00            [ 3]  708 	adc	#0x00
      000322 85*02            [ 3]  709 	sta	*(___fsmul_sloc0_1_0 + 2)
      000324 A5*07            [ 3]  710 	lda	*(___fsmul_sloc1_1_0 + 3)
      000326 69 00            [ 3]  711 	adc	#0x00
      000328 85*03            [ 3]  712 	sta	*(___fsmul_sloc0_1_0 + 3)
                                    713 ;	Raw cost for generated ic 114 : (25, 34.000000) count=1.000000
                                    714 ;	../_fsmul.c: 270: if (result & SIGNBIT)
                                    715 ;	genAnd
      00032A 24*03            [ 3]  716 	bit	*(___fsmul_sloc0_1_0 + 3)
                                    717 ;	genIfxJump : n
      00032C 10 28            [ 4]  718 	bpl	00105$
                                    719 ;	Raw cost for generated ic 116 : (7, 8.600000) count=1.000000
                                    720 ;	skipping generated iCode
                                    721 ;	Raw cost for generated ic 117 : (0, 0.000000) count=1.000000
                                    722 ;	../_fsmul.c: 273: result += 0x40;
                                    723 ;	genPlus
                                    724 ;	  genPlusInc
      00032E A5*04            [ 3]  725 	lda	*___fsmul_sloc1_1_0
      000330 18               [ 2]  726 	clc
      000331 69 80            [ 3]  727 	adc	#0x80
      000333 85*04            [ 3]  728 	sta	*___fsmul_sloc1_1_0
      000335 90 0A            [ 4]  729 	bcc	00166$
      000337 E6*05            [ 5]  730 	inc	*(___fsmul_sloc1_1_0 + 1)
      000339 D0 06            [ 4]  731 	bne	00166$
      00033B E6*06            [ 5]  732 	inc	*(___fsmul_sloc1_1_0 + 2)
      00033D D0 02            [ 4]  733 	bne	00166$
      00033F E6*07            [ 5]  734 	inc	*(___fsmul_sloc1_1_0 + 3)
      000341                        735 00166$:
                                    736 ;	Raw cost for generated ic 120 : (19, 32.800003) count=0.750000
                                    737 ;	../_fsmul.c: 274: result >>= 8;
                                    738 ;	genRightShift
                                    739 ;	genRightShiftLiteral
                                    740 ;	  genrsh32 - shift=8
      000341 A5*05            [ 3]  741 	lda	*(___fsmul_sloc1_1_0 + 1)
      000343 8Dr10r00         [ 4]  742 	sta	___fsmul_result_10000_21
      000346 A5*06            [ 3]  743 	lda	*(___fsmul_sloc1_1_0 + 2)
      000348 8Dr11r00         [ 4]  744 	sta	(___fsmul_result_10000_21 + 1)
      00034B A5*07            [ 3]  745 	lda	*(___fsmul_sloc1_1_0 + 3)
      00034D 8Dr12r00         [ 4]  746 	sta	(___fsmul_result_10000_21 + 2)
      000350 9Cr13r00         [ 4]  747 	stz	(___fsmul_result_10000_21 + 3)
                                    748 ;	Raw cost for generated ic 122 : (18, 25.000000) count=0.750000
                                    749 ;	genGoto
      000353 4Cr7Cr03         [ 3]  750 	jmp	00106$
                                    751 ;	Raw cost for generated ic 124 : (3, 3.000000) count=0.750000
                                    752 ;	genLabel
      000356                        753 00105$:
                                    754 ;	Raw cost for generated ic 125 : (0, 0.000000) count=0.250000
                                    755 ;	../_fsmul.c: 278: result >>= 7;
                                    756 ;	genRightShift
                                    757 ;	genRightShiftLiteral
                                    758 ;	  genrsh32 - shift=7
      000356 A5*00            [ 3]  759 	lda	*___fsmul_sloc0_1_0
      000358 2A               [ 2]  760 	rol	a
      000359 A5*01            [ 3]  761 	lda	*(___fsmul_sloc0_1_0 + 1)
      00035B 2A               [ 2]  762 	rol	a
      00035C 8Dr10r00         [ 4]  763 	sta	___fsmul_result_10000_21
      00035F A5*02            [ 3]  764 	lda	*(___fsmul_sloc0_1_0 + 2)
      000361 2A               [ 2]  765 	rol	a
      000362 8Dr11r00         [ 4]  766 	sta	(___fsmul_result_10000_21 + 1)
      000365 A5*03            [ 3]  767 	lda	*(___fsmul_sloc0_1_0 + 3)
      000367 2A               [ 2]  768 	rol	a
      000368 8Dr12r00         [ 4]  769 	sta	(___fsmul_result_10000_21 + 2)
      00036B A9 00            [ 2]  770 	lda	#0x00
      00036D 2A               [ 2]  771 	rol	a
      00036E 8Dr13r00         [ 4]  772 	sta	(___fsmul_result_10000_21 + 3)
                                    773 ;	Raw cost for generated ic 126 : (27, 40.000000) count=0.250000
                                    774 ;	../_fsmul.c: 279: exp--;
                                    775 ;	genMinus
                                    776 ;	  genMinusDec - size=2  icount=1
      000371 ADr14r00         [ 4]  777 	lda	___fsmul_exp_10000_21
      000374 D0 03            [ 4]  778 	bne	00167$
      000376 CEr15r00         [ 6]  779 	dec	(___fsmul_exp_10000_21 + 1)
      000379                        780 00167$:
      000379 CEr14r00         [ 6]  781 	dec	___fsmul_exp_10000_21
                                    782 ;	Raw cost for generated ic 129 : (11, 18.600000) count=0.250000
                                    783 ;	genLabel
      00037C                        784 00106$:
                                    785 ;	Raw cost for generated ic 131 : (0, 0.000000) count=1.000000
                                    786 ;	../_fsmul.c: 282: result &= ~HIDDEN;
                                    787 ;	genAnd
      00037C ADr12r00         [ 4]  788 	lda	(___fsmul_result_10000_21 + 2)
      00037F 29 7F            [ 2]  789 	and	#0x7f
      000381 8Dr12r00         [ 4]  790 	sta	(___fsmul_result_10000_21 + 2)
                                    791 ;	Raw cost for generated ic 132 : (8, 10.000000) count=1.000000
                                    792 ;	../_fsmul.c: 285: if (exp >= 0x100)
                                    793 ;	genCmp
      000384 ADr15r00         [ 4]  794 	lda	(___fsmul_exp_10000_21 + 1)
      000387 38               [ 2]  795 	sec
      000388 E9 01            [ 3]  796 	sbc	#0x01
      00038A 70 04            [ 4]  797 	bvs	00169$
      00038C 10 04            [ 4]  798 	bpl	00168$
      00038E 30 3D            [ 4]  799 	bmi	00111$
      000390                        800 00169$:
      000390 10 3B            [ 4]  801 	bpl	00111$
      000392                        802 00168$:
                                    803 ;	Raw cost for generated ic 134 : (17, 21.400002) count=1.000000
                                    804 ;	skipping generated iCode
                                    805 ;	Raw cost for generated ic 135 : (0, 0.000000) count=1.000000
                                    806 ;	../_fsmul.c: 286: fl1.l = (sign ? SIGNBIT : 0) | __INFINITY;
                                    807 ;	skipping iCode since result will be rematerialized
                                    808 ;	Raw cost for generated ic 138 : (0, 0.000000) count=0.750000
                                    809 ;	genIfx
      000392 ADr16r00         [ 4]  810 	lda	___fsmul_sign_10000_21
                                    811 ;	genIfxJump : z
      000395 F0 0D            [ 4]  812 	beq	00115$
                                    813 ;	Raw cost for generated ic 140 : (8, 9.600000) count=0.750000
                                    814 ;	genAssign
                                    815 ;	genAssignLit
      000397 64*04            [ 3]  816 	stz	*___fsmul_sloc1_1_0
      000399 64*05            [ 3]  817 	stz	*(___fsmul_sloc1_1_0 + 1)
      00039B 64*06            [ 3]  818 	stz	*(___fsmul_sloc1_1_0 + 2)
      00039D A2 80            [ 2]  819 	ldx	#0x80
      00039F 86*07            [ 3]  820 	stx	*(___fsmul_sloc1_1_0 + 3)
                                    821 ;	Raw cost for generated ic 141 : (13, 17.000000) count=0.562500
                                    822 ;	genGoto
      0003A1 4CrACr03         [ 3]  823 	jmp	00116$
                                    824 ;	Raw cost for generated ic 142 : (3, 3.000000) count=0.562500
                                    825 ;	genLabel
      0003A4                        826 00115$:
                                    827 ;	Raw cost for generated ic 143 : (0, 0.000000) count=0.187500
                                    828 ;	genAssign
                                    829 ;	genAssignLit
      0003A4 64*04            [ 3]  830 	stz	*___fsmul_sloc1_1_0
      0003A6 64*05            [ 3]  831 	stz	*(___fsmul_sloc1_1_0 + 1)
      0003A8 64*06            [ 3]  832 	stz	*(___fsmul_sloc1_1_0 + 2)
      0003AA 64*07            [ 3]  833 	stz	*(___fsmul_sloc1_1_0 + 3)
                                    834 ;	Raw cost for generated ic 144 : (12, 16.000000) count=0.187500
                                    835 ;	genLabel
      0003AC                        836 00116$:
                                    837 ;	Raw cost for generated ic 145 : (0, 0.000000) count=0.750000
                                    838 ;	genOr
      0003AC A5*06            [ 3]  839 	lda	*(___fsmul_sloc1_1_0 + 2)
      0003AE 09 80            [ 2]  840 	ora	#0x80
      0003B0 85*06            [ 3]  841 	sta	*(___fsmul_sloc1_1_0 + 2)
      0003B2 A5*07            [ 3]  842 	lda	*(___fsmul_sloc1_1_0 + 3)
      0003B4 09 7F            [ 2]  843 	ora	#0x7f
      0003B6 85*07            [ 3]  844 	sta	*(___fsmul_sloc1_1_0 + 3)
                                    845 ;	Raw cost for generated ic 146 : (12, 16.000000) count=0.750000
                                    846 ;	genPointerSet
                                    847 ;	genDataPointerSet
      0003B8 8Dr0Br00         [ 4]  848 	sta	(___fsmul_fl1_10000_21 + 3)
      0003BB A5*06            [ 3]  849 	lda	*(___fsmul_sloc1_1_0 + 2)
      0003BD 8Dr0Ar00         [ 4]  850 	sta	(___fsmul_fl1_10000_21 + 2)
      0003C0 A5*05            [ 3]  851 	lda	*(___fsmul_sloc1_1_0 + 1)
      0003C2 8Dr09r00         [ 4]  852 	sta	(___fsmul_fl1_10000_21 + 1)
      0003C5 A5*04            [ 3]  853 	lda	*___fsmul_sloc1_1_0
      0003C7 8Dr08r00         [ 4]  854 	sta	___fsmul_fl1_10000_21
                                    855 ;	Raw cost for generated ic 147 : (18, 25.000000) count=0.750000
                                    856 ;	genGoto
      0003CA 4Cr67r04         [ 3]  857 	jmp	00112$
                                    858 ;	Raw cost for generated ic 148 : (3, 3.000000) count=0.750000
                                    859 ;	genLabel
      0003CD                        860 00111$:
                                    861 ;	Raw cost for generated ic 149 : (0, 0.000000) count=0.250000
                                    862 ;	../_fsmul.c: 287: else if (exp < 0)
                                    863 ;	genCmp
      0003CD 2Cr15r00         [ 4]  864 	bit	(___fsmul_exp_10000_21 + 1)
      0003D0 10 0F            [ 4]  865 	bpl	00108$
                                    866 ;	Raw cost for generated ic 150 : (8, 9.600000) count=0.250000
                                    867 ;	skipping generated iCode
                                    868 ;	Raw cost for generated ic 151 : (0, 0.000000) count=0.250000
                                    869 ;	../_fsmul.c: 288: fl1.l = 0;
                                    870 ;	skipping iCode since result will be rematerialized
                                    871 ;	Raw cost for generated ic 154 : (0, 0.000000) count=0.187500
                                    872 ;	genPointerSet
                                    873 ;	genDataPointerSet
      0003D2 9Cr0Br00         [ 4]  874 	stz	(___fsmul_fl1_10000_21 + 3)
      0003D5 9Cr0Ar00         [ 4]  875 	stz	(___fsmul_fl1_10000_21 + 2)
      0003D8 9Cr09r00         [ 4]  876 	stz	(___fsmul_fl1_10000_21 + 1)
      0003DB 9Cr08r00         [ 4]  877 	stz	___fsmul_fl1_10000_21
                                    878 ;	Raw cost for generated ic 156 : (12, 16.000000) count=0.187500
                                    879 ;	genGoto
      0003DE 4Cr67r04         [ 3]  880 	jmp	00112$
                                    881 ;	Raw cost for generated ic 157 : (3, 3.000000) count=0.187500
                                    882 ;	genLabel
      0003E1                        883 00108$:
                                    884 ;	Raw cost for generated ic 158 : (0, 0.000000) count=0.062500
                                    885 ;	../_fsmul.c: 290: fl1.l = PACK (sign ? SIGNBIT : 0 , exp, result);
                                    886 ;	skipping iCode since result will be rematerialized
                                    887 ;	Raw cost for generated ic 159 : (0, 0.000000) count=0.062500
                                    888 ;	genIfx
      0003E1 ADr16r00         [ 4]  889 	lda	___fsmul_sign_10000_21
                                    890 ;	genIfxJump : z
      0003E4 F0 0D            [ 4]  891 	beq	00117$
                                    892 ;	Raw cost for generated ic 161 : (8, 9.600000) count=0.062500
                                    893 ;	genAssign
                                    894 ;	genAssignLit
      0003E6 64*04            [ 3]  895 	stz	*___fsmul_sloc1_1_0
      0003E8 64*05            [ 3]  896 	stz	*(___fsmul_sloc1_1_0 + 1)
      0003EA 64*06            [ 3]  897 	stz	*(___fsmul_sloc1_1_0 + 2)
      0003EC A2 80            [ 2]  898 	ldx	#0x80
      0003EE 86*07            [ 3]  899 	stx	*(___fsmul_sloc1_1_0 + 3)
                                    900 ;	Raw cost for generated ic 162 : (13, 17.000000) count=0.046875
                                    901 ;	genGoto
      0003F0 4CrFBr03         [ 3]  902 	jmp	00118$
                                    903 ;	Raw cost for generated ic 163 : (3, 3.000000) count=0.046875
                                    904 ;	genLabel
      0003F3                        905 00117$:
                                    906 ;	Raw cost for generated ic 164 : (0, 0.000000) count=0.015625
                                    907 ;	genAssign
                                    908 ;	genAssignLit
      0003F3 64*04            [ 3]  909 	stz	*___fsmul_sloc1_1_0
      0003F5 64*05            [ 3]  910 	stz	*(___fsmul_sloc1_1_0 + 1)
      0003F7 64*06            [ 3]  911 	stz	*(___fsmul_sloc1_1_0 + 2)
      0003F9 64*07            [ 3]  912 	stz	*(___fsmul_sloc1_1_0 + 3)
                                    913 ;	Raw cost for generated ic 165 : (12, 16.000000) count=0.015625
                                    914 ;	genLabel
      0003FB                        915 00118$:
                                    916 ;	Raw cost for generated ic 166 : (0, 0.000000) count=0.062500
                                    917 ;	genCast
      0003FB ADr14r00         [ 4]  918 	lda	___fsmul_exp_10000_21
      0003FE 85*00            [ 3]  919 	sta	*___fsmul_sloc0_1_0
      000400 ADr15r00         [ 4]  920 	lda	(___fsmul_exp_10000_21 + 1)
      000403 85*01            [ 3]  921 	sta	*(___fsmul_sloc0_1_0 + 1)
      000405 0A               [ 2]  922 	asl	a
      000406 A9 00            [ 2]  923 	lda	#0x00
      000408 69 FF            [ 3]  924 	adc	#0xff
      00040A 49 FF            [ 2]  925 	eor	#0xff
      00040C 85*02            [ 3]  926 	sta	*(___fsmul_sloc0_1_0 + 2)
      00040E 85*03            [ 3]  927 	sta	*(___fsmul_sloc0_1_0 + 3)
                                    928 ;	Raw cost for generated ic 167 : (21, 28.000000) count=0.062500
                                    929 ;	genLeftShift
                                    930 ;	genLeftShiftLiteral
                                    931 ;	  genlsh32 - shift=23
      000410 A5*01            [ 3]  932 	lda	*(___fsmul_sloc0_1_0 + 1)
      000412 4A               [ 2]  933 	lsr	a
      000413 A5*00            [ 3]  934 	lda	*___fsmul_sloc0_1_0
      000415 6A               [ 2]  935 	ror	a
      000416 85*03            [ 3]  936 	sta	*(___fsmul_sloc0_1_0 + 3)
      000418 A9 00            [ 2]  937 	lda	#0x00
      00041A 85*01            [ 3]  938 	sta	*(___fsmul_sloc0_1_0 + 1)
      00041C 85*00            [ 3]  939 	sta	*___fsmul_sloc0_1_0
      00041E 6A               [ 2]  940 	ror	a
      00041F 85*02            [ 3]  941 	sta	*(___fsmul_sloc0_1_0 + 2)
                                    942 ;	Raw cost for generated ic 168 : (17, 26.000000) count=0.062500
                                    943 ;	genOr
      000421 A5*04            [ 3]  944 	lda	*___fsmul_sloc1_1_0
      000423 05*00            [ 3]  945 	ora	*___fsmul_sloc0_1_0
      000425 85*04            [ 3]  946 	sta	*___fsmul_sloc1_1_0
      000427 A5*05            [ 3]  947 	lda	*(___fsmul_sloc1_1_0 + 1)
      000429 05*01            [ 3]  948 	ora	*(___fsmul_sloc0_1_0 + 1)
      00042B 85*05            [ 3]  949 	sta	*(___fsmul_sloc1_1_0 + 1)
      00042D A5*06            [ 3]  950 	lda	*(___fsmul_sloc1_1_0 + 2)
      00042F 05*02            [ 3]  951 	ora	*(___fsmul_sloc0_1_0 + 2)
      000431 85*06            [ 3]  952 	sta	*(___fsmul_sloc1_1_0 + 2)
      000433 A5*07            [ 3]  953 	lda	*(___fsmul_sloc1_1_0 + 3)
      000435 05*03            [ 3]  954 	ora	*(___fsmul_sloc0_1_0 + 3)
      000437 85*07            [ 3]  955 	sta	*(___fsmul_sloc1_1_0 + 3)
                                    956 ;	Raw cost for generated ic 169 : (24, 36.000000) count=0.062500
                                    957 ;	genOr
      000439 A5*04            [ 3]  958 	lda	*___fsmul_sloc1_1_0
      00043B 0Dr10r00         [ 4]  959 	ora	___fsmul_result_10000_21
      00043E 85*04            [ 3]  960 	sta	*___fsmul_sloc1_1_0
      000440 A5*05            [ 3]  961 	lda	*(___fsmul_sloc1_1_0 + 1)
      000442 0Dr11r00         [ 4]  962 	ora	(___fsmul_result_10000_21 + 1)
      000445 85*05            [ 3]  963 	sta	*(___fsmul_sloc1_1_0 + 1)
      000447 A5*06            [ 3]  964 	lda	*(___fsmul_sloc1_1_0 + 2)
      000449 0Dr12r00         [ 4]  965 	ora	(___fsmul_result_10000_21 + 2)
      00044C 85*06            [ 3]  966 	sta	*(___fsmul_sloc1_1_0 + 2)
      00044E A5*07            [ 3]  967 	lda	*(___fsmul_sloc1_1_0 + 3)
      000450 0Dr13r00         [ 4]  968 	ora	(___fsmul_result_10000_21 + 3)
      000453 85*07            [ 3]  969 	sta	*(___fsmul_sloc1_1_0 + 3)
                                    970 ;	Raw cost for generated ic 170 : (28, 40.000000) count=0.062500
                                    971 ;	genPointerSet
                                    972 ;	genDataPointerSet
      000455 8Dr0Br00         [ 4]  973 	sta	(___fsmul_fl1_10000_21 + 3)
      000458 A5*06            [ 3]  974 	lda	*(___fsmul_sloc1_1_0 + 2)
      00045A 8Dr0Ar00         [ 4]  975 	sta	(___fsmul_fl1_10000_21 + 2)
      00045D A5*05            [ 3]  976 	lda	*(___fsmul_sloc1_1_0 + 1)
      00045F 8Dr09r00         [ 4]  977 	sta	(___fsmul_fl1_10000_21 + 1)
      000462 A5*04            [ 3]  978 	lda	*___fsmul_sloc1_1_0
      000464 8Dr08r00         [ 4]  979 	sta	___fsmul_fl1_10000_21
                                    980 ;	Raw cost for generated ic 171 : (18, 25.000000) count=0.062500
                                    981 ;	genLabel
      000467                        982 00112$:
                                    983 ;	Raw cost for generated ic 173 : (0, 0.000000) count=1.000000
                                    984 ;	../_fsmul.c: 291: return (fl1.f);
                                    985 ;	skipping iCode since result will be rematerialized
                                    986 ;	Raw cost for generated ic 174 : (0, 0.000000) count=1.000000
                                    987 ;	genPointerGet
                                    988 ;	genDataPointerGet
      000467 ADr0Br00         [ 4]  989 	lda	(___fsmul_fl1_10000_21 + 3)
      00046A 85*07            [ 3]  990 	sta	*(___fsmul_sloc1_1_0 + 3)
      00046C ADr0Ar00         [ 4]  991 	lda	(___fsmul_fl1_10000_21 + 2)
      00046F 85*06            [ 3]  992 	sta	*(___fsmul_sloc1_1_0 + 2)
      000471 ADr09r00         [ 4]  993 	lda	(___fsmul_fl1_10000_21 + 1)
      000474 85*05            [ 3]  994 	sta	*(___fsmul_sloc1_1_0 + 1)
      000476 ADr08r00         [ 4]  995 	lda	___fsmul_fl1_10000_21
      000479 85*04            [ 3]  996 	sta	*___fsmul_sloc1_1_0
                                    997 ;	Raw cost for generated ic 176 : (20, 28.000000) count=1.000000
                                    998 ;	genRet
      00047B A5*07            [ 3]  999 	lda	*(___fsmul_sloc1_1_0 + 3)
      00047D 85*00            [ 3] 1000 	sta	*___SDCC_m6502_ret3
      00047F A5*06            [ 3] 1001 	lda	*(___fsmul_sloc1_1_0 + 2)
      000481 85*00            [ 3] 1002 	sta	*___SDCC_m6502_ret2
      000483 A6*05            [ 3] 1003 	ldx	*(___fsmul_sloc1_1_0 + 1)
      000485 A5*04            [ 3] 1004 	lda	*___fsmul_sloc1_1_0
                                   1005 ;	Raw cost for generated ic 177 : (12, 18.000000) count=1.000000
                                   1006 ;	genLabel
                                   1007 ;	Raw cost for generated ic 178 : (0, 0.000000) count=1.000000
                                   1008 ;	../_fsmul.c: 292: }
                                   1009 ;	genEndFunction
      000487 60               [ 6] 1010 	rts
                                   1011 ;	Raw cost for generated ic 179 : (1, 6.000000) count=1.000000
                                   1012 	.area CODE
                                   1013 	.area RODATA
                                   1014 	.area XINIT
                                   1015 	.area CABS    (ABS)
