                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler
                                      3 ; Version 4.5.10 #15691 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module vprintf
                                      6 	
      000000                          7 	.r65c02
                                      8 	.optsdcc -mmos65c02
                                      9 
                                     10 ;--------------------------------------------------------
                                     11 ;  Ordering of segments for the linker.
                                     12 ;--------------------------------------------------------
                                     13 	.area ZP      (PAG)
                                     14 	.area OSEG    (PAG, OVR)
                                     15 	.area _CODE
                                     16 	.area GSINIT
                                     17 	.area GSFINAL
                                     18 	.area CODE
                                     19 	.area RODATA
                                     20 	.area XINIT
                                     21 	.area _DATA
                                     22 	.area DATA
                                     23 	.area BSS
                                     24 ;--------------------------------------------------------
                                     25 ; Public variables in this module
                                     26 ;--------------------------------------------------------
                                     27 	.globl _putchar
                                     28 	.globl __print_format
                                     29 	.globl _vprintf_PARM_2
                                     30 	.globl _vprintf
                                     31 	.globl _printf
                                     32 ;--------------------------------------------------------
                                     33 ; ZP ram data
                                     34 ;--------------------------------------------------------
                                     35 	.area ZP      (PAG)
                                     36 ;--------------------------------------------------------
                                     37 ; overlayable items in ram
                                     38 ;--------------------------------------------------------
                                     39 ;--------------------------------------------------------
                                     40 ; uninitialized external ram data
                                     41 ;--------------------------------------------------------
                                     42 	.area BSS
      000000                         43 _vprintf_PARM_2:
      000000                         44 	.ds 2
                                     45 ;--------------------------------------------------------
                                     46 ; absolute external ram data
                                     47 ;--------------------------------------------------------
                                     48 	.area DABS    (ABS)
                                     49 ;--------------------------------------------------------
                                     50 ; initialized external ram data
                                     51 ;--------------------------------------------------------
                                     52 	.area DATA
                                     53 ;--------------------------------------------------------
                                     54 ; global & static initialisations
                                     55 ;--------------------------------------------------------
                                     56 	.area _CODE
                                     57 	.area GSINIT
                                     58 	.area GSFINAL
                                     59 	.area GSINIT
                                     60 ;--------------------------------------------------------
                                     61 ; Home
                                     62 ;--------------------------------------------------------
                                     63 	.area _CODE
                                     64 	.area _CODE
                                     65 ;--------------------------------------------------------
                                     66 ; code
                                     67 ;--------------------------------------------------------
                                     68 	.area CODE
                                     69 ;------------------------------------------------------------
                                     70 ;Allocation info for local variables in function 'put_char_to_stdout'
                                     71 ;------------------------------------------------------------
                                     72 ;p             Allocated to stack - sp +3 +2 
                                     73 ;c             Allocated to registers a 
                                     74 ;------------------------------------------------------------
                                     75 ;	../vprintf.c: 34: put_char_to_stdout (char c, void* p) _REENTRANT
                                     76 ;	genLabel
                                     77 ;	Raw cost for generated ic 0 : (0, 0.000000) count=1.000000
                                     78 ;	-----------------------------------------
                                     79 ;	 function put_char_to_stdout
                                     80 ;	-----------------------------------------
                                     81 ;	Register assignment is optimal.
                                     82 ;	Stack space usage: 0 bytes.
      000000                         83 _put_char_to_stdout:
                                     84 ;	Raw cost for generated ic 1 : (0, 0.000000) count=1.000000
                                     85 ;	genReceive
                                     86 ;	Raw cost for generated ic 2 : (0, 0.000000) count=1.000000
                                     87 ;	../vprintf.c: 37: putchar (c);
                                     88 ;	genCast
                                     89 ;	genCopy
      000000 A2 00            [ 2]   90 	ldx	#0x00
                                     91 ;	Raw cost for generated ic 3 : (2, 2.000000) count=1.000000
                                     92 ;	Raw cost for generated ic 4 : (0, 0.000000) count=1.000000
                                     93 ;	genCall
                                     94 ;	genSend
                                     95 ;	Raw cost for generated ic 5 : (3, 6.000000) count=1.000000
                                     96 ;	genLabel
                                     97 ;	Raw cost for generated ic 6 : (0, 0.000000) count=1.000000
                                     98 ;	../vprintf.c: 38: }
                                     99 ;	genEndFunction
      000002 4Cr00r00         [ 3]  100 	jmp	_putchar
                                    101 ;	Raw cost for generated ic 7 : (1, 6.000000) count=1.000000
                                    102 ;------------------------------------------------------------
                                    103 ;Allocation info for local variables in function 'vprintf'
                                    104 ;------------------------------------------------------------
                                    105 ;ap            Allocated with name '_vprintf_PARM_2'
                                    106 ;format        Allocated to registers 
                                    107 ;------------------------------------------------------------
                                    108 ;	../vprintf.c: 41: vprintf (const char *format, va_list ap)
                                    109 ;	genLabel
                                    110 ;	Raw cost for generated ic 0 : (0, 0.000000) count=1.000000
                                    111 ;	-----------------------------------------
                                    112 ;	 function vprintf
                                    113 ;	-----------------------------------------
                                    114 ;	Register assignment is optimal.
                                    115 ;	Stack space usage: 0 bytes.
      000005                        116 _vprintf:
                                    117 ;	Raw cost for generated ic 1 : (0, 0.000000) count=1.000000
                                    118 ;	genReceive
      000005 8Dr00r00         [ 4]  119 	sta	__print_format_PARM_3
      000008 8Er01r00         [ 4]  120 	stx	(__print_format_PARM_3 + 1)
                                    121 ;	Raw cost for generated ic 2 : (6, 8.000000) count=1.000000
                                    122 ;	../vprintf.c: 43: return _print_format (put_char_to_stdout, NULL, format, ap);
                                    123 ;	genAssign
                                    124 ;	genAssignLit
      00000B 9Cr00r00         [ 4]  125 	stz	__print_format_PARM_2
      00000E 9Cr01r00         [ 4]  126 	stz	(__print_format_PARM_2 + 1)
                                    127 ;	Raw cost for generated ic 4 : (6, 8.000000) count=1.000000
                                    128 ;	genAssign
                                    129 ;	genCopy
      000011 ADr01r00         [ 4]  130 	lda	(_vprintf_PARM_2 + 1)
      000014 8Dr01r00         [ 4]  131 	sta	(__print_format_PARM_4 + 1)
      000017 ADr00r00         [ 4]  132 	lda	_vprintf_PARM_2
      00001A 8Dr00r00         [ 4]  133 	sta	__print_format_PARM_4
                                    134 ;	Raw cost for generated ic 6 : (12, 16.000000) count=1.000000
                                    135 ;	Raw cost for generated ic 3 : (0, 0.000000) count=1.000000
                                    136 ;	genCall
                                    137 ;	genSend
      00001D A2s00            [ 2]  138 	ldx	#>(_put_char_to_stdout)
      00001F A9r00            [ 2]  139 	lda	#(_put_char_to_stdout)
                                    140 ;	assignResultValue
                                    141 ;	Raw cost for generated ic 7 : (7, 10.000000) count=1.000000
                                    142 ;	genRet
                                    143 ;	Raw cost for generated ic 8 : (0, 0.000000) count=1.000000
                                    144 ;	genLabel
                                    145 ;	Raw cost for generated ic 9 : (0, 0.000000) count=1.000000
                                    146 ;	../vprintf.c: 44: }
                                    147 ;	genEndFunction
      000021 4Cr00r00         [ 3]  148 	jmp	__print_format
                                    149 ;	Raw cost for generated ic 10 : (1, 6.000000) count=1.000000
                                    150 ;------------------------------------------------------------
                                    151 ;Allocation info for local variables in function 'printf'
                                    152 ;------------------------------------------------------------
                                    153 ;format        Allocated to stack - sp +3 +2 
                                    154 ;arg           Allocated to registers 
                                    155 ;i             Allocated to registers a x 
                                    156 ;------------------------------------------------------------
                                    157 ;	../vprintf.c: 47: printf (const char *format, ...)
                                    158 ;	genLabel
                                    159 ;	Raw cost for generated ic 0 : (0, 0.000000) count=1.000000
                                    160 ;	-----------------------------------------
                                    161 ;	 function printf
                                    162 ;	-----------------------------------------
                                    163 ;	Register assignment is optimal.
                                    164 ;	Stack space usage: 0 bytes.
      000024                        165 _printf:
                                    166 ;	Raw cost for generated ic 1 : (0, 0.000000) count=1.000000
                                    167 ;	../vprintf.c: 52: va_start (arg, format);
                                    168 ;	genAddrOf
      000024 BA               [ 2]  169 	tsx
      000025 E8               [ 2]  170 	inx
      000026 E8               [ 2]  171 	inx
      000027 E8               [ 2]  172 	inx
      000028 8A               [ 2]  173 	txa
      000029 A2 01            [ 2]  174 	ldx	#0x01
                                    175 ;	Raw cost for generated ic 2 : (7, 12.000000) count=1.000000
                                    176 ;	genCast
                                    177 ;	genCopy
                                    178 ;	Raw cost for generated ic 3 : (0, 0.000000) count=1.000000
                                    179 ;	genPlus
                                    180 ;	  genPlusInc
      00002B 18               [ 2]  181 	clc
      00002C 69 02            [ 3]  182 	adc	#0x02
      00002E 8Dr00r00         [ 4]  183 	sta	__print_format_PARM_4
      000031 8A               [ 2]  184 	txa
      000032 69 00            [ 3]  185 	adc	#0x00
      000034 8Dr01r00         [ 4]  186 	sta	(__print_format_PARM_4 + 1)
                                    187 ;	Raw cost for generated ic 4 : (12, 16.000000) count=1.000000
                                    188 ;	../vprintf.c: 53: i = _print_format (put_char_to_stdout, NULL, format, arg);
                                    189 ;	genAssign
                                    190 ;	genAssignLit
      000037 9Cr00r00         [ 4]  191 	stz	__print_format_PARM_2
      00003A 9Cr01r00         [ 4]  192 	stz	(__print_format_PARM_2 + 1)
                                    193 ;	Raw cost for generated ic 7 : (6, 8.000000) count=1.000000
                                    194 ;	genAssign
                                    195 ;	genCopy
      00003D BA               [ 2]  196 	tsx
      00003E BD 04 01         [ 5]  197 	lda	0x104,x
      000041 8Dr01r00         [ 4]  198 	sta	(__print_format_PARM_3 + 1)
      000044 BD 03 01         [ 5]  199 	lda	0x103,x
      000047 8Dr00r00         [ 4]  200 	sta	__print_format_PARM_3
                                    201 ;	Raw cost for generated ic 8 : (13, 18.000000) count=1.000000
                                    202 ;	Raw cost for generated ic 6 : (0, 0.000000) count=1.000000
                                    203 ;	genCall
                                    204 ;	genSend
      00004A A2s00            [ 2]  205 	ldx	#>(_put_char_to_stdout)
      00004C A9r00            [ 2]  206 	lda	#(_put_char_to_stdout)
                                    207 ;	assignResultValue
                                    208 ;	Raw cost for generated ic 10 : (7, 10.000000) count=1.000000
                                    209 ;	../vprintf.c: 56: return i;
                                    210 ;	genRet
                                    211 ;	Raw cost for generated ic 13 : (0, 0.000000) count=1.000000
                                    212 ;	genLabel
                                    213 ;	Raw cost for generated ic 14 : (0, 0.000000) count=1.000000
                                    214 ;	../vprintf.c: 57: }
                                    215 ;	genEndFunction
      00004E 4Cr00r00         [ 3]  216 	jmp	__print_format
                                    217 ;	Raw cost for generated ic 15 : (1, 6.000000) count=1.000000
                                    218 	.area CODE
                                    219 	.area RODATA
                                    220 	.area XINIT
                                    221 	.area CABS    (ABS)
