                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler
                                      3 ; Version 4.5.10 #15691 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module cotf
                                      6 	
      000000                          7 	.r65c02
                                      8 	.optsdcc -mmos65c02
                                      9 
                                     10 ;--------------------------------------------------------
                                     11 ;  Ordering of segments for the linker.
                                     12 ;--------------------------------------------------------
                                     13 	.area ZP      (PAG)
                                     14 	.area OSEG    (PAG, OVR)
                                     15 	.area _CODE
                                     16 	.area GSINIT
                                     17 	.area GSFINAL
                                     18 	.area CODE
                                     19 	.area RODATA
                                     20 	.area XINIT
                                     21 	.area _DATA
                                     22 	.area DATA
                                     23 	.area BSS
                                     24 ;--------------------------------------------------------
                                     25 ; Public variables in this module
                                     26 ;--------------------------------------------------------
                                     27 	.globl _tancotf
                                     28 	.globl _fabsf
                                     29 	.globl _cotf_PARM_1
                                     30 	.globl _cotf
                                     31 ;--------------------------------------------------------
                                     32 ; ZP ram data
                                     33 ;--------------------------------------------------------
                                     34 	.area ZP      (PAG)
      000000                         35 _cotf_sloc0_1_0:
      000000                         36 	.ds 4
                                     37 ;--------------------------------------------------------
                                     38 ; overlayable items in ram
                                     39 ;--------------------------------------------------------
                                     40 ;--------------------------------------------------------
                                     41 ; uninitialized external ram data
                                     42 ;--------------------------------------------------------
                                     43 	.area BSS
      000000                         44 _cotf_PARM_1:
      000000                         45 	.ds 4
                                     46 ;--------------------------------------------------------
                                     47 ; absolute external ram data
                                     48 ;--------------------------------------------------------
                                     49 	.area DABS    (ABS)
                                     50 ;--------------------------------------------------------
                                     51 ; initialized external ram data
                                     52 ;--------------------------------------------------------
                                     53 	.area DATA
                                     54 ;--------------------------------------------------------
                                     55 ; global & static initialisations
                                     56 ;--------------------------------------------------------
                                     57 	.area _CODE
                                     58 	.area GSINIT
                                     59 	.area GSFINAL
                                     60 	.area GSINIT
                                     61 ;--------------------------------------------------------
                                     62 ; Home
                                     63 ;--------------------------------------------------------
                                     64 	.area _CODE
                                     65 	.area _CODE
                                     66 ;--------------------------------------------------------
                                     67 ; code
                                     68 ;--------------------------------------------------------
                                     69 	.area CODE
                                     70 ;------------------------------------------------------------
                                     71 ;Allocation info for local variables in function 'cotf'
                                     72 ;------------------------------------------------------------
                                     73 ;sloc0         Allocated with name '_cotf_sloc0_1_0'
                                     74 ;x             Allocated with name '_cotf_PARM_1'
                                     75 ;y             Allocated with name '_cotf_y_10000_27'
                                     76 ;------------------------------------------------------------
                                     77 ;	../cotf.c: 37: float cotf(float x) _FLOAT_FUNC_REENTRANT
                                     78 ;	genLabel
                                     79 ;	Raw cost for generated ic 0 : (0, 0.000000) count=1.000000
                                     80 ;	-----------------------------------------
                                     81 ;	 function cotf
                                     82 ;	-----------------------------------------
                                     83 ;	Register assignment is optimal.
                                     84 ;	Stack space usage: 0 bytes.
      000000                         85 _cotf:
                                     86 ;	Raw cost for generated ic 1 : (0, 0.000000) count=1.000000
                                     87 ;	../cotf.c: 41: y=fabsf(x);
                                     88 ;	genAssign
                                     89 ;	genCopy
      000000 ADr03r00         [ 4]   90 	lda	(_cotf_PARM_1 + 3)
      000003 8Dr03r00         [ 4]   91 	sta	(_fabsf_PARM_1 + 3)
      000006 ADr02r00         [ 4]   92 	lda	(_cotf_PARM_1 + 2)
      000009 8Dr02r00         [ 4]   93 	sta	(_fabsf_PARM_1 + 2)
      00000C ADr01r00         [ 4]   94 	lda	(_cotf_PARM_1 + 1)
      00000F 8Dr01r00         [ 4]   95 	sta	(_fabsf_PARM_1 + 1)
      000012 ADr00r00         [ 4]   96 	lda	_cotf_PARM_1
      000015 8Dr00r00         [ 4]   97 	sta	_fabsf_PARM_1
                                     98 ;	Raw cost for generated ic 2 : (24, 32.000000) count=1.000000
                                     99 ;	genCall
      000018 20r00r00         [ 6]  100 	jsr	_fabsf
                                    101 ;	assignResultValue
      00001B 8Dr00r00         [ 4]  102 	sta	___fslt_PARM_1
      00001E 8Er01r00         [ 4]  103 	stx	(___fslt_PARM_1 + 1)
      000021 A5*00            [ 3]  104 	lda	*___SDCC_m6502_ret2
      000023 8Dr02r00         [ 4]  105 	sta	(___fslt_PARM_1 + 2)
      000026 A5*00            [ 3]  106 	lda	*___SDCC_m6502_ret3
      000028 8Dr03r00         [ 4]  107 	sta	(___fslt_PARM_1 + 3)
                                    108 ;	Raw cost for generated ic 3 : (19, 28.000000) count=1.000000
                                    109 ;	../cotf.c: 42: if (y<1.0E-30) //This one requires more thinking...
                                    110 ;	genAssign
                                    111 ;	genAssignLit
      00002B A2 60            [ 2]  112 	ldx	#0x60
      00002D 8Er00r00         [ 4]  113 	stx	___fslt_PARM_2
      000030 A2 42            [ 2]  114 	ldx	#0x42
      000032 8Er01r00         [ 4]  115 	stx	(___fslt_PARM_2 + 1)
      000035 A2 A2            [ 2]  116 	ldx	#0xa2
      000037 8Er02r00         [ 4]  117 	stx	(___fslt_PARM_2 + 2)
      00003A A2 0D            [ 2]  118 	ldx	#0x0d
      00003C 8Er03r00         [ 4]  119 	stx	(___fslt_PARM_2 + 3)
                                    120 ;	Raw cost for generated ic 28 : (20, 24.000000) count=1.000000
                                    121 ;	genCall
      00003F 20r00r00         [ 6]  122 	jsr	___fslt
                                    123 ;	assignResultValue
                                    124 ;	Raw cost for generated ic 29 : (3, 6.000000) count=1.000000
                                    125 ;	genIfx
      000042 C9 00            [ 2]  126 	cmp	#0x00
                                    127 ;	genIfxJump : z
      000044 F0 47            [ 4]  128 	beq	00105$
                                    129 ;	Raw cost for generated ic 6 : (7, 7.600000) count=1.000000
                                    130 ;	../cotf.c: 44: errno = ERANGE;
                                    131 ;	genAssign
                                    132 ;	genAssignLit
      000046 A2 22            [ 2]  133 	ldx	#0x22
      000048 8Er00r00         [ 4]  134 	stx	_errno
      00004B 9Cr01r00         [ 4]  135 	stz	(_errno + 1)
                                    136 ;	Raw cost for generated ic 10 : (8, 10.000000) count=0.750000
                                    137 ;	../cotf.c: 45: if (x<0.0)
                                    138 ;	genAssign
                                    139 ;	genCopy
      00004E ADr03r00         [ 4]  140 	lda	(_cotf_PARM_1 + 3)
      000051 8Dr03r00         [ 4]  141 	sta	(___fslt_PARM_1 + 3)
      000054 ADr02r00         [ 4]  142 	lda	(_cotf_PARM_1 + 2)
      000057 8Dr02r00         [ 4]  143 	sta	(___fslt_PARM_1 + 2)
      00005A ADr01r00         [ 4]  144 	lda	(_cotf_PARM_1 + 1)
      00005D 8Dr01r00         [ 4]  145 	sta	(___fslt_PARM_1 + 1)
      000060 ADr00r00         [ 4]  146 	lda	_cotf_PARM_1
      000063 8Dr00r00         [ 4]  147 	sta	___fslt_PARM_1
                                    148 ;	Raw cost for generated ic 30 : (24, 32.000000) count=0.750000
                                    149 ;	genAssign
                                    150 ;	genAssignLit
      000066 9Cr00r00         [ 4]  151 	stz	___fslt_PARM_2
      000069 9Cr01r00         [ 4]  152 	stz	(___fslt_PARM_2 + 1)
      00006C 9Cr02r00         [ 4]  153 	stz	(___fslt_PARM_2 + 2)
      00006F 9Cr03r00         [ 4]  154 	stz	(___fslt_PARM_2 + 3)
                                    155 ;	Raw cost for generated ic 31 : (12, 16.000000) count=0.750000
                                    156 ;	genCall
      000072 20r00r00         [ 6]  157 	jsr	___fslt
                                    158 ;	assignResultValue
                                    159 ;	Raw cost for generated ic 32 : (3, 6.000000) count=0.750000
                                    160 ;	genIfx
      000075 C9 00            [ 2]  161 	cmp	#0x00
                                    162 ;	genIfxJump : z
      000077 F0 0A            [ 4]  163 	beq	00102$
                                    164 ;	Raw cost for generated ic 12 : (7, 7.600000) count=0.750000
                                    165 ;	../cotf.c: 46: return -HUGE_VALF;
                                    166 ;	genRet
      000079 A9 FF            [ 2]  167 	lda	#0xff
      00007B AA               [ 2]  168 	tax
      00007C A0 7F            [ 2]  169 	ldy	#0x7f
      00007E 84*00            [ 3]  170 	sty	*___SDCC_m6502_ret2
      000080 85*00            [ 3]  171 	sta	*___SDCC_m6502_ret3
      000082 60               [ 6]  172 	rts
                                    173 ;	Raw cost for generated ic 15 : (12, 15.000000) count=0.562500
                                    174 ;	genLabel
      000083                        175 00102$:
                                    176 ;	Raw cost for generated ic 17 : (0, 0.000000) count=0.750000
                                    177 ;	../cotf.c: 48: return +HUGE_VALF;
                                    178 ;	genRet
      000083 A9 FF            [ 2]  179 	lda	#0xff
      000085 AA               [ 2]  180 	tax
      000086 A0 7F            [ 2]  181 	ldy	#0x7f
      000088 84*00            [ 3]  182 	sty	*___SDCC_m6502_ret2
      00008A 84*00            [ 3]  183 	sty	*___SDCC_m6502_ret3
      00008C 60               [ 6]  184 	rts
                                    185 ;	Raw cost for generated ic 18 : (12, 15.000000) count=0.750000
                                    186 ;	genLabel
      00008D                        187 00105$:
                                    188 ;	Raw cost for generated ic 20 : (0, 0.000000) count=1.000000
                                    189 ;	../cotf.c: 50: return tancotf(x, 1);
                                    190 ;	genAssign
                                    191 ;	genCopy
      00008D ADr03r00         [ 4]  192 	lda	(_cotf_PARM_1 + 3)
      000090 8Dr03r00         [ 4]  193 	sta	(_tancotf_PARM_1 + 3)
      000093 ADr02r00         [ 4]  194 	lda	(_cotf_PARM_1 + 2)
      000096 8Dr02r00         [ 4]  195 	sta	(_tancotf_PARM_1 + 2)
      000099 ADr01r00         [ 4]  196 	lda	(_cotf_PARM_1 + 1)
      00009C 8Dr01r00         [ 4]  197 	sta	(_tancotf_PARM_1 + 1)
      00009F ADr00r00         [ 4]  198 	lda	_cotf_PARM_1
      0000A2 8Dr00r00         [ 4]  199 	sta	_tancotf_PARM_1
                                    200 ;	Raw cost for generated ic 21 : (24, 32.000000) count=1.000000
                                    201 ;	genAssign
                                    202 ;	genAssignLit
      0000A5 A2 01            [ 2]  203 	ldx	#0x01
      0000A7 8Er00r00         [ 4]  204 	stx	_tancotf_PARM_2
                                    205 ;	Raw cost for generated ic 22 : (5, 6.000000) count=1.000000
                                    206 ;	genCall
      0000AA 20r00r00         [ 6]  207 	jsr	_tancotf
                                    208 ;	assignResultValue
      0000AD 85*00            [ 3]  209 	sta	*_cotf_sloc0_1_0
      0000AF 86*01            [ 3]  210 	stx	*(_cotf_sloc0_1_0 + 1)
      0000B1 A5*00            [ 3]  211 	lda	*___SDCC_m6502_ret2
      0000B3 85*02            [ 3]  212 	sta	*(_cotf_sloc0_1_0 + 2)
      0000B5 A5*00            [ 3]  213 	lda	*___SDCC_m6502_ret3
      0000B7 85*03            [ 3]  214 	sta	*(_cotf_sloc0_1_0 + 3)
                                    215 ;	Raw cost for generated ic 23 : (15, 24.000000) count=1.000000
                                    216 ;	genRet
      0000B9 85*00            [ 3]  217 	sta	*___SDCC_m6502_ret3
      0000BB A5*02            [ 3]  218 	lda	*(_cotf_sloc0_1_0 + 2)
      0000BD 85*00            [ 3]  219 	sta	*___SDCC_m6502_ret2
      0000BF A5*00            [ 3]  220 	lda	*_cotf_sloc0_1_0
                                    221 ;	Raw cost for generated ic 24 : (8, 12.000000) count=1.000000
                                    222 ;	genLabel
                                    223 ;	Raw cost for generated ic 25 : (0, 0.000000) count=1.000000
                                    224 ;	../cotf.c: 51: }
                                    225 ;	genEndFunction
      0000C1 60               [ 6]  226 	rts
                                    227 ;	Raw cost for generated ic 26 : (1, 6.000000) count=1.000000
                                    228 	.area CODE
                                    229 	.area RODATA
                                    230 	.area XINIT
                                    231 	.area CABS    (ABS)
