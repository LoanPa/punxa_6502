                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler
                                      3 ; Version 4.5.10 #15691 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module __stdc_bit_width
                                      6 	
      000000                          7 	.r65c02
                                      8 	.optsdcc -mmos65c02
                                      9 
                                     10 ;--------------------------------------------------------
                                     11 ;  Ordering of segments for the linker.
                                     12 ;--------------------------------------------------------
                                     13 	.area ZP      (PAG)
                                     14 	.area OSEG    (PAG, OVR)
                                     15 	.area _CODE
                                     16 	.area GSINIT
                                     17 	.area GSFINAL
                                     18 	.area CODE
                                     19 	.area RODATA
                                     20 	.area XINIT
                                     21 	.area _DATA
                                     22 	.area DATA
                                     23 	.area BSS
                                     24 ;--------------------------------------------------------
                                     25 ; Public variables in this module
                                     26 ;--------------------------------------------------------
                                     27 	.globl ___stdc_bit_width_PARM_1
                                     28 	.globl ___stdc_bit_width
                                     29 ;--------------------------------------------------------
                                     30 ; ZP ram data
                                     31 ;--------------------------------------------------------
                                     32 	.area ZP      (PAG)
      000000                         33 ___stdc_bit_width_sloc0_1_0:
      000000                         34 	.ds 8
                                     35 ;--------------------------------------------------------
                                     36 ; overlayable items in ram
                                     37 ;--------------------------------------------------------
                                     38 ;--------------------------------------------------------
                                     39 ; uninitialized external ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area BSS
      000000                         42 ___stdc_bit_width_PARM_1:
      000000                         43 	.ds 8
                                     44 ;--------------------------------------------------------
                                     45 ; absolute external ram data
                                     46 ;--------------------------------------------------------
                                     47 	.area DABS    (ABS)
                                     48 ;--------------------------------------------------------
                                     49 ; initialized external ram data
                                     50 ;--------------------------------------------------------
                                     51 	.area DATA
                                     52 ;--------------------------------------------------------
                                     53 ; global & static initialisations
                                     54 ;--------------------------------------------------------
                                     55 	.area _CODE
                                     56 	.area GSINIT
                                     57 	.area GSFINAL
                                     58 	.area GSINIT
                                     59 ;--------------------------------------------------------
                                     60 ; Home
                                     61 ;--------------------------------------------------------
                                     62 	.area _CODE
                                     63 	.area _CODE
                                     64 ;--------------------------------------------------------
                                     65 ; code
                                     66 ;--------------------------------------------------------
                                     67 	.area CODE
                                     68 ;------------------------------------------------------------
                                     69 ;Allocation info for local variables in function '__stdc_bit_width'
                                     70 ;------------------------------------------------------------
                                     71 ;sloc0         Allocated with name '___stdc_bit_width_sloc0_1_0'
                                     72 ;value         Allocated with name '___stdc_bit_width_PARM_1'
                                     73 ;width         Allocated to registers x 
                                     74 ;i             Allocated to registers 
                                     75 ;------------------------------------------------------------
                                     76 ;	../__stdc_bit_width.c: 37: unsigned _BitInt(8) __stdc_bit_width(unsigned long long value)
                                     77 ;	genLabel
                                     78 ;	Raw cost for generated ic 0 : (0, 0.000000) count=1.000000
                                     79 ;	-----------------------------------------
                                     80 ;	 function __stdc_bit_width
                                     81 ;	-----------------------------------------
                                     82 ;	Register assignment is optimal.
                                     83 ;	Stack space usage: 0 bytes.
      000000                         84 ___stdc_bit_width:
                                     85 ;	Raw cost for generated ic 1 : (0, 0.000000) count=1.000000
                                     86 ;	../__stdc_bit_width.c: 39: int_fast8_t width = 0;
                                     87 ;	genAssign
                                     88 ;	genCopy
      000000 A2 00            [ 2]   89 	ldx	#0x00
                                     90 ;	Raw cost for generated ic 2 : (2, 2.000000) count=1.000000
                                     91 ;	../__stdc_bit_width.c: 40: for(uint_fast8_t i = 0; i < ULLONG_WIDTH; i++)
                                     92 ;	genAssign
                                     93 ;	genCopy
      000002 A0 00            [ 2]   94 	ldy	#0x00
                                     95 ;	Raw cost for generated ic 29 : (2, 2.000000) count=1.000000
                                     96 ;	genLabel
      000004                         97 00105$:
                                     98 ;	Raw cost for generated ic 4 : (0, 0.000000) count=3.999993
                                     99 ;	genCmp
      000004 C0 40            [ 2]  100 	cpy	#0x40
      000006 90 03            [ 4]  101 	bcc	00128$
      000008 4Cr8Ar00         [ 3]  102 	jmp	00103$
      00000B                        103 00128$:
                                    104 ;	Raw cost for generated ic 5 : (7, 7.600000) count=3.999993
                                    105 ;	skipping generated iCode
                                    106 ;	Raw cost for generated ic 6 : (0, 0.000000) count=3.999993
                                    107 ;	../__stdc_bit_width.c: 41: if(value & (1ull << i))
                                    108 ;	genCast
                                    109 ;	genCopy
      00000B 8Cr00r00         [ 4]  110 	sty	__slulonglong_PARM_2
                                    111 ;	Raw cost for generated ic 35 : (3, 4.000000) count=2.999995
                                    112 ;	genAssign
                                    113 ;	genAssignLit
      00000E A9 01            [ 2]  114 	lda	#0x01
      000010 8Dr00r00         [ 4]  115 	sta	__slulonglong_PARM_1
      000013 9Cr01r00         [ 4]  116 	stz	(__slulonglong_PARM_1 + 1)
      000016 9Cr02r00         [ 4]  117 	stz	(__slulonglong_PARM_1 + 2)
      000019 9Cr03r00         [ 4]  118 	stz	(__slulonglong_PARM_1 + 3)
      00001C 9Cr04r00         [ 4]  119 	stz	(__slulonglong_PARM_1 + 4)
      00001F 9Cr05r00         [ 4]  120 	stz	(__slulonglong_PARM_1 + 5)
      000022 9Cr06r00         [ 4]  121 	stz	(__slulonglong_PARM_1 + 6)
      000025 9Cr07r00         [ 4]  122 	stz	(__slulonglong_PARM_1 + 7)
                                    123 ;	Raw cost for generated ic 36 : (26, 34.000000) count=2.999995
                                    124 ;	genCall
      000028 DA               [ 3]  125 	phx
      000029 5A               [ 3]  126 	phy
      00002A 20r00r00         [ 6]  127 	jsr	__slulonglong
                                    128 ;	assignResultValue
      00002D 85*00            [ 3]  129 	sta	*___stdc_bit_width_sloc0_1_0
      00002F 86*01            [ 3]  130 	stx	*(___stdc_bit_width_sloc0_1_0 + 1)
      000031 A5*00            [ 3]  131 	lda	*___SDCC_m6502_ret2
      000033 85*02            [ 3]  132 	sta	*(___stdc_bit_width_sloc0_1_0 + 2)
      000035 A5*00            [ 3]  133 	lda	*___SDCC_m6502_ret3
      000037 85*03            [ 3]  134 	sta	*(___stdc_bit_width_sloc0_1_0 + 3)
      000039 A5*00            [ 3]  135 	lda	*___SDCC_m6502_ret4
      00003B 85*04            [ 3]  136 	sta	*(___stdc_bit_width_sloc0_1_0 + 4)
      00003D A5*00            [ 3]  137 	lda	*___SDCC_m6502_ret5
      00003F 85*05            [ 3]  138 	sta	*(___stdc_bit_width_sloc0_1_0 + 5)
      000041 A5*00            [ 3]  139 	lda	*___SDCC_m6502_ret6
      000043 85*06            [ 3]  140 	sta	*(___stdc_bit_width_sloc0_1_0 + 6)
      000045 A5*00            [ 3]  141 	lda	*___SDCC_m6502_ret7
      000047 85*07            [ 3]  142 	sta	*(___stdc_bit_width_sloc0_1_0 + 7)
      000049 7A               [ 4]  143 	ply
      00004A FA               [ 4]  144 	plx
                                    145 ;	Raw cost for generated ic 38 : (35, 62.000000) count=2.999995
                                    146 ;	genAnd
      00004B ADr00r00         [ 4]  147 	lda	___stdc_bit_width_PARM_1
      00004E 25*00            [ 3]  148 	and	*___stdc_bit_width_sloc0_1_0
      000050 D0 2F            [ 4]  149 	bne	00129$
      000052 ADr01r00         [ 4]  150 	lda	(___stdc_bit_width_PARM_1 + 1)
      000055 25*01            [ 3]  151 	and	*(___stdc_bit_width_sloc0_1_0 + 1)
      000057 D0 28            [ 4]  152 	bne	00129$
      000059 ADr02r00         [ 4]  153 	lda	(___stdc_bit_width_PARM_1 + 2)
      00005C 25*02            [ 3]  154 	and	*(___stdc_bit_width_sloc0_1_0 + 2)
      00005E D0 21            [ 4]  155 	bne	00129$
      000060 ADr03r00         [ 4]  156 	lda	(___stdc_bit_width_PARM_1 + 3)
      000063 25*03            [ 3]  157 	and	*(___stdc_bit_width_sloc0_1_0 + 3)
      000065 D0 1A            [ 4]  158 	bne	00129$
      000067 ADr04r00         [ 4]  159 	lda	(___stdc_bit_width_PARM_1 + 4)
      00006A 25*04            [ 3]  160 	and	*(___stdc_bit_width_sloc0_1_0 + 4)
      00006C D0 13            [ 4]  161 	bne	00129$
      00006E ADr05r00         [ 4]  162 	lda	(___stdc_bit_width_PARM_1 + 5)
      000071 25*05            [ 3]  163 	and	*(___stdc_bit_width_sloc0_1_0 + 5)
      000073 D0 0C            [ 4]  164 	bne	00129$
      000075 ADr06r00         [ 4]  165 	lda	(___stdc_bit_width_PARM_1 + 6)
      000078 25*06            [ 3]  166 	and	*(___stdc_bit_width_sloc0_1_0 + 6)
      00007A D0 05            [ 4]  167 	bne	00129$
      00007C ADr07r00         [ 4]  168 	lda	(___stdc_bit_width_PARM_1 + 7)
      00007F 25*07            [ 3]  169 	and	*(___stdc_bit_width_sloc0_1_0 + 7)
      000081                        170 00129$:
                                    171 ;	genIfxJump : z
      000081 F0 03            [ 4]  172 	beq	00106$
                                    173 ;	Raw cost for generated ic 10 : (59, 79.799995) count=2.999995
                                    174 ;	skipping generated iCode
                                    175 ;	Raw cost for generated ic 11 : (0, 0.000000) count=2.999995
                                    176 ;	../__stdc_bit_width.c: 42: width = (i + 1);
                                    177 ;	genCast
                                    178 ;	genCopy
      000083 98               [ 2]  179 	tya
                                    180 ;	Raw cost for generated ic 14 : (1, 2.000000) count=2.249995
                                    181 ;	genPlus
                                    182 ;	  genPlusInc
      000084 AA               [ 2]  183 	tax
      000085 E8               [ 2]  184 	inx
                                    185 ;	Raw cost for generated ic 15 : (2, 4.000000) count=2.249995
                                    186 ;	genLabel
      000086                        187 00106$:
                                    188 ;	Raw cost for generated ic 18 : (0, 0.000000) count=2.999993
                                    189 ;	../__stdc_bit_width.c: 40: for(uint_fast8_t i = 0; i < ULLONG_WIDTH; i++)
                                    190 ;	genPlus
                                    191 ;	  genPlusInc
      000086 C8               [ 2]  192 	iny
                                    193 ;	Raw cost for generated ic 20 : (1, 2.000000) count=2.999993
                                    194 ;	genGoto
      000087 4Cr04r00         [ 3]  195 	jmp	00105$
                                    196 ;	Raw cost for generated ic 22 : (3, 3.000000) count=2.999993
                                    197 ;	genLabel
      00008A                        198 00103$:
                                    199 ;	Raw cost for generated ic 23 : (0, 0.000000) count=0.999997
                                    200 ;	../__stdc_bit_width.c: 43: return width;
                                    201 ;	genCast
                                    202 ;	genCopy
      00008A 8A               [ 2]  203 	txa
                                    204 ;	Raw cost for generated ic 24 : (1, 2.000000) count=0.999997
                                    205 ;	genRet
                                    206 ;	Raw cost for generated ic 25 : (0, 0.000000) count=0.999997
                                    207 ;	genLabel
                                    208 ;	Raw cost for generated ic 26 : (0, 0.000000) count=0.999997
                                    209 ;	../__stdc_bit_width.c: 44: }
                                    210 ;	genEndFunction
      00008B 60               [ 6]  211 	rts
                                    212 ;	Raw cost for generated ic 27 : (1, 6.000000) count=0.999997
                                    213 	.area CODE
                                    214 	.area RODATA
                                    215 	.area XINIT
                                    216 	.area CABS    (ABS)
