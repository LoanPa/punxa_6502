                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler
                                      3 ; Version 4.5.10 #15691 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module mbsinit
                                      6 	
      000000                          7 	.r65c02
                                      8 	.optsdcc -mmos65c02
                                      9 
                                     10 ;--------------------------------------------------------
                                     11 ;  Ordering of segments for the linker.
                                     12 ;--------------------------------------------------------
                                     13 	.area ZP      (PAG)
                                     14 	.area OSEG    (PAG, OVR)
                                     15 	.area _CODE
                                     16 	.area GSINIT
                                     17 	.area GSFINAL
                                     18 	.area CODE
                                     19 	.area RODATA
                                     20 	.area XINIT
                                     21 	.area _DATA
                                     22 	.area DATA
                                     23 	.area BSS
                                     24 ;--------------------------------------------------------
                                     25 ; Public variables in this module
                                     26 ;--------------------------------------------------------
                                     27 	.globl _mbsinit
                                     28 ;--------------------------------------------------------
                                     29 ; ZP ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area ZP      (PAG)
                                     32 ;--------------------------------------------------------
                                     33 ; overlayable items in ram
                                     34 ;--------------------------------------------------------
                                     35 	.area	OSEG    (PAG, OVR)
      000000                         36 _mbsinit_sloc0_1_0:
      000000                         37 	.ds 2
                                     38 ;--------------------------------------------------------
                                     39 ; uninitialized external ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area BSS
                                     42 ;--------------------------------------------------------
                                     43 ; absolute external ram data
                                     44 ;--------------------------------------------------------
                                     45 	.area DABS    (ABS)
                                     46 ;--------------------------------------------------------
                                     47 ; initialized external ram data
                                     48 ;--------------------------------------------------------
                                     49 	.area DATA
                                     50 ;--------------------------------------------------------
                                     51 ; global & static initialisations
                                     52 ;--------------------------------------------------------
                                     53 	.area _CODE
                                     54 	.area GSINIT
                                     55 	.area GSFINAL
                                     56 	.area GSINIT
                                     57 ;--------------------------------------------------------
                                     58 ; Home
                                     59 ;--------------------------------------------------------
                                     60 	.area _CODE
                                     61 	.area _CODE
                                     62 ;--------------------------------------------------------
                                     63 ; code
                                     64 ;--------------------------------------------------------
                                     65 	.area CODE
                                     66 ;------------------------------------------------------------
                                     67 ;Allocation info for local variables in function 'mbsinit'
                                     68 ;------------------------------------------------------------
                                     69 ;ps            Allocated to registers a x 
                                     70 ;sloc0         Allocated with name '_mbsinit_sloc0_1_0'
                                     71 ;------------------------------------------------------------
                                     72 ;	../mbsinit.c: 31: int mbsinit(const mbstate_t *ps)
                                     73 ;	genLabel
                                     74 ;	Raw cost for generated ic 0 : (0, 0.000000) count=1.000000
                                     75 ;	-----------------------------------------
                                     76 ;	 function mbsinit
                                     77 ;	-----------------------------------------
                                     78 ;	Register assignment is optimal.
                                     79 ;	Stack space usage: 0 bytes.
      000000                         80 _mbsinit:
                                     81 ;	Raw cost for generated ic 1 : (0, 0.000000) count=1.000000
                                     82 ;	genReceive
                                     83 ;	Raw cost for generated ic 2 : (0, 0.000000) count=1.000000
                                     84 ;	../mbsinit.c: 33: return(!ps || !ps->c[0] && !ps->c[1] && !ps->c[2]);
                                     85 ;	genIfx
      000000 C9 00            [ 2]   86 	cmp	#0x00
                                     87 ;	genIfxJump : z
      000002 D0 04            [ 4]   88 	bne	00130$
      000004 E0 00            [ 2]   89 	cpx	#0x00
      000006 F0 2D            [ 4]   90 	beq	00104$
      000008                         91 00130$:
                                     92 ;	Raw cost for generated ic 4 : (11, 12.200000) count=1.000000
                                     93 ;	genPointerGet
                                     94 ;	  setupDPTR - off=0 remat=(null) savea=0
      000008 85*00            [ 3]   95 	sta	*(DPTR+0)
      00000A 86*01            [ 3]   96 	stx	*(DPTR+1)
      00000C A0 00            [ 2]   97 	ldy	#0x00
      00000E B1*00            [ 6]   98 	lda	[DPTR],y
      000010 A8               [ 2]   99 	tay
      000011 A5*00            [ 3]  100 	lda	*(DPTR+0)
                                    101 ;	Raw cost for generated ic 8 : (11, 18.000000) count=0.750000
                                    102 ;	genIfx
      000013 C0 00            [ 2]  103 	cpy	#0x00
                                    104 ;	genIfxJump : z
      000015 D0 19            [ 4]  105 	bne	00103$
                                    106 ;	Raw cost for generated ic 10 : (7, 7.600000) count=0.750000
                                    107 ;	genAssign
                                    108 ;	genCopy
      000017 85*00            [ 3]  109 	sta	*_mbsinit_sloc0_1_0
      000019 86*01            [ 3]  110 	stx	*(_mbsinit_sloc0_1_0 + 1)
                                    111 ;	Raw cost for generated ic 13 : (4, 6.000000) count=0.562500
                                    112 ;	genPointerGet
      00001B A0 01            [ 2]  113 	ldy	#0x01
      00001D B1*00            [ 6]  114 	lda	[*_mbsinit_sloc0_1_0],y
      00001F A8               [ 2]  115 	tay
      000020 A5*00            [ 3]  116 	lda	*(_mbsinit_sloc0_1_0+0)
                                    117 ;	Raw cost for generated ic 14 : (8, 13.000000) count=0.562500
                                    118 ;	genIfx
      000022 C0 00            [ 2]  119 	cpy	#0x00
                                    120 ;	genIfxJump : z
      000024 D0 0A            [ 4]  121 	bne	00103$
                                    122 ;	Raw cost for generated ic 16 : (7, 7.600000) count=0.562500
                                    123 ;	genAssign
                                    124 ;	genCopy
                                    125 ;	Raw cost for generated ic 26 : (0, 0.000000) count=0.421875
                                    126 ;	genPointerGet
                                    127 ;	  setupDPTR - off=2 remat=(null) savea=0
      000026 85*00            [ 3]  128 	sta	*(DPTR+0)
      000028 86*01            [ 3]  129 	stx	*(DPTR+1)
      00002A A0 02            [ 2]  130 	ldy	#0x02
      00002C B1*00            [ 6]  131 	lda	[DPTR],y
                                    132 ;	Raw cost for generated ic 27 : (8, 13.000000) count=0.421875
                                    133 ;	genIfx
                                    134 ;	genIfxJump : z
      00002E F0 05            [ 4]  135 	beq	00104$
                                    136 ;	Raw cost for generated ic 29 : (5, 5.600000) count=0.421875
                                    137 ;	genLabel
      000030                        138 00103$:
                                    139 ;	Raw cost for generated ic 37 : (0, 0.000000) count=0.644531
                                    140 ;	genAssign
                                    141 ;	genCopy
      000030 A9 00            [ 2]  142 	lda	#0x00
                                    143 ;	Raw cost for generated ic 38 : (2, 2.000000) count=0.644531
                                    144 ;	genGoto
      000032 4Cr37r00         [ 3]  145 	jmp	00105$
                                    146 ;	Raw cost for generated ic 39 : (3, 3.000000) count=0.644531
                                    147 ;	genLabel
      000035                        148 00104$:
                                    149 ;	Raw cost for generated ic 40 : (0, 0.000000) count=0.355469
                                    150 ;	genAssign
                                    151 ;	genCopy
      000035 A9 01            [ 2]  152 	lda	#0x01
                                    153 ;	Raw cost for generated ic 41 : (2, 2.000000) count=0.355469
                                    154 ;	genLabel
      000037                        155 00105$:
                                    156 ;	Raw cost for generated ic 42 : (0, 0.000000) count=1.000000
                                    157 ;	genCast
                                    158 ;	genCopy
      000037 A2 00            [ 2]  159 	ldx	#0x00
                                    160 ;	Raw cost for generated ic 43 : (2, 2.000000) count=1.000000
                                    161 ;	genRet
                                    162 ;	Raw cost for generated ic 44 : (0, 0.000000) count=1.000000
                                    163 ;	genLabel
                                    164 ;	Raw cost for generated ic 45 : (0, 0.000000) count=1.000000
                                    165 ;	../mbsinit.c: 34: }
                                    166 ;	genEndFunction
      000039 60               [ 6]  167 	rts
                                    168 ;	Raw cost for generated ic 46 : (1, 6.000000) count=1.000000
                                    169 	.area CODE
                                    170 	.area RODATA
                                    171 	.area XINIT
                                    172 	.area CABS    (ABS)
