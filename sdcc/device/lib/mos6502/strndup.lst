                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler
                                      3 ; Version 4.5.10 #15691 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module strndup
                                      6 	
                                      7 	.optsdcc -mmos6502
                                      8 
                                      9 ;--------------------------------------------------------
                                     10 ;  Ordering of segments for the linker.
                                     11 ;--------------------------------------------------------
                                     12 	.area ZP      (PAG)
                                     13 	.area OSEG    (PAG, OVR)
                                     14 	.area _CODE
                                     15 	.area GSINIT
                                     16 	.area GSFINAL
                                     17 	.area CODE
                                     18 	.area RODATA
                                     19 	.area XINIT
                                     20 	.area _DATA
                                     21 	.area DATA
                                     22 	.area BSS
                                     23 ;--------------------------------------------------------
                                     24 ; Public variables in this module
                                     25 ;--------------------------------------------------------
                                     26 	.globl _malloc
                                     27 	.globl ___memcpy
                                     28 	.globl _strnlen
                                     29 	.globl _strndup_PARM_2
                                     30 	.globl _strndup
                                     31 ;--------------------------------------------------------
                                     32 ; ZP ram data
                                     33 ;--------------------------------------------------------
                                     34 	.area ZP      (PAG)
      000000                         35 _strndup_sloc0_1_0:
      000000                         36 	.ds 2
                                     37 ;--------------------------------------------------------
                                     38 ; overlayable items in ram
                                     39 ;--------------------------------------------------------
                                     40 ;--------------------------------------------------------
                                     41 ; uninitialized external ram data
                                     42 ;--------------------------------------------------------
                                     43 	.area BSS
      000000                         44 _strndup_PARM_2:
      000000                         45 	.ds 2
      000002                         46 _strndup_s_10000_68:
      000002                         47 	.ds 2
      000004                         48 _strndup_l_10000_69:
      000004                         49 	.ds 2
      000006                         50 _strndup_r_10000_69:
      000006                         51 	.ds 2
                                     52 ;--------------------------------------------------------
                                     53 ; absolute external ram data
                                     54 ;--------------------------------------------------------
                                     55 	.area DABS    (ABS)
                                     56 ;--------------------------------------------------------
                                     57 ; initialized external ram data
                                     58 ;--------------------------------------------------------
                                     59 	.area DATA
                                     60 ;--------------------------------------------------------
                                     61 ; global & static initialisations
                                     62 ;--------------------------------------------------------
                                     63 	.area _CODE
                                     64 	.area GSINIT
                                     65 	.area GSFINAL
                                     66 	.area GSINIT
                                     67 ;--------------------------------------------------------
                                     68 ; Home
                                     69 ;--------------------------------------------------------
                                     70 	.area _CODE
                                     71 	.area _CODE
                                     72 ;--------------------------------------------------------
                                     73 ; code
                                     74 ;--------------------------------------------------------
                                     75 	.area CODE
                                     76 ;------------------------------------------------------------
                                     77 ;Allocation info for local variables in function 'strndup'
                                     78 ;------------------------------------------------------------
                                     79 ;sloc0         Allocated with name '_strndup_sloc0_1_0'
                                     80 ;n             Allocated with name '_strndup_PARM_2'
                                     81 ;s             Allocated with name '_strndup_s_10000_68'
                                     82 ;l             Allocated with name '_strndup_l_10000_69'
                                     83 ;r             Allocated with name '_strndup_r_10000_69'
                                     84 ;------------------------------------------------------------
                                     85 ;	../strndup.c: 33: char *strndup (const char *s, size_t n)
                                     86 ;	genLabel
                                     87 ;	Raw cost for generated ic 0 : (0, 0.000000) count=1.000000
                                     88 ;	-----------------------------------------
                                     89 ;	 function strndup
                                     90 ;	-----------------------------------------
                                     91 ;	Register assignment is optimal.
                                     92 ;	Stack space usage: 0 bytes.
      000000                         93 _strndup:
                                     94 ;	Raw cost for generated ic 1 : (0, 0.000000) count=1.000000
                                     95 ;	genReceive
      000000 8Dr02r00         [ 4]   96 	sta	_strndup_s_10000_68
      000003 8Er03r00         [ 4]   97 	stx	(_strndup_s_10000_68 + 1)
                                     98 ;	Raw cost for generated ic 2 : (6, 8.000000) count=1.000000
                                     99 ;	../strndup.c: 35: size_t l = strnlen (s, n);
                                    100 ;	genAssign
                                    101 ;	genCopy
      000006 ADr01r00         [ 4]  102 	lda	(_strndup_PARM_2 + 1)
      000009 8Dr01r00         [ 4]  103 	sta	(_strnlen_PARM_2 + 1)
      00000C ADr00r00         [ 4]  104 	lda	_strndup_PARM_2
      00000F 8Dr00r00         [ 4]  105 	sta	_strnlen_PARM_2
                                    106 ;	Raw cost for generated ic 4 : (12, 16.000000) count=1.000000
                                    107 ;	Raw cost for generated ic 3 : (0, 0.000000) count=1.000000
                                    108 ;	genCall
                                    109 ;	genSend
      000012 ADr02r00         [ 4]  110 	lda	_strndup_s_10000_68
      000015 20r00r00         [ 6]  111 	jsr	_strnlen
                                    112 ;	assignResultValue
      000018 8Dr04r00         [ 4]  113 	sta	_strndup_l_10000_69
      00001B 8Er05r00         [ 4]  114 	stx	(_strndup_l_10000_69 + 1)
                                    115 ;	Raw cost for generated ic 5 : (12, 18.000000) count=1.000000
                                    116 ;	../strndup.c: 36: char *r = malloc (l + 1);
                                    117 ;	genPlus
                                    118 ;	  genPlusInc
      00001E 18               [ 2]  119 	clc
      00001F 69 01            [ 2]  120 	adc	#0x01
      000021 90 01            [ 4]  121 	bcc	00111$
      000023 E8               [ 2]  122 	inx
      000024                        123 00111$:
                                    124 ;	Raw cost for generated ic 7 : (6, 8.600000) count=1.000000
                                    125 ;	Raw cost for generated ic 8 : (0, 0.000000) count=1.000000
                                    126 ;	genCall
                                    127 ;	genSend
      000024 20r00r00         [ 6]  128 	jsr	_malloc
                                    129 ;	assignResultValue
                                    130 ;	Raw cost for generated ic 9 : (3, 6.000000) count=1.000000
                                    131 ;	genCast
                                    132 ;	genCopy
      000027 8Dr06r00         [ 4]  133 	sta	_strndup_r_10000_69
      00002A 8Er07r00         [ 4]  134 	stx	(_strndup_r_10000_69 + 1)
                                    135 ;	Raw cost for generated ic 10 : (6, 8.000000) count=1.000000
                                    136 ;	../strndup.c: 37: if (r)
                                    137 ;	genIfx
      00002D 8A               [ 2]  138 	txa
      00002E 0Dr06r00         [ 4]  139 	ora	_strndup_r_10000_69
                                    140 ;	genIfxJump : z
      000031 F0 30            [ 4]  141 	beq	00102$
                                    142 ;	Raw cost for generated ic 12 : (9, 11.600000) count=1.000000
                                    143 ;	../strndup.c: 39: memcpy (r, s, l);
                                    144 ;	genCast
                                    145 ;	genCopy
      000033 ADr06r00         [ 4]  146 	lda	_strndup_r_10000_69
                                    147 ;	Raw cost for generated ic 15 : (3, 4.000000) count=0.750000
                                    148 ;	genCast
                                    149 ;	genCopy
      000036 ACr03r00         [ 4]  150 	ldy	(_strndup_s_10000_68 + 1)
      000039 84*01            [ 3]  151 	sty	*(___memcpy_PARM_2 + 1)
      00003B ACr02r00         [ 4]  152 	ldy	_strndup_s_10000_68
      00003E 84*00            [ 3]  153 	sty	*___memcpy_PARM_2
                                    154 ;	Raw cost for generated ic 16 : (10, 14.000000) count=0.750000
                                    155 ;	genAssign
                                    156 ;	genCopy
      000040 ACr05r00         [ 4]  157 	ldy	(_strndup_l_10000_69 + 1)
      000043 84*01            [ 3]  158 	sty	*(___memcpy_PARM_3 + 1)
      000045 ACr04r00         [ 4]  159 	ldy	_strndup_l_10000_69
      000048 84*00            [ 3]  160 	sty	*___memcpy_PARM_3
                                    161 ;	Raw cost for generated ic 19 : (10, 14.000000) count=0.750000
                                    162 ;	Raw cost for generated ic 17 : (0, 0.000000) count=0.750000
                                    163 ;	genCall
                                    164 ;	genSend
      00004A 20r00r00         [ 6]  165 	jsr	___memcpy
                                    166 ;	Raw cost for generated ic 20 : (3, 6.000000) count=0.750000
                                    167 ;	../strndup.c: 40: r[l] = 0;
                                    168 ;	genPlus
      00004D ADr06r00         [ 4]  169 	lda	_strndup_r_10000_69
      000050 18               [ 2]  170 	clc
      000051 6Dr04r00         [ 4]  171 	adc	_strndup_l_10000_69
      000054 85*00            [ 3]  172 	sta	*_strndup_sloc0_1_0
      000056 ADr07r00         [ 4]  173 	lda	(_strndup_r_10000_69 + 1)
      000059 6Dr05r00         [ 4]  174 	adc	(_strndup_l_10000_69 + 1)
      00005C 85*01            [ 3]  175 	sta	*(_strndup_sloc0_1_0 + 1)
                                    176 ;	Raw cost for generated ic 21 : (17, 24.000000) count=0.750000
                                    177 ;	genPointerSet
      00005E A9 00            [ 2]  178 	lda	#0x00
      000060 A8               [ 2]  179 	tay
      000061 91*00            [ 6]  180 	sta	[*_strndup_sloc0_1_0],y
                                    181 ;	Raw cost for generated ic 22 : (5, 10.000000) count=0.750000
                                    182 ;	genLabel
      000063                        183 00102$:
                                    184 ;	Raw cost for generated ic 23 : (0, 0.000000) count=1.000000
                                    185 ;	../strndup.c: 42: return (r);
                                    186 ;	genRet
      000063 AEr07r00         [ 4]  187 	ldx	(_strndup_r_10000_69 + 1)
      000066 ADr06r00         [ 4]  188 	lda	_strndup_r_10000_69
                                    189 ;	Raw cost for generated ic 24 : (6, 8.000000) count=1.000000
                                    190 ;	genLabel
                                    191 ;	Raw cost for generated ic 25 : (0, 0.000000) count=1.000000
                                    192 ;	../strndup.c: 43: }
                                    193 ;	genEndFunction
      000069 60               [ 6]  194 	rts
                                    195 ;	Raw cost for generated ic 26 : (1, 6.000000) count=1.000000
                                    196 	.area CODE
                                    197 	.area RODATA
                                    198 	.area XINIT
                                    199 	.area CABS    (ABS)
