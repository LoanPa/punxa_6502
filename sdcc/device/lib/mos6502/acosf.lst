                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler
                                      3 ; Version 4.5.10 #15691 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module acosf
                                      6 	
                                      7 	.optsdcc -mmos6502
                                      8 
                                      9 ;--------------------------------------------------------
                                     10 ;  Ordering of segments for the linker.
                                     11 ;--------------------------------------------------------
                                     12 	.area ZP      (PAG)
                                     13 	.area OSEG    (PAG, OVR)
                                     14 	.area _CODE
                                     15 	.area GSINIT
                                     16 	.area GSFINAL
                                     17 	.area CODE
                                     18 	.area RODATA
                                     19 	.area XINIT
                                     20 	.area _DATA
                                     21 	.area DATA
                                     22 	.area BSS
                                     23 ;--------------------------------------------------------
                                     24 ; Public variables in this module
                                     25 ;--------------------------------------------------------
                                     26 	.globl _asincosf
                                     27 	.globl _acosf_PARM_1
                                     28 	.globl _acosf
                                     29 ;--------------------------------------------------------
                                     30 ; ZP ram data
                                     31 ;--------------------------------------------------------
                                     32 	.area ZP      (PAG)
      000000                         33 _acosf_sloc0_1_0:
      000000                         34 	.ds 4
                                     35 ;--------------------------------------------------------
                                     36 ; overlayable items in ram
                                     37 ;--------------------------------------------------------
                                     38 ;--------------------------------------------------------
                                     39 ; uninitialized external ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area BSS
      000000                         42 _acosf_PARM_1:
      000000                         43 	.ds 4
                                     44 ;--------------------------------------------------------
                                     45 ; absolute external ram data
                                     46 ;--------------------------------------------------------
                                     47 	.area DABS    (ABS)
                                     48 ;--------------------------------------------------------
                                     49 ; initialized external ram data
                                     50 ;--------------------------------------------------------
                                     51 	.area DATA
                                     52 ;--------------------------------------------------------
                                     53 ; global & static initialisations
                                     54 ;--------------------------------------------------------
                                     55 	.area _CODE
                                     56 	.area GSINIT
                                     57 	.area GSFINAL
                                     58 	.area GSINIT
                                     59 ;--------------------------------------------------------
                                     60 ; Home
                                     61 ;--------------------------------------------------------
                                     62 	.area _CODE
                                     63 	.area _CODE
                                     64 ;--------------------------------------------------------
                                     65 ; code
                                     66 ;--------------------------------------------------------
                                     67 	.area CODE
                                     68 ;------------------------------------------------------------
                                     69 ;Allocation info for local variables in function 'acosf'
                                     70 ;------------------------------------------------------------
                                     71 ;sloc0         Allocated with name '_acosf_sloc0_1_0'
                                     72 ;x             Allocated with name '_acosf_PARM_1'
                                     73 ;------------------------------------------------------------
                                     74 ;	../acosf.c: 36: float acosf(float x) _FLOAT_FUNC_REENTRANT
                                     75 ;	genLabel
                                     76 ;	Raw cost for generated ic 0 : (0, 0.000000) count=1.000000
                                     77 ;	-----------------------------------------
                                     78 ;	 function acosf
                                     79 ;	-----------------------------------------
                                     80 ;	Register assignment is optimal.
                                     81 ;	Stack space usage: 0 bytes.
      000000                         82 _acosf:
                                     83 ;	Raw cost for generated ic 1 : (0, 0.000000) count=1.000000
                                     84 ;	../acosf.c: 38: if (x == 1.0) return 0.0;
                                     85 ;	genAssign
                                     86 ;	genCopy
      000000 ADr03r00         [ 4]   87 	lda	(_acosf_PARM_1 + 3)
      000003 8Dr03r00         [ 4]   88 	sta	(___fseq_PARM_1 + 3)
      000006 ADr02r00         [ 4]   89 	lda	(_acosf_PARM_1 + 2)
      000009 8Dr02r00         [ 4]   90 	sta	(___fseq_PARM_1 + 2)
      00000C ADr01r00         [ 4]   91 	lda	(_acosf_PARM_1 + 1)
      00000F 8Dr01r00         [ 4]   92 	sta	(___fseq_PARM_1 + 1)
      000012 ADr00r00         [ 4]   93 	lda	_acosf_PARM_1
      000015 8Dr00r00         [ 4]   94 	sta	___fseq_PARM_1
                                     95 ;	Raw cost for generated ic 31 : (24, 32.000000) count=1.000000
                                     96 ;	genAssign
                                     97 ;	genAssignLit
      000018 A0 00            [ 2]   98 	ldy	#0x00
      00001A 8Cr00r00         [ 4]   99 	sty	___fseq_PARM_2
      00001D 8Cr01r00         [ 4]  100 	sty	(___fseq_PARM_2 + 1)
      000020 A2 80            [ 2]  101 	ldx	#0x80
      000022 8Er02r00         [ 4]  102 	stx	(___fseq_PARM_2 + 2)
      000025 A2 3F            [ 2]  103 	ldx	#0x3f
      000027 8Er03r00         [ 4]  104 	stx	(___fseq_PARM_2 + 3)
                                    105 ;	Raw cost for generated ic 32 : (18, 22.000000) count=1.000000
                                    106 ;	genCall
      00002A 20r00r00         [ 6]  107 	jsr	___fseq
                                    108 ;	assignResultValue
                                    109 ;	Raw cost for generated ic 33 : (3, 6.000000) count=1.000000
                                    110 ;	genIfx
      00002D C9 00            [ 2]  111 	cmp	#0x00
                                    112 ;	genIfxJump : z
      00002F F0 08            [ 4]  113 	beq	00108$
                                    114 ;	Raw cost for generated ic 3 : (7, 7.600000) count=1.000000
                                    115 ;	genRet
      000031 A9 00            [ 2]  116 	lda	#0x00
      000033 AA               [ 2]  117 	tax
      000034 85*00            [ 3]  118 	sta	*___SDCC_m6502_ret2
      000036 85*00            [ 3]  119 	sta	*___SDCC_m6502_ret3
      000038 60               [ 6]  120 	rts
                                    121 ;	Raw cost for generated ic 6 : (10, 13.000000) count=0.750000
                                    122 ;	genLabel
      000039                        123 00108$:
                                    124 ;	Raw cost for generated ic 8 : (0, 0.000000) count=1.000000
                                    125 ;	../acosf.c: 39: else if (x ==-1.0) return PI;
                                    126 ;	genAssign
                                    127 ;	genCopy
      000039 ADr03r00         [ 4]  128 	lda	(_acosf_PARM_1 + 3)
      00003C 8Dr03r00         [ 4]  129 	sta	(___fseq_PARM_1 + 3)
      00003F ADr02r00         [ 4]  130 	lda	(_acosf_PARM_1 + 2)
      000042 8Dr02r00         [ 4]  131 	sta	(___fseq_PARM_1 + 2)
      000045 ADr01r00         [ 4]  132 	lda	(_acosf_PARM_1 + 1)
      000048 8Dr01r00         [ 4]  133 	sta	(___fseq_PARM_1 + 1)
      00004B ADr00r00         [ 4]  134 	lda	_acosf_PARM_1
      00004E 8Dr00r00         [ 4]  135 	sta	___fseq_PARM_1
                                    136 ;	Raw cost for generated ic 34 : (24, 32.000000) count=1.000000
                                    137 ;	genAssign
                                    138 ;	genAssignLit
      000051 A0 00            [ 2]  139 	ldy	#0x00
      000053 8Cr00r00         [ 4]  140 	sty	___fseq_PARM_2
      000056 8Cr01r00         [ 4]  141 	sty	(___fseq_PARM_2 + 1)
      000059 A2 80            [ 2]  142 	ldx	#0x80
      00005B 8Er02r00         [ 4]  143 	stx	(___fseq_PARM_2 + 2)
      00005E A2 BF            [ 2]  144 	ldx	#0xbf
      000060 8Er03r00         [ 4]  145 	stx	(___fseq_PARM_2 + 3)
                                    146 ;	Raw cost for generated ic 35 : (18, 22.000000) count=1.000000
                                    147 ;	genCall
      000063 20r00r00         [ 6]  148 	jsr	___fseq
                                    149 ;	assignResultValue
                                    150 ;	Raw cost for generated ic 36 : (3, 6.000000) count=1.000000
                                    151 ;	genIfx
      000066 C9 00            [ 2]  152 	cmp	#0x00
                                    153 ;	genIfxJump : z
      000068 F0 0D            [ 4]  154 	beq	00105$
                                    155 ;	Raw cost for generated ic 10 : (7, 7.600000) count=1.000000
                                    156 ;	genRet
      00006A A9 DB            [ 2]  157 	lda	#0xdb
      00006C A2 0F            [ 2]  158 	ldx	#0x0f
      00006E A0 49            [ 2]  159 	ldy	#0x49
      000070 84*00            [ 3]  160 	sty	*___SDCC_m6502_ret2
      000072 A0 40            [ 2]  161 	ldy	#0x40
      000074 84*00            [ 3]  162 	sty	*___SDCC_m6502_ret3
      000076 60               [ 6]  163 	rts
                                    164 ;	Raw cost for generated ic 13 : (15, 17.000000) count=0.750000
                                    165 ;	genLabel
      000077                        166 00105$:
                                    167 ;	Raw cost for generated ic 15 : (0, 0.000000) count=1.000000
                                    168 ;	../acosf.c: 40: else if (x == 0.0) return HALF_PI;
                                    169 ;	genIfx
      000077 ADr03r00         [ 4]  170 	lda	(_acosf_PARM_1 + 3)
      00007A 29 7F            [ 2]  171 	and	#0x7F
      00007C 0Dr02r00         [ 4]  172 	ora	(_acosf_PARM_1 + 2)
      00007F 0Dr01r00         [ 4]  173 	ora	(_acosf_PARM_1 + 1)
      000082 0Dr00r00         [ 4]  174 	ora	_acosf_PARM_1
                                    175 ;	genIfxJump : z
      000085 D0 0D            [ 4]  176 	bne	00102$
                                    177 ;	Raw cost for generated ic 16 : (19, 23.600000) count=1.000000
                                    178 ;	genRet
      000087 A9 DB            [ 2]  179 	lda	#0xdb
      000089 A2 0F            [ 2]  180 	ldx	#0x0f
      00008B A0 C9            [ 2]  181 	ldy	#0xc9
      00008D 84*00            [ 3]  182 	sty	*___SDCC_m6502_ret2
      00008F A0 3F            [ 2]  183 	ldy	#0x3f
      000091 84*00            [ 3]  184 	sty	*___SDCC_m6502_ret3
      000093 60               [ 6]  185 	rts
                                    186 ;	Raw cost for generated ic 19 : (15, 17.000000) count=0.750000
                                    187 ;	genLabel
      000094                        188 00102$:
                                    189 ;	Raw cost for generated ic 21 : (0, 0.000000) count=1.000000
                                    190 ;	../acosf.c: 41: else               return asincosf(x, true);
                                    191 ;	genAssign
                                    192 ;	genCopy
      000094 ADr03r00         [ 4]  193 	lda	(_acosf_PARM_1 + 3)
      000097 8Dr03r00         [ 4]  194 	sta	(_asincosf_PARM_1 + 3)
      00009A ADr02r00         [ 4]  195 	lda	(_acosf_PARM_1 + 2)
      00009D 8Dr02r00         [ 4]  196 	sta	(_asincosf_PARM_1 + 2)
      0000A0 ADr01r00         [ 4]  197 	lda	(_acosf_PARM_1 + 1)
      0000A3 8Dr01r00         [ 4]  198 	sta	(_asincosf_PARM_1 + 1)
      0000A6 ADr00r00         [ 4]  199 	lda	_acosf_PARM_1
      0000A9 8Dr00r00         [ 4]  200 	sta	_asincosf_PARM_1
                                    201 ;	Raw cost for generated ic 22 : (24, 32.000000) count=1.000000
                                    202 ;	genAssign
                                    203 ;	genAssignLit
      0000AC A2 01            [ 2]  204 	ldx	#0x01
      0000AE 8Er00r00         [ 4]  205 	stx	_asincosf_PARM_2
                                    206 ;	Raw cost for generated ic 23 : (5, 6.000000) count=1.000000
                                    207 ;	genCall
      0000B1 20r00r00         [ 6]  208 	jsr	_asincosf
                                    209 ;	assignResultValue
      0000B4 85*00            [ 3]  210 	sta	*_acosf_sloc0_1_0
      0000B6 86*01            [ 3]  211 	stx	*(_acosf_sloc0_1_0 + 1)
      0000B8 A5*00            [ 3]  212 	lda	*___SDCC_m6502_ret2
      0000BA 85*02            [ 3]  213 	sta	*(_acosf_sloc0_1_0 + 2)
      0000BC A5*00            [ 3]  214 	lda	*___SDCC_m6502_ret3
      0000BE 85*03            [ 3]  215 	sta	*(_acosf_sloc0_1_0 + 3)
                                    216 ;	Raw cost for generated ic 24 : (15, 24.000000) count=1.000000
                                    217 ;	genRet
      0000C0 85*00            [ 3]  218 	sta	*___SDCC_m6502_ret3
      0000C2 A5*02            [ 3]  219 	lda	*(_acosf_sloc0_1_0 + 2)
      0000C4 85*00            [ 3]  220 	sta	*___SDCC_m6502_ret2
      0000C6 A5*00            [ 3]  221 	lda	*_acosf_sloc0_1_0
                                    222 ;	Raw cost for generated ic 25 : (8, 12.000000) count=1.000000
                                    223 ;	genLabel
                                    224 ;	Raw cost for generated ic 29 : (0, 0.000000) count=1.000000
                                    225 ;	../acosf.c: 42: }
                                    226 ;	genEndFunction
      0000C8 60               [ 6]  227 	rts
                                    228 ;	Raw cost for generated ic 30 : (1, 6.000000) count=1.000000
                                    229 	.area CODE
                                    230 	.area RODATA
                                    231 	.area XINIT
                                    232 	.area CABS    (ABS)
