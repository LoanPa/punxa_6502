                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler
                                      3 ; Version 4.5.10 #15691 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module isalpha
                                      6 	
                                      7 	.optsdcc -mmos6502
                                      8 
                                      9 ;--------------------------------------------------------
                                     10 ;  Ordering of segments for the linker.
                                     11 ;--------------------------------------------------------
                                     12 	.area ZP      (PAG)
                                     13 	.area OSEG    (PAG, OVR)
                                     14 	.area _CODE
                                     15 	.area GSINIT
                                     16 	.area GSFINAL
                                     17 	.area CODE
                                     18 	.area RODATA
                                     19 	.area XINIT
                                     20 	.area _DATA
                                     21 	.area DATA
                                     22 	.area BSS
                                     23 ;--------------------------------------------------------
                                     24 ; Public variables in this module
                                     25 ;--------------------------------------------------------
                                     26 	.globl _isalpha
                                     27 ;--------------------------------------------------------
                                     28 ; ZP ram data
                                     29 ;--------------------------------------------------------
                                     30 	.area ZP      (PAG)
                                     31 ;--------------------------------------------------------
                                     32 ; overlayable items in ram
                                     33 ;--------------------------------------------------------
                                     34 ;--------------------------------------------------------
                                     35 ; uninitialized external ram data
                                     36 ;--------------------------------------------------------
                                     37 	.area BSS
                                     38 ;--------------------------------------------------------
                                     39 ; absolute external ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area DABS    (ABS)
                                     42 ;--------------------------------------------------------
                                     43 ; initialized external ram data
                                     44 ;--------------------------------------------------------
                                     45 	.area DATA
                                     46 ;--------------------------------------------------------
                                     47 ; global & static initialisations
                                     48 ;--------------------------------------------------------
                                     49 	.area _CODE
                                     50 	.area GSINIT
                                     51 	.area GSFINAL
                                     52 	.area GSINIT
                                     53 ;--------------------------------------------------------
                                     54 ; Home
                                     55 ;--------------------------------------------------------
                                     56 	.area _CODE
                                     57 	.area _CODE
                                     58 ;--------------------------------------------------------
                                     59 ; code
                                     60 ;--------------------------------------------------------
                                     61 	.area CODE
                                     62 ;------------------------------------------------------------
                                     63 ;Allocation info for local variables in function 'isalpha'
                                     64 ;------------------------------------------------------------
                                     65 ;c             Allocated to registers a x 
                                     66 ;__200000004   Allocated to registers 
                                     67 ;__200000001   Allocated to registers 
                                     68 ;__200000002   Allocated to registers 
                                     69 ;c             Allocated to registers 
                                     70 ;__200000005   Allocated to registers 
                                     71 ;c             Allocated to registers 
                                     72 ;------------------------------------------------------------
                                     73 ;	../isalpha.c: 37: int isalpha (int c)
                                     74 ;	genLabel
                                     75 ;	Raw cost for generated ic 0 : (0, 0.000000) count=1.000000
                                     76 ;	-----------------------------------------
                                     77 ;	 function isalpha
                                     78 ;	-----------------------------------------
                                     79 ;	Register assignment is optimal.
                                     80 ;	Stack space usage: 0 bytes.
      000000                         81 _isalpha:
                                     82 ;	Raw cost for generated ic 1 : (0, 0.000000) count=1.000000
                                     83 ;	genReceive
                                     84 ;	Raw cost for generated ic 2 : (0, 0.000000) count=1.000000
                                     85 ;	./../../include/ctype.h: 80: return ((unsigned char)c >= 'A' && (unsigned char)c <= 'Z');
                                     86 ;	genCast
                                     87 ;	genCopy
                                     88 ;	Raw cost for generated ic 5 : (0, 0.000000) count=1.000000
                                     89 ;	genCmp
      000000 C9 41            [ 2]   90 	cmp	#0x41
      000002 90 06            [ 4]   91 	bcc	00110$
                                     92 ;	Raw cost for generated ic 6 : (7, 7.600000) count=1.000000
                                     93 ;	skipping generated iCode
                                     94 ;	Raw cost for generated ic 8 : (0, 0.000000) count=1.000000
                                     95 ;	genCmp
      000004 C9 5A            [ 2]   96 	cmp	#0x5a
      000006 F0 11            [ 4]   97 	beq	00106$
      000008 90 0F            [ 4]   98 	bcc	00106$
                                     99 ;	Raw cost for generated ic 10 : (9, 10.200000) count=0.750000
                                    100 ;	skipping generated iCode
                                    101 ;	Raw cost for generated ic 12 : (0, 0.000000) count=0.750000
                                    102 ;	genLabel
      00000A                        103 00110$:
                                    104 ;	Raw cost for generated ic 18 : (0, 0.000000) count=0.812500
                                    105 ;	./../../include/ctype.h: 71: return ((unsigned char)c >= 'a' && (unsigned char)c <= 'z');
                                    106 ;	genCmp
      00000A C9 61            [ 2]  107 	cmp	#0x61
      00000C 90 06            [ 4]  108 	bcc	00113$
                                    109 ;	Raw cost for generated ic 27 : (7, 7.600000) count=0.812500
                                    110 ;	skipping generated iCode
                                    111 ;	Raw cost for generated ic 29 : (0, 0.000000) count=0.812500
                                    112 ;	genCmp
      00000E C9 7A            [ 2]  113 	cmp	#0x7a
      000010 F0 07            [ 4]  114 	beq	00106$
      000012 90 05            [ 4]  115 	bcc	00106$
                                    116 ;	Raw cost for generated ic 31 : (9, 10.200000) count=0.609375
                                    117 ;	skipping generated iCode
                                    118 ;	Raw cost for generated ic 33 : (0, 0.000000) count=0.609375
                                    119 ;	genLabel
      000014                        120 00113$:
                                    121 ;	Raw cost for generated ic 39 : (0, 0.000000) count=0.660156
                                    122 ;	../isalpha.c: 39: return (isupper (c) || islower (c));
                                    123 ;	genAssign
                                    124 ;	genCopy
      000014 A9 00            [ 2]  125 	lda	#0x00
                                    126 ;	Raw cost for generated ic 46 : (2, 2.000000) count=0.660156
                                    127 ;	genGoto
      000016 4Cr1Br00         [ 3]  128 	jmp	00107$
                                    129 ;	Raw cost for generated ic 47 : (3, 3.000000) count=0.660156
                                    130 ;	genLabel
      000019                        131 00106$:
                                    132 ;	Raw cost for generated ic 48 : (0, 0.000000) count=0.339844
                                    133 ;	genAssign
                                    134 ;	genCopy
      000019 A9 01            [ 2]  135 	lda	#0x01
                                    136 ;	Raw cost for generated ic 49 : (2, 2.000000) count=0.339844
                                    137 ;	genLabel
      00001B                        138 00107$:
                                    139 ;	Raw cost for generated ic 50 : (0, 0.000000) count=1.000000
                                    140 ;	genCast
                                    141 ;	genCopy
      00001B A2 00            [ 2]  142 	ldx	#0x00
                                    143 ;	Raw cost for generated ic 51 : (2, 2.000000) count=1.000000
                                    144 ;	genRet
                                    145 ;	Raw cost for generated ic 52 : (0, 0.000000) count=1.000000
                                    146 ;	genLabel
                                    147 ;	Raw cost for generated ic 53 : (0, 0.000000) count=1.000000
                                    148 ;	../isalpha.c: 40: }
                                    149 ;	genEndFunction
      00001D 60               [ 6]  150 	rts
                                    151 ;	Raw cost for generated ic 54 : (1, 6.000000) count=1.000000
                                    152 	.area CODE
                                    153 	.area RODATA
                                    154 	.area XINIT
                                    155 	.area CABS    (ABS)
