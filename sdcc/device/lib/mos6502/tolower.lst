                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler
                                      3 ; Version 4.5.10 #15691 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module tolower
                                      6 	
                                      7 	.optsdcc -mmos6502
                                      8 
                                      9 ;--------------------------------------------------------
                                     10 ;  Ordering of segments for the linker.
                                     11 ;--------------------------------------------------------
                                     12 	.area ZP      (PAG)
                                     13 	.area OSEG    (PAG, OVR)
                                     14 	.area _CODE
                                     15 	.area GSINIT
                                     16 	.area GSFINAL
                                     17 	.area CODE
                                     18 	.area RODATA
                                     19 	.area XINIT
                                     20 	.area _DATA
                                     21 	.area DATA
                                     22 	.area BSS
                                     23 ;--------------------------------------------------------
                                     24 ; Public variables in this module
                                     25 ;--------------------------------------------------------
                                     26 	.globl _tolower
                                     27 ;--------------------------------------------------------
                                     28 ; ZP ram data
                                     29 ;--------------------------------------------------------
                                     30 	.area ZP      (PAG)
                                     31 ;--------------------------------------------------------
                                     32 ; overlayable items in ram
                                     33 ;--------------------------------------------------------
                                     34 ;--------------------------------------------------------
                                     35 ; uninitialized external ram data
                                     36 ;--------------------------------------------------------
                                     37 	.area BSS
                                     38 ;--------------------------------------------------------
                                     39 ; absolute external ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area DABS    (ABS)
                                     42 ;--------------------------------------------------------
                                     43 ; initialized external ram data
                                     44 ;--------------------------------------------------------
                                     45 	.area DATA
                                     46 ;--------------------------------------------------------
                                     47 ; global & static initialisations
                                     48 ;--------------------------------------------------------
                                     49 	.area _CODE
                                     50 	.area GSINIT
                                     51 	.area GSFINAL
                                     52 	.area GSINIT
                                     53 ;--------------------------------------------------------
                                     54 ; Home
                                     55 ;--------------------------------------------------------
                                     56 	.area _CODE
                                     57 	.area _CODE
                                     58 ;--------------------------------------------------------
                                     59 ; code
                                     60 ;--------------------------------------------------------
                                     61 	.area CODE
                                     62 ;------------------------------------------------------------
                                     63 ;Allocation info for local variables in function 'tolower'
                                     64 ;------------------------------------------------------------
                                     65 ;c             Allocated to registers a x 
                                     66 ;__200000001   Allocated to registers 
                                     67 ;__200000002   Allocated to registers 
                                     68 ;c             Allocated to registers 
                                     69 ;------------------------------------------------------------
                                     70 ;	../tolower.c: 33: int tolower (int c)
                                     71 ;	genLabel
                                     72 ;	Raw cost for generated ic 0 : (0, 0.000000) count=1.000000
                                     73 ;	-----------------------------------------
                                     74 ;	 function tolower
                                     75 ;	-----------------------------------------
                                     76 ;	Register assignment is optimal.
                                     77 ;	Stack space usage: 0 bytes.
      000000                         78 _tolower:
                                     79 ;	Raw cost for generated ic 1 : (0, 0.000000) count=1.000000
                                     80 ;	genReceive
                                     81 ;	Raw cost for generated ic 2 : (0, 0.000000) count=1.000000
                                     82 ;	./../../include/ctype.h: 80: return ((unsigned char)c >= 'A' && (unsigned char)c <= 'Z');
                                     83 ;	genCast
                                     84 ;	genCopy
      000000 A8               [ 2]   85 	tay
                                     86 ;	Raw cost for generated ic 5 : (1, 2.000000) count=1.000000
                                     87 ;	genCmp
      000001 C0 41            [ 2]   88 	cpy	#0x41
      000003 90 0E            [ 4]   89 	bcc	00104$
                                     90 ;	Raw cost for generated ic 6 : (7, 7.600000) count=1.000000
                                     91 ;	skipping generated iCode
                                     92 ;	Raw cost for generated ic 8 : (0, 0.000000) count=1.000000
                                     93 ;	genCmp
      000005 C0 5A            [ 2]   94 	cpy	#0x5a
      000007 F0 03            [ 4]   95 	beq	00121$
      000009 90 01            [ 4]   96 	bcc	00121$
      00000B 60               [ 6]   97 	rts
      00000C                         98 00121$:
                                     99 ;	Raw cost for generated ic 10 : (9, 10.200000) count=0.750000
                                    100 ;	skipping generated iCode
                                    101 ;	Raw cost for generated ic 12 : (0, 0.000000) count=0.750000
                                    102 ;	../tolower.c: 35: return (isupper (c) ? c + ('a' - 'A') : c);
                                    103 ;	genPlus
                                    104 ;	  genPlusInc
      00000C 18               [ 2]  105 	clc
      00000D 69 20            [ 2]  106 	adc	#0x20
      00000F 90 02            [ 4]  107 	bcc	00105$
      000011 E8               [ 2]  108 	inx
                                    109 ;	Raw cost for generated ic 24 : (6, 8.600000) count=0.562500
                                    110 ;	genGoto
      000012 60               [ 6]  111 	rts
                                    112 ;	Raw cost for generated ic 26 : (3, 3.000000) count=0.562500
                                    113 ;	genLabel
      000013                        114 00104$:
                                    115 ;	Raw cost for generated ic 27 : (0, 0.000000) count=0.437500
                                    116 ;	genAssign
                                    117 ;	genCopy
                                    118 ;	Raw cost for generated ic 28 : (0, 0.000000) count=0.437500
                                    119 ;	genLabel
      000013                        120 00105$:
                                    121 ;	Raw cost for generated ic 29 : (0, 0.000000) count=1.000000
                                    122 ;	genRet
                                    123 ;	Raw cost for generated ic 30 : (0, 0.000000) count=1.000000
                                    124 ;	genLabel
                                    125 ;	Raw cost for generated ic 31 : (0, 0.000000) count=1.000000
                                    126 ;	../tolower.c: 36: }
                                    127 ;	genEndFunction
      000013 60               [ 6]  128 	rts
                                    129 ;	Raw cost for generated ic 32 : (1, 6.000000) count=1.000000
                                    130 	.area CODE
                                    131 	.area RODATA
                                    132 	.area XINIT
                                    133 	.area CABS    (ABS)
