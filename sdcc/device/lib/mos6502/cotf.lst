                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler
                                      3 ; Version 4.5.10 #15691 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module cotf
                                      6 	
                                      7 	.optsdcc -mmos6502
                                      8 
                                      9 ;--------------------------------------------------------
                                     10 ;  Ordering of segments for the linker.
                                     11 ;--------------------------------------------------------
                                     12 	.area ZP      (PAG)
                                     13 	.area OSEG    (PAG, OVR)
                                     14 	.area _CODE
                                     15 	.area GSINIT
                                     16 	.area GSFINAL
                                     17 	.area CODE
                                     18 	.area RODATA
                                     19 	.area XINIT
                                     20 	.area _DATA
                                     21 	.area DATA
                                     22 	.area BSS
                                     23 ;--------------------------------------------------------
                                     24 ; Public variables in this module
                                     25 ;--------------------------------------------------------
                                     26 	.globl _tancotf
                                     27 	.globl _fabsf
                                     28 	.globl _cotf_PARM_1
                                     29 	.globl _cotf
                                     30 ;--------------------------------------------------------
                                     31 ; ZP ram data
                                     32 ;--------------------------------------------------------
                                     33 	.area ZP      (PAG)
      000000                         34 _cotf_sloc0_1_0:
      000000                         35 	.ds 4
                                     36 ;--------------------------------------------------------
                                     37 ; overlayable items in ram
                                     38 ;--------------------------------------------------------
                                     39 ;--------------------------------------------------------
                                     40 ; uninitialized external ram data
                                     41 ;--------------------------------------------------------
                                     42 	.area BSS
      000000                         43 _cotf_PARM_1:
      000000                         44 	.ds 4
                                     45 ;--------------------------------------------------------
                                     46 ; absolute external ram data
                                     47 ;--------------------------------------------------------
                                     48 	.area DABS    (ABS)
                                     49 ;--------------------------------------------------------
                                     50 ; initialized external ram data
                                     51 ;--------------------------------------------------------
                                     52 	.area DATA
                                     53 ;--------------------------------------------------------
                                     54 ; global & static initialisations
                                     55 ;--------------------------------------------------------
                                     56 	.area _CODE
                                     57 	.area GSINIT
                                     58 	.area GSFINAL
                                     59 	.area GSINIT
                                     60 ;--------------------------------------------------------
                                     61 ; Home
                                     62 ;--------------------------------------------------------
                                     63 	.area _CODE
                                     64 	.area _CODE
                                     65 ;--------------------------------------------------------
                                     66 ; code
                                     67 ;--------------------------------------------------------
                                     68 	.area CODE
                                     69 ;------------------------------------------------------------
                                     70 ;Allocation info for local variables in function 'cotf'
                                     71 ;------------------------------------------------------------
                                     72 ;sloc0         Allocated with name '_cotf_sloc0_1_0'
                                     73 ;x             Allocated with name '_cotf_PARM_1'
                                     74 ;y             Allocated with name '_cotf_y_10000_27'
                                     75 ;------------------------------------------------------------
                                     76 ;	../cotf.c: 37: float cotf(float x) _FLOAT_FUNC_REENTRANT
                                     77 ;	genLabel
                                     78 ;	Raw cost for generated ic 0 : (0, 0.000000) count=1.000000
                                     79 ;	-----------------------------------------
                                     80 ;	 function cotf
                                     81 ;	-----------------------------------------
                                     82 ;	Register assignment is optimal.
                                     83 ;	Stack space usage: 0 bytes.
      000000                         84 _cotf:
                                     85 ;	Raw cost for generated ic 1 : (0, 0.000000) count=1.000000
                                     86 ;	../cotf.c: 41: y=fabsf(x);
                                     87 ;	genAssign
                                     88 ;	genCopy
      000000 ADr03r00         [ 4]   89 	lda	(_cotf_PARM_1 + 3)
      000003 8Dr03r00         [ 4]   90 	sta	(_fabsf_PARM_1 + 3)
      000006 ADr02r00         [ 4]   91 	lda	(_cotf_PARM_1 + 2)
      000009 8Dr02r00         [ 4]   92 	sta	(_fabsf_PARM_1 + 2)
      00000C ADr01r00         [ 4]   93 	lda	(_cotf_PARM_1 + 1)
      00000F 8Dr01r00         [ 4]   94 	sta	(_fabsf_PARM_1 + 1)
      000012 ADr00r00         [ 4]   95 	lda	_cotf_PARM_1
      000015 8Dr00r00         [ 4]   96 	sta	_fabsf_PARM_1
                                     97 ;	Raw cost for generated ic 2 : (24, 32.000000) count=1.000000
                                     98 ;	genCall
      000018 20r00r00         [ 6]   99 	jsr	_fabsf
                                    100 ;	assignResultValue
      00001B 8Dr00r00         [ 4]  101 	sta	___fslt_PARM_1
      00001E 8Er01r00         [ 4]  102 	stx	(___fslt_PARM_1 + 1)
      000021 A5*00            [ 3]  103 	lda	*___SDCC_m6502_ret2
      000023 8Dr02r00         [ 4]  104 	sta	(___fslt_PARM_1 + 2)
      000026 A5*00            [ 3]  105 	lda	*___SDCC_m6502_ret3
      000028 8Dr03r00         [ 4]  106 	sta	(___fslt_PARM_1 + 3)
                                    107 ;	Raw cost for generated ic 3 : (19, 28.000000) count=1.000000
                                    108 ;	../cotf.c: 42: if (y<1.0E-30) //This one requires more thinking...
                                    109 ;	genAssign
                                    110 ;	genAssignLit
      00002B A2 60            [ 2]  111 	ldx	#0x60
      00002D 8Er00r00         [ 4]  112 	stx	___fslt_PARM_2
      000030 A2 42            [ 2]  113 	ldx	#0x42
      000032 8Er01r00         [ 4]  114 	stx	(___fslt_PARM_2 + 1)
      000035 A2 A2            [ 2]  115 	ldx	#0xa2
      000037 8Er02r00         [ 4]  116 	stx	(___fslt_PARM_2 + 2)
      00003A A2 0D            [ 2]  117 	ldx	#0x0d
      00003C 8Er03r00         [ 4]  118 	stx	(___fslt_PARM_2 + 3)
                                    119 ;	Raw cost for generated ic 28 : (20, 24.000000) count=1.000000
                                    120 ;	genCall
      00003F 20r00r00         [ 6]  121 	jsr	___fslt
                                    122 ;	assignResultValue
                                    123 ;	Raw cost for generated ic 29 : (3, 6.000000) count=1.000000
                                    124 ;	genIfx
      000042 C9 00            [ 2]  125 	cmp	#0x00
                                    126 ;	genIfxJump : z
      000044 F0 49            [ 4]  127 	beq	00105$
                                    128 ;	Raw cost for generated ic 6 : (7, 7.600000) count=1.000000
                                    129 ;	../cotf.c: 44: errno = ERANGE;
                                    130 ;	genAssign
                                    131 ;	genAssignLit
      000046 A2 22            [ 2]  132 	ldx	#0x22
      000048 8Er00r00         [ 4]  133 	stx	_errno
      00004B A0 00            [ 2]  134 	ldy	#0x00
      00004D 8Cr01r00         [ 4]  135 	sty	(_errno + 1)
                                    136 ;	Raw cost for generated ic 10 : (10, 12.000000) count=0.750000
                                    137 ;	../cotf.c: 45: if (x<0.0)
                                    138 ;	genAssign
                                    139 ;	genCopy
      000050 ADr03r00         [ 4]  140 	lda	(_cotf_PARM_1 + 3)
      000053 8Dr03r00         [ 4]  141 	sta	(___fslt_PARM_1 + 3)
      000056 ADr02r00         [ 4]  142 	lda	(_cotf_PARM_1 + 2)
      000059 8Dr02r00         [ 4]  143 	sta	(___fslt_PARM_1 + 2)
      00005C ADr01r00         [ 4]  144 	lda	(_cotf_PARM_1 + 1)
      00005F 8Dr01r00         [ 4]  145 	sta	(___fslt_PARM_1 + 1)
      000062 ADr00r00         [ 4]  146 	lda	_cotf_PARM_1
      000065 8Dr00r00         [ 4]  147 	sta	___fslt_PARM_1
                                    148 ;	Raw cost for generated ic 30 : (24, 32.000000) count=0.750000
                                    149 ;	genAssign
                                    150 ;	genAssignLit
      000068 8Cr00r00         [ 4]  151 	sty	___fslt_PARM_2
      00006B 8Cr01r00         [ 4]  152 	sty	(___fslt_PARM_2 + 1)
      00006E 8Cr02r00         [ 4]  153 	sty	(___fslt_PARM_2 + 2)
      000071 8Cr03r00         [ 4]  154 	sty	(___fslt_PARM_2 + 3)
                                    155 ;	Raw cost for generated ic 31 : (12, 16.000000) count=0.750000
                                    156 ;	genCall
      000074 20r00r00         [ 6]  157 	jsr	___fslt
                                    158 ;	assignResultValue
                                    159 ;	Raw cost for generated ic 32 : (3, 6.000000) count=0.750000
                                    160 ;	genIfx
      000077 C9 00            [ 2]  161 	cmp	#0x00
                                    162 ;	genIfxJump : z
      000079 F0 0A            [ 4]  163 	beq	00102$
                                    164 ;	Raw cost for generated ic 12 : (7, 7.600000) count=0.750000
                                    165 ;	../cotf.c: 46: return -HUGE_VALF;
                                    166 ;	genRet
      00007B A9 FF            [ 2]  167 	lda	#0xff
      00007D AA               [ 2]  168 	tax
      00007E A0 7F            [ 2]  169 	ldy	#0x7f
      000080 84*00            [ 3]  170 	sty	*___SDCC_m6502_ret2
      000082 85*00            [ 3]  171 	sta	*___SDCC_m6502_ret3
      000084 60               [ 6]  172 	rts
                                    173 ;	Raw cost for generated ic 15 : (12, 15.000000) count=0.562500
                                    174 ;	genLabel
      000085                        175 00102$:
                                    176 ;	Raw cost for generated ic 17 : (0, 0.000000) count=0.750000
                                    177 ;	../cotf.c: 48: return +HUGE_VALF;
                                    178 ;	genRet
      000085 A9 FF            [ 2]  179 	lda	#0xff
      000087 AA               [ 2]  180 	tax
      000088 A0 7F            [ 2]  181 	ldy	#0x7f
      00008A 84*00            [ 3]  182 	sty	*___SDCC_m6502_ret2
      00008C 84*00            [ 3]  183 	sty	*___SDCC_m6502_ret3
      00008E 60               [ 6]  184 	rts
                                    185 ;	Raw cost for generated ic 18 : (12, 15.000000) count=0.750000
                                    186 ;	genLabel
      00008F                        187 00105$:
                                    188 ;	Raw cost for generated ic 20 : (0, 0.000000) count=1.000000
                                    189 ;	../cotf.c: 50: return tancotf(x, 1);
                                    190 ;	genAssign
                                    191 ;	genCopy
      00008F ADr03r00         [ 4]  192 	lda	(_cotf_PARM_1 + 3)
      000092 8Dr03r00         [ 4]  193 	sta	(_tancotf_PARM_1 + 3)
      000095 ADr02r00         [ 4]  194 	lda	(_cotf_PARM_1 + 2)
      000098 8Dr02r00         [ 4]  195 	sta	(_tancotf_PARM_1 + 2)
      00009B ADr01r00         [ 4]  196 	lda	(_cotf_PARM_1 + 1)
      00009E 8Dr01r00         [ 4]  197 	sta	(_tancotf_PARM_1 + 1)
      0000A1 ADr00r00         [ 4]  198 	lda	_cotf_PARM_1
      0000A4 8Dr00r00         [ 4]  199 	sta	_tancotf_PARM_1
                                    200 ;	Raw cost for generated ic 21 : (24, 32.000000) count=1.000000
                                    201 ;	genAssign
                                    202 ;	genAssignLit
      0000A7 A2 01            [ 2]  203 	ldx	#0x01
      0000A9 8Er00r00         [ 4]  204 	stx	_tancotf_PARM_2
                                    205 ;	Raw cost for generated ic 22 : (5, 6.000000) count=1.000000
                                    206 ;	genCall
      0000AC 20r00r00         [ 6]  207 	jsr	_tancotf
                                    208 ;	assignResultValue
      0000AF 85*00            [ 3]  209 	sta	*_cotf_sloc0_1_0
      0000B1 86*01            [ 3]  210 	stx	*(_cotf_sloc0_1_0 + 1)
      0000B3 A5*00            [ 3]  211 	lda	*___SDCC_m6502_ret2
      0000B5 85*02            [ 3]  212 	sta	*(_cotf_sloc0_1_0 + 2)
      0000B7 A5*00            [ 3]  213 	lda	*___SDCC_m6502_ret3
      0000B9 85*03            [ 3]  214 	sta	*(_cotf_sloc0_1_0 + 3)
                                    215 ;	Raw cost for generated ic 23 : (15, 24.000000) count=1.000000
                                    216 ;	genRet
      0000BB 85*00            [ 3]  217 	sta	*___SDCC_m6502_ret3
      0000BD A5*02            [ 3]  218 	lda	*(_cotf_sloc0_1_0 + 2)
      0000BF 85*00            [ 3]  219 	sta	*___SDCC_m6502_ret2
      0000C1 A5*00            [ 3]  220 	lda	*_cotf_sloc0_1_0
                                    221 ;	Raw cost for generated ic 24 : (8, 12.000000) count=1.000000
                                    222 ;	genLabel
                                    223 ;	Raw cost for generated ic 25 : (0, 0.000000) count=1.000000
                                    224 ;	../cotf.c: 51: }
                                    225 ;	genEndFunction
      0000C3 60               [ 6]  226 	rts
                                    227 ;	Raw cost for generated ic 26 : (1, 6.000000) count=1.000000
                                    228 	.area CODE
                                    229 	.area RODATA
                                    230 	.area XINIT
                                    231 	.area CABS    (ABS)
