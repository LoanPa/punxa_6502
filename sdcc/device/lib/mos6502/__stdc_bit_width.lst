                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler
                                      3 ; Version 4.5.10 #15691 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module __stdc_bit_width
                                      6 	
                                      7 	.optsdcc -mmos6502
                                      8 
                                      9 ;--------------------------------------------------------
                                     10 ;  Ordering of segments for the linker.
                                     11 ;--------------------------------------------------------
                                     12 	.area ZP      (PAG)
                                     13 	.area OSEG    (PAG, OVR)
                                     14 	.area _CODE
                                     15 	.area GSINIT
                                     16 	.area GSFINAL
                                     17 	.area CODE
                                     18 	.area RODATA
                                     19 	.area XINIT
                                     20 	.area _DATA
                                     21 	.area DATA
                                     22 	.area BSS
                                     23 ;--------------------------------------------------------
                                     24 ; Public variables in this module
                                     25 ;--------------------------------------------------------
                                     26 	.globl ___stdc_bit_width_PARM_1
                                     27 	.globl ___stdc_bit_width
                                     28 ;--------------------------------------------------------
                                     29 ; ZP ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area ZP      (PAG)
      000000                         32 ___stdc_bit_width_sloc0_1_0:
      000000                         33 	.ds 8
                                     34 ;--------------------------------------------------------
                                     35 ; overlayable items in ram
                                     36 ;--------------------------------------------------------
                                     37 ;--------------------------------------------------------
                                     38 ; uninitialized external ram data
                                     39 ;--------------------------------------------------------
                                     40 	.area BSS
      000000                         41 ___stdc_bit_width_PARM_1:
      000000                         42 	.ds 8
                                     43 ;--------------------------------------------------------
                                     44 ; absolute external ram data
                                     45 ;--------------------------------------------------------
                                     46 	.area DABS    (ABS)
                                     47 ;--------------------------------------------------------
                                     48 ; initialized external ram data
                                     49 ;--------------------------------------------------------
                                     50 	.area DATA
                                     51 ;--------------------------------------------------------
                                     52 ; global & static initialisations
                                     53 ;--------------------------------------------------------
                                     54 	.area _CODE
                                     55 	.area GSINIT
                                     56 	.area GSFINAL
                                     57 	.area GSINIT
                                     58 ;--------------------------------------------------------
                                     59 ; Home
                                     60 ;--------------------------------------------------------
                                     61 	.area _CODE
                                     62 	.area _CODE
                                     63 ;--------------------------------------------------------
                                     64 ; code
                                     65 ;--------------------------------------------------------
                                     66 	.area CODE
                                     67 ;------------------------------------------------------------
                                     68 ;Allocation info for local variables in function '__stdc_bit_width'
                                     69 ;------------------------------------------------------------
                                     70 ;sloc0         Allocated with name '___stdc_bit_width_sloc0_1_0'
                                     71 ;value         Allocated with name '___stdc_bit_width_PARM_1'
                                     72 ;width         Allocated to registers x 
                                     73 ;i             Allocated to registers 
                                     74 ;------------------------------------------------------------
                                     75 ;	../__stdc_bit_width.c: 37: unsigned _BitInt(8) __stdc_bit_width(unsigned long long value)
                                     76 ;	genLabel
                                     77 ;	Raw cost for generated ic 0 : (0, 0.000000) count=1.000000
                                     78 ;	-----------------------------------------
                                     79 ;	 function __stdc_bit_width
                                     80 ;	-----------------------------------------
                                     81 ;	Register assignment is optimal.
                                     82 ;	Stack space usage: 0 bytes.
      000000                         83 ___stdc_bit_width:
                                     84 ;	Raw cost for generated ic 1 : (0, 0.000000) count=1.000000
                                     85 ;	../__stdc_bit_width.c: 39: int_fast8_t width = 0;
                                     86 ;	genAssign
                                     87 ;	genCopy
      000000 A2 00            [ 2]   88 	ldx	#0x00
                                     89 ;	Raw cost for generated ic 2 : (2, 2.000000) count=1.000000
                                     90 ;	../__stdc_bit_width.c: 40: for(uint_fast8_t i = 0; i < ULLONG_WIDTH; i++)
                                     91 ;	genAssign
                                     92 ;	genCopy
      000002 A0 00            [ 2]   93 	ldy	#0x00
                                     94 ;	Raw cost for generated ic 29 : (2, 2.000000) count=1.000000
                                     95 ;	genLabel
      000004                         96 00105$:
                                     97 ;	Raw cost for generated ic 4 : (0, 0.000000) count=3.999993
                                     98 ;	genCmp
      000004 C0 40            [ 2]   99 	cpy	#0x40
      000006 90 03            [ 4]  100 	bcc	00128$
      000008 4Cr90r00         [ 3]  101 	jmp	00103$
      00000B                        102 00128$:
                                    103 ;	Raw cost for generated ic 5 : (7, 7.600000) count=3.999993
                                    104 ;	skipping generated iCode
                                    105 ;	Raw cost for generated ic 6 : (0, 0.000000) count=3.999993
                                    106 ;	../__stdc_bit_width.c: 41: if(value & (1ull << i))
                                    107 ;	genCast
                                    108 ;	genCopy
      00000B 8Cr00r00         [ 4]  109 	sty	__slulonglong_PARM_2
                                    110 ;	Raw cost for generated ic 35 : (3, 4.000000) count=2.999995
                                    111 ;	genAssign
                                    112 ;	genAssignLit
      00000E A9 01            [ 2]  113 	lda	#0x01
      000010 8Dr00r00         [ 4]  114 	sta	__slulonglong_PARM_1
      000013 A9 00            [ 2]  115 	lda	#0x00
      000015 8Dr01r00         [ 4]  116 	sta	(__slulonglong_PARM_1 + 1)
      000018 8Dr02r00         [ 4]  117 	sta	(__slulonglong_PARM_1 + 2)
      00001B 8Dr03r00         [ 4]  118 	sta	(__slulonglong_PARM_1 + 3)
      00001E 8Dr04r00         [ 4]  119 	sta	(__slulonglong_PARM_1 + 4)
      000021 8Dr05r00         [ 4]  120 	sta	(__slulonglong_PARM_1 + 5)
      000024 8Dr06r00         [ 4]  121 	sta	(__slulonglong_PARM_1 + 6)
      000027 8Dr07r00         [ 4]  122 	sta	(__slulonglong_PARM_1 + 7)
                                    123 ;	Raw cost for generated ic 36 : (28, 36.000000) count=2.999995
                                    124 ;	genCall
      00002A 8A               [ 2]  125 	txa
      00002B 48               [ 3]  126 	pha
      00002C 98               [ 2]  127 	tya
      00002D 48               [ 3]  128 	pha
      00002E 20r00r00         [ 6]  129 	jsr	__slulonglong
                                    130 ;	assignResultValue
      000031 85*00            [ 3]  131 	sta	*___stdc_bit_width_sloc0_1_0
      000033 86*01            [ 3]  132 	stx	*(___stdc_bit_width_sloc0_1_0 + 1)
      000035 A5*00            [ 3]  133 	lda	*___SDCC_m6502_ret2
      000037 85*02            [ 3]  134 	sta	*(___stdc_bit_width_sloc0_1_0 + 2)
      000039 A5*00            [ 3]  135 	lda	*___SDCC_m6502_ret3
      00003B 85*03            [ 3]  136 	sta	*(___stdc_bit_width_sloc0_1_0 + 3)
      00003D A5*00            [ 3]  137 	lda	*___SDCC_m6502_ret4
      00003F 85*04            [ 3]  138 	sta	*(___stdc_bit_width_sloc0_1_0 + 4)
      000041 A5*00            [ 3]  139 	lda	*___SDCC_m6502_ret5
      000043 85*05            [ 3]  140 	sta	*(___stdc_bit_width_sloc0_1_0 + 5)
      000045 A5*00            [ 3]  141 	lda	*___SDCC_m6502_ret6
      000047 85*06            [ 3]  142 	sta	*(___stdc_bit_width_sloc0_1_0 + 6)
      000049 A5*00            [ 3]  143 	lda	*___SDCC_m6502_ret7
      00004B 85*07            [ 3]  144 	sta	*(___stdc_bit_width_sloc0_1_0 + 7)
      00004D 68               [ 4]  145 	pla
      00004E A8               [ 2]  146 	tay
      00004F 68               [ 4]  147 	pla
      000050 AA               [ 2]  148 	tax
                                    149 ;	Raw cost for generated ic 38 : (42, 74.000000) count=2.999995
                                    150 ;	genAnd
      000051 ADr00r00         [ 4]  151 	lda	___stdc_bit_width_PARM_1
      000054 25*00            [ 3]  152 	and	*___stdc_bit_width_sloc0_1_0
      000056 D0 2F            [ 4]  153 	bne	00129$
      000058 ADr01r00         [ 4]  154 	lda	(___stdc_bit_width_PARM_1 + 1)
      00005B 25*01            [ 3]  155 	and	*(___stdc_bit_width_sloc0_1_0 + 1)
      00005D D0 28            [ 4]  156 	bne	00129$
      00005F ADr02r00         [ 4]  157 	lda	(___stdc_bit_width_PARM_1 + 2)
      000062 25*02            [ 3]  158 	and	*(___stdc_bit_width_sloc0_1_0 + 2)
      000064 D0 21            [ 4]  159 	bne	00129$
      000066 ADr03r00         [ 4]  160 	lda	(___stdc_bit_width_PARM_1 + 3)
      000069 25*03            [ 3]  161 	and	*(___stdc_bit_width_sloc0_1_0 + 3)
      00006B D0 1A            [ 4]  162 	bne	00129$
      00006D ADr04r00         [ 4]  163 	lda	(___stdc_bit_width_PARM_1 + 4)
      000070 25*04            [ 3]  164 	and	*(___stdc_bit_width_sloc0_1_0 + 4)
      000072 D0 13            [ 4]  165 	bne	00129$
      000074 ADr05r00         [ 4]  166 	lda	(___stdc_bit_width_PARM_1 + 5)
      000077 25*05            [ 3]  167 	and	*(___stdc_bit_width_sloc0_1_0 + 5)
      000079 D0 0C            [ 4]  168 	bne	00129$
      00007B ADr06r00         [ 4]  169 	lda	(___stdc_bit_width_PARM_1 + 6)
      00007E 25*06            [ 3]  170 	and	*(___stdc_bit_width_sloc0_1_0 + 6)
      000080 D0 05            [ 4]  171 	bne	00129$
      000082 ADr07r00         [ 4]  172 	lda	(___stdc_bit_width_PARM_1 + 7)
      000085 25*07            [ 3]  173 	and	*(___stdc_bit_width_sloc0_1_0 + 7)
      000087                        174 00129$:
                                    175 ;	genIfxJump : z
      000087 F0 03            [ 4]  176 	beq	00106$
                                    177 ;	Raw cost for generated ic 10 : (59, 79.799995) count=2.999995
                                    178 ;	skipping generated iCode
                                    179 ;	Raw cost for generated ic 11 : (0, 0.000000) count=2.999995
                                    180 ;	../__stdc_bit_width.c: 42: width = (i + 1);
                                    181 ;	genCast
                                    182 ;	genCopy
      000089 98               [ 2]  183 	tya
                                    184 ;	Raw cost for generated ic 14 : (1, 2.000000) count=2.249995
                                    185 ;	genPlus
                                    186 ;	  genPlusInc
      00008A AA               [ 2]  187 	tax
      00008B E8               [ 2]  188 	inx
                                    189 ;	Raw cost for generated ic 15 : (2, 4.000000) count=2.249995
                                    190 ;	genLabel
      00008C                        191 00106$:
                                    192 ;	Raw cost for generated ic 18 : (0, 0.000000) count=2.999993
                                    193 ;	../__stdc_bit_width.c: 40: for(uint_fast8_t i = 0; i < ULLONG_WIDTH; i++)
                                    194 ;	genPlus
                                    195 ;	  genPlusInc
      00008C C8               [ 2]  196 	iny
                                    197 ;	Raw cost for generated ic 20 : (1, 2.000000) count=2.999993
                                    198 ;	genGoto
      00008D 4Cr04r00         [ 3]  199 	jmp	00105$
                                    200 ;	Raw cost for generated ic 22 : (3, 3.000000) count=2.999993
                                    201 ;	genLabel
      000090                        202 00103$:
                                    203 ;	Raw cost for generated ic 23 : (0, 0.000000) count=0.999997
                                    204 ;	../__stdc_bit_width.c: 43: return width;
                                    205 ;	genCast
                                    206 ;	genCopy
      000090 8A               [ 2]  207 	txa
                                    208 ;	Raw cost for generated ic 24 : (1, 2.000000) count=0.999997
                                    209 ;	genRet
                                    210 ;	Raw cost for generated ic 25 : (0, 0.000000) count=0.999997
                                    211 ;	genLabel
                                    212 ;	Raw cost for generated ic 26 : (0, 0.000000) count=0.999997
                                    213 ;	../__stdc_bit_width.c: 44: }
                                    214 ;	genEndFunction
      000091 60               [ 6]  215 	rts
                                    216 ;	Raw cost for generated ic 27 : (1, 6.000000) count=0.999997
                                    217 	.area CODE
                                    218 	.area RODATA
                                    219 	.area XINIT
                                    220 	.area CABS    (ABS)
