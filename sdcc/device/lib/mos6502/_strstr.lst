                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler
                                      3 ; Version 4.5.10 #15691 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _strstr
                                      6 	
                                      7 	.optsdcc -mmos6502
                                      8 
                                      9 ;--------------------------------------------------------
                                     10 ;  Ordering of segments for the linker.
                                     11 ;--------------------------------------------------------
                                     12 	.area ZP      (PAG)
                                     13 	.area OSEG    (PAG, OVR)
                                     14 	.area _CODE
                                     15 	.area GSINIT
                                     16 	.area GSFINAL
                                     17 	.area CODE
                                     18 	.area RODATA
                                     19 	.area XINIT
                                     20 	.area _DATA
                                     21 	.area DATA
                                     22 	.area BSS
                                     23 ;--------------------------------------------------------
                                     24 ; Public variables in this module
                                     25 ;--------------------------------------------------------
                                     26 	.globl _strstr_PARM_2
                                     27 	.globl _strstr
                                     28 ;--------------------------------------------------------
                                     29 ; ZP ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area ZP      (PAG)
                                     32 ;--------------------------------------------------------
                                     33 ; overlayable items in ram
                                     34 ;--------------------------------------------------------
                                     35 	.area	OSEG    (PAG, OVR)
      000000                         36 _strstr_sloc0_1_0:
      000000                         37 	.ds 2
      000002                         38 _strstr_sloc1_1_0:
      000002                         39 	.ds 2
      000004                         40 _strstr_sloc2_1_0:
      000004                         41 	.ds 2
      000006                         42 _strstr_sloc3_1_0:
      000006                         43 	.ds 2
      000008                         44 _strstr_sloc4_1_0:
      000008                         45 	.ds 2
                                     46 ;--------------------------------------------------------
                                     47 ; uninitialized external ram data
                                     48 ;--------------------------------------------------------
                                     49 	.area BSS
      000000                         50 _strstr_PARM_2:
      000000                         51 	.ds 2
      000002                         52 _strstr_cp_10000_28:
      000002                         53 	.ds 2
                                     54 ;--------------------------------------------------------
                                     55 ; absolute external ram data
                                     56 ;--------------------------------------------------------
                                     57 	.area DABS    (ABS)
                                     58 ;--------------------------------------------------------
                                     59 ; initialized external ram data
                                     60 ;--------------------------------------------------------
                                     61 	.area DATA
                                     62 ;--------------------------------------------------------
                                     63 ; global & static initialisations
                                     64 ;--------------------------------------------------------
                                     65 	.area _CODE
                                     66 	.area GSINIT
                                     67 	.area GSFINAL
                                     68 	.area GSINIT
                                     69 ;--------------------------------------------------------
                                     70 ; Home
                                     71 ;--------------------------------------------------------
                                     72 	.area _CODE
                                     73 	.area _CODE
                                     74 ;--------------------------------------------------------
                                     75 ; code
                                     76 ;--------------------------------------------------------
                                     77 	.area CODE
                                     78 ;------------------------------------------------------------
                                     79 ;Allocation info for local variables in function 'strstr'
                                     80 ;------------------------------------------------------------
                                     81 ;str2          Allocated with name '_strstr_PARM_2'
                                     82 ;str1          Allocated to registers a x 
                                     83 ;cp            Allocated with name '_strstr_cp_10000_28'
                                     84 ;s1            Allocated to registers 
                                     85 ;s2            Allocated to registers 
                                     86 ;sloc0         Allocated with name '_strstr_sloc0_1_0'
                                     87 ;sloc1         Allocated with name '_strstr_sloc1_1_0'
                                     88 ;sloc2         Allocated with name '_strstr_sloc2_1_0'
                                     89 ;sloc3         Allocated with name '_strstr_sloc3_1_0'
                                     90 ;sloc4         Allocated with name '_strstr_sloc4_1_0'
                                     91 ;------------------------------------------------------------
                                     92 ;	../_strstr.c: 31: char *strstr ( const char *str1, const char *str2 )
                                     93 ;	genLabel
                                     94 ;	Raw cost for generated ic 0 : (0, 0.000000) count=1.000000
                                     95 ;	-----------------------------------------
                                     96 ;	 function strstr
                                     97 ;	-----------------------------------------
                                     98 ;	Register assignment is optimal.
                                     99 ;	Stack space usage: 0 bytes.
      000000                        100 _strstr:
                                    101 ;	Raw cost for generated ic 1 : (0, 0.000000) count=1.000000
                                    102 ;	genReceive
                                    103 ;	Raw cost for generated ic 2 : (0, 0.000000) count=1.000000
                                    104 ;	../_strstr.c: 33: const char *cp = str1;
                                    105 ;	genAssign
                                    106 ;	genCopy
      000000 8Dr02r00         [ 4]  107 	sta	_strstr_cp_10000_28
      000003 8Er03r00         [ 4]  108 	stx	(_strstr_cp_10000_28 + 1)
                                    109 ;	Raw cost for generated ic 3 : (6, 8.000000) count=1.000000
                                    110 ;	../_strstr.c: 37: if (!*str2)
                                    111 ;	genAssign
                                    112 ;	genCopy
      000006 ACr01r00         [ 4]  113 	ldy	(_strstr_PARM_2 + 1)
      000009 84*01            [ 3]  114 	sty	*(_strstr_sloc0_1_0 + 1)
      00000B ACr00r00         [ 4]  115 	ldy	_strstr_PARM_2
      00000E 84*00            [ 3]  116 	sty	*_strstr_sloc0_1_0
                                    117 ;	Raw cost for generated ic 4 : (10, 14.000000) count=1.000000
                                    118 ;	genPointerGet
      000010 A0 00            [ 2]  119 	ldy	#0x00
      000012 B1*00            [ 6]  120 	lda	[*_strstr_sloc0_1_0],y
      000014 A8               [ 2]  121 	tay
      000015 ADr02r00         [ 4]  122 	lda	(_strstr_cp_10000_28+0)
                                    123 ;	Raw cost for generated ic 5 : (8, 13.000000) count=1.000000
                                    124 ;	genIfx
      000018 C0 00            [ 2]  125 	cpy	#0x00
                                    126 ;	genIfxJump : z
      00001A D0 01            [ 4]  127 	bne	00122$
                                    128 ;	Raw cost for generated ic 6 : (7, 7.600000) count=1.000000
                                    129 ;	../_strstr.c: 38: return ((char*)str1);
                                    130 ;	genRet
      00001C 60               [ 6]  131 	rts
                                    132 ;	Raw cost for generated ic 9 : (3, 3.000000) count=0.750000
                                    133 ;	../_strstr.c: 40: while (*cp)
                                    134 ;	genLabel
      00001D                        135 00122$:
                                    136 ;	Raw cost for generated ic 64 : (0, 0.000000) count=1.000000
                                    137 ;	genAssign
                                    138 ;	genCopy
      00001D 85*02            [ 3]  139 	sta	*_strstr_sloc1_1_0
      00001F 86*03            [ 3]  140 	stx	*(_strstr_sloc1_1_0 + 1)
                                    141 ;	Raw cost for generated ic 70 : (4, 6.000000) count=1.000000
                                    142 ;	genLabel
      000021                        143 00110$:
                                    144 ;	Raw cost for generated ic 11 : (0, 0.000000) count=3.999937
                                    145 ;	genPointerGet
      000021 A0 00            [ 2]  146 	ldy	#0x00
      000023 B1*02            [ 6]  147 	lda	[*_strstr_sloc1_1_0],y
                                    148 ;	Raw cost for generated ic 13 : (4, 7.000000) count=3.999937
                                    149 ;	genIfx
                                    150 ;	genIfxJump : z
      000025 F0 64            [ 4]  151 	beq	00112$
                                    152 ;	Raw cost for generated ic 14 : (5, 5.600000) count=3.999937
                                    153 ;	../_strstr.c: 43: s2 = str2;
                                    154 ;	genAssign
                                    155 ;	genCopy
      000027 A5*01            [ 3]  156 	lda	*(_strstr_sloc0_1_0 + 1)
      000029 85*05            [ 3]  157 	sta	*(_strstr_sloc2_1_0 + 1)
      00002B A5*00            [ 3]  158 	lda	*_strstr_sloc0_1_0
      00002D 85*04            [ 3]  159 	sta	*_strstr_sloc2_1_0
                                    160 ;	Raw cost for generated ic 18 : (8, 12.000000) count=2.999953
                                    161 ;	../_strstr.c: 45: while (*s1 && *s2 && !(*s1-*s2))
                                    162 ;	genAssign
                                    163 ;	genCopy
      00002F A5*03            [ 3]  164 	lda	*(_strstr_sloc1_1_0 + 1)
      000031 85*07            [ 3]  165 	sta	*(_strstr_sloc3_1_0 + 1)
      000033 A5*02            [ 3]  166 	lda	*_strstr_sloc1_1_0
      000035 85*06            [ 3]  167 	sta	*_strstr_sloc3_1_0
                                    168 ;	Raw cost for generated ic 65 : (8, 12.000000) count=2.999953
                                    169 ;	genLabel
      000037                        170 00105$:
                                    171 ;	Raw cost for generated ic 19 : (0, 0.000000) count=5.189096
                                    172 ;	genPointerGet
      000037 A0 00            [ 2]  173 	ldy	#0x00
      000039 B1*06            [ 6]  174 	lda	[*_strstr_sloc3_1_0],y
      00003B AA               [ 2]  175 	tax
                                    176 ;	Raw cost for generated ic 21 : (5, 9.000000) count=5.189096
                                    177 ;	genIfx
                                    178 ;	genIfxJump : z
      00003C F0 2D            [ 4]  179 	beq	00107$
                                    180 ;	Raw cost for generated ic 22 : (5, 5.600000) count=5.189096
                                    181 ;	genPointerGet
      00003E B1*04            [ 6]  182 	lda	[*_strstr_sloc2_1_0],y
                                    183 ;	Raw cost for generated ic 26 : (2, 5.000000) count=3.891822
                                    184 ;	genIfx
                                    185 ;	genIfxJump : z
      000040 F0 29            [ 4]  186 	beq	00107$
                                    187 ;	Raw cost for generated ic 27 : (5, 5.600000) count=3.891822
                                    188 ;	genCast
                                    189 ;	genCopy
      000042 84*09            [ 3]  190 	sty	*(_strstr_sloc4_1_0 + 1)
      000044 86*08            [ 3]  191 	stx	*_strstr_sloc4_1_0
                                    192 ;	Raw cost for generated ic 32 : (4, 6.000000) count=2.918866
                                    193 ;	genCast
                                    194 ;	genCopy
      000046 A2 00            [ 2]  195 	ldx	#0x00
                                    196 ;	Raw cost for generated ic 35 : (2, 2.000000) count=2.918866
                                    197 ;	genMinus
      000048 85*00            [ 3]  198 	sta	*(REGTEMP+0)
      00004A A5*08            [ 3]  199 	lda	*_strstr_sloc4_1_0
      00004C 38               [ 2]  200 	sec
      00004D E5*00            [ 3]  201 	sbc	*(REGTEMP+0)
      00004F 48               [ 3]  202 	pha
      000050 A5*09            [ 3]  203 	lda	*(_strstr_sloc4_1_0 + 1)
      000052 E9 00            [ 2]  204 	sbc	#0x00
      000054 AA               [ 2]  205 	tax
      000055 68               [ 4]  206 	pla
                                    207 ;	Raw cost for generated ic 36 : (14, 25.000000) count=2.918866
                                    208 ;	genIfx
                                    209 ;	genIfxJump : z
      000056 D0 13            [ 4]  210 	bne	00107$
      000058 E0 00            [ 2]  211 	cpx	#0x00
      00005A D0 0F            [ 4]  212 	bne	00107$
                                    213 ;	Raw cost for generated ic 37 : (9, 10.200000) count=2.918866
                                    214 ;	../_strstr.c: 46: s1++, s2++;
                                    215 ;	genPlus
                                    216 ;	  genPlusInc
      00005C E6*06            [ 5]  217 	inc	*_strstr_sloc3_1_0
      00005E D0 02            [ 4]  218 	bne	00174$
      000060 E6*07            [ 5]  219 	inc	*(_strstr_sloc3_1_0 + 1)
      000062                        220 00174$:
                                    221 ;	Raw cost for generated ic 41 : (6, 12.600000) count=2.189143
                                    222 ;	genPlus
                                    223 ;	  genPlusInc
      000062 E6*04            [ 5]  224 	inc	*_strstr_sloc2_1_0
      000064 D0 D1            [ 4]  225 	bne	00105$
      000066 E6*05            [ 5]  226 	inc	*(_strstr_sloc2_1_0 + 1)
                                    227 ;	Raw cost for generated ic 44 : (6, 12.600000) count=2.189143
                                    228 ;	genGoto
      000068 4Cr37r00         [ 3]  229 	jmp	00105$
                                    230 ;	Raw cost for generated ic 46 : (3, 3.000000) count=2.189143
                                    231 ;	genLabel
      00006B                        232 00107$:
                                    233 ;	Raw cost for generated ic 47 : (0, 0.000000) count=2.999946
                                    234 ;	../_strstr.c: 48: if (!*s2)
                                    235 ;	genPointerGet
      00006B A0 00            [ 2]  236 	ldy	#0x00
      00006D B1*04            [ 6]  237 	lda	[*_strstr_sloc2_1_0],y
                                    238 ;	Raw cost for generated ic 49 : (4, 7.000000) count=2.999946
                                    239 ;	genIfx
                                    240 ;	genIfxJump : z
      00006F D0 07            [ 4]  241 	bne	00109$
                                    242 ;	Raw cost for generated ic 50 : (5, 5.600000) count=2.999946
                                    243 ;	../_strstr.c: 49: return ((char*)cp);
                                    244 ;	genRet
      000071 AEr03r00         [ 4]  245 	ldx	(_strstr_cp_10000_28 + 1)
      000074 ADr02r00         [ 4]  246 	lda	_strstr_cp_10000_28
      000077 60               [ 6]  247 	rts
                                    248 ;	Raw cost for generated ic 53 : (9, 11.000000) count=2.249953
                                    249 ;	genLabel
      000078                        250 00109$:
                                    251 ;	Raw cost for generated ic 54 : (0, 0.000000) count=2.999937
                                    252 ;	../_strstr.c: 51: cp++;
                                    253 ;	genPlus
                                    254 ;	  genPlusInc
      000078 E6*02            [ 5]  255 	inc	*_strstr_sloc1_1_0
      00007A D0 02            [ 4]  256 	bne	00178$
      00007C E6*03            [ 5]  257 	inc	*(_strstr_sloc1_1_0 + 1)
      00007E                        258 00178$:
                                    259 ;	Raw cost for generated ic 56 : (6, 12.600000) count=2.999937
                                    260 ;	genAssign
                                    261 ;	genCopy
      00007E A5*03            [ 3]  262 	lda	*(_strstr_sloc1_1_0 + 1)
      000080 8Dr03r00         [ 4]  263 	sta	(_strstr_cp_10000_28 + 1)
      000083 A5*02            [ 3]  264 	lda	*_strstr_sloc1_1_0
      000085 8Dr02r00         [ 4]  265 	sta	_strstr_cp_10000_28
                                    266 ;	Raw cost for generated ic 57 : (10, 14.000000) count=2.999937
                                    267 ;	genGoto
      000088 4Cr21r00         [ 3]  268 	jmp	00110$
                                    269 ;	Raw cost for generated ic 58 : (3, 3.000000) count=2.999937
                                    270 ;	genLabel
      00008B                        271 00112$:
                                    272 ;	Raw cost for generated ic 59 : (0, 0.000000) count=0.999984
                                    273 ;	../_strstr.c: 54: return (NULL) ;
                                    274 ;	genRet
      00008B A9 00            [ 2]  275 	lda	#0x00
      00008D AA               [ 2]  276 	tax
                                    277 ;	Raw cost for generated ic 60 : (3, 4.000000) count=0.999984
                                    278 ;	genLabel
                                    279 ;	Raw cost for generated ic 61 : (0, 0.000000) count=0.999984
                                    280 ;	../_strstr.c: 55: }
                                    281 ;	genEndFunction
      00008E 60               [ 6]  282 	rts
                                    283 ;	Raw cost for generated ic 62 : (1, 6.000000) count=0.999984
                                    284 	.area CODE
                                    285 	.area RODATA
                                    286 	.area XINIT
                                    287 	.area CABS    (ABS)
