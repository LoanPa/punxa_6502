                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler
                                      3 ; Version 4.5.10 #15691 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module ceilf
                                      6 	
                                      7 	.optsdcc -mmos6502
                                      8 
                                      9 ;--------------------------------------------------------
                                     10 ;  Ordering of segments for the linker.
                                     11 ;--------------------------------------------------------
                                     12 	.area ZP      (PAG)
                                     13 	.area OSEG    (PAG, OVR)
                                     14 	.area _CODE
                                     15 	.area GSINIT
                                     16 	.area GSFINAL
                                     17 	.area CODE
                                     18 	.area RODATA
                                     19 	.area XINIT
                                     20 	.area _DATA
                                     21 	.area DATA
                                     22 	.area BSS
                                     23 ;--------------------------------------------------------
                                     24 ; Public variables in this module
                                     25 ;--------------------------------------------------------
                                     26 	.globl _ceilf_PARM_1
                                     27 	.globl _ceilf
                                     28 ;--------------------------------------------------------
                                     29 ; ZP ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area ZP      (PAG)
      000000                         32 _ceilf_sloc0_1_0:
      000000                         33 	.ds 4
      000004                         34 _ceilf_sloc1_1_0:
      000004                         35 	.ds 4
                                     36 ;--------------------------------------------------------
                                     37 ; overlayable items in ram
                                     38 ;--------------------------------------------------------
                                     39 ;--------------------------------------------------------
                                     40 ; uninitialized external ram data
                                     41 ;--------------------------------------------------------
                                     42 	.area BSS
      000000                         43 _ceilf_PARM_1:
      000000                         44 	.ds 4
                                     45 ;--------------------------------------------------------
                                     46 ; absolute external ram data
                                     47 ;--------------------------------------------------------
                                     48 	.area DABS    (ABS)
                                     49 ;--------------------------------------------------------
                                     50 ; initialized external ram data
                                     51 ;--------------------------------------------------------
                                     52 	.area DATA
                                     53 ;--------------------------------------------------------
                                     54 ; global & static initialisations
                                     55 ;--------------------------------------------------------
                                     56 	.area _CODE
                                     57 	.area GSINIT
                                     58 	.area GSFINAL
                                     59 	.area GSINIT
                                     60 ;--------------------------------------------------------
                                     61 ; Home
                                     62 ;--------------------------------------------------------
                                     63 	.area _CODE
                                     64 	.area _CODE
                                     65 ;--------------------------------------------------------
                                     66 ; code
                                     67 ;--------------------------------------------------------
                                     68 	.area CODE
                                     69 ;------------------------------------------------------------
                                     70 ;Allocation info for local variables in function 'ceilf'
                                     71 ;------------------------------------------------------------
                                     72 ;sloc0         Allocated with name '_ceilf_sloc0_1_0'
                                     73 ;sloc1         Allocated with name '_ceilf_sloc1_1_0'
                                     74 ;x             Allocated with name '_ceilf_PARM_1'
                                     75 ;r             Allocated with name '_ceilf_r_10000_26'
                                     76 ;------------------------------------------------------------
                                     77 ;	../ceilf.c: 33: float ceilf(float x) _FLOAT_FUNC_REENTRANT
                                     78 ;	genLabel
                                     79 ;	Raw cost for generated ic 0 : (0, 0.000000) count=1.000000
                                     80 ;	-----------------------------------------
                                     81 ;	 function ceilf
                                     82 ;	-----------------------------------------
                                     83 ;	Register assignment is optimal.
                                     84 ;	Stack space usage: 0 bytes.
      000000                         85 _ceilf:
                                     86 ;	Raw cost for generated ic 1 : (0, 0.000000) count=1.000000
                                     87 ;	../ceilf.c: 36: r=x;
                                     88 ;	genAssign
                                     89 ;	genCopy
      000000 ADr03r00         [ 4]   90 	lda	(_ceilf_PARM_1 + 3)
      000003 8Dr03r00         [ 4]   91 	sta	(___fs2slong_PARM_1 + 3)
      000006 ADr02r00         [ 4]   92 	lda	(_ceilf_PARM_1 + 2)
      000009 8Dr02r00         [ 4]   93 	sta	(___fs2slong_PARM_1 + 2)
      00000C ADr01r00         [ 4]   94 	lda	(_ceilf_PARM_1 + 1)
      00000F 8Dr01r00         [ 4]   95 	sta	(___fs2slong_PARM_1 + 1)
      000012 ADr00r00         [ 4]   96 	lda	_ceilf_PARM_1
      000015 8Dr00r00         [ 4]   97 	sta	___fs2slong_PARM_1
                                     98 ;	Raw cost for generated ic 27 : (24, 32.000000) count=1.000000
                                     99 ;	genCall
      000018 20r00r00         [ 6]  100 	jsr	___fs2slong
                                    101 ;	assignResultValue
      00001B 85*00            [ 3]  102 	sta	*_ceilf_sloc0_1_0
      00001D 86*01            [ 3]  103 	stx	*(_ceilf_sloc0_1_0 + 1)
      00001F A5*00            [ 3]  104 	lda	*___SDCC_m6502_ret2
      000021 85*02            [ 3]  105 	sta	*(_ceilf_sloc0_1_0 + 2)
      000023 A5*00            [ 3]  106 	lda	*___SDCC_m6502_ret3
      000025 85*03            [ 3]  107 	sta	*(_ceilf_sloc0_1_0 + 3)
                                    108 ;	Raw cost for generated ic 28 : (15, 24.000000) count=1.000000
                                    109 ;	../ceilf.c: 37: if (r<0)
                                    110 ;	genCmp
      000027 24*03            [ 3]  111 	bit	*(_ceilf_sloc0_1_0 + 3)
      000029 10 29            [ 4]  112 	bpl	00102$
                                    113 ;	Raw cost for generated ic 4 : (7, 8.600000) count=1.000000
                                    114 ;	skipping generated iCode
                                    115 ;	Raw cost for generated ic 5 : (0, 0.000000) count=1.000000
                                    116 ;	../ceilf.c: 38: return r;
                                    117 ;	genAssign
                                    118 ;	genCopy
      00002B 8Dr03r00         [ 4]  119 	sta	(___slong2fs_PARM_1 + 3)
      00002E A5*02            [ 3]  120 	lda	*(_ceilf_sloc0_1_0 + 2)
      000030 8Dr02r00         [ 4]  121 	sta	(___slong2fs_PARM_1 + 2)
      000033 8A               [ 2]  122 	txa
      000034 8Dr01r00         [ 4]  123 	sta	(___slong2fs_PARM_1 + 1)
      000037 A5*00            [ 3]  124 	lda	*_ceilf_sloc0_1_0
      000039 8Dr00r00         [ 4]  125 	sta	___slong2fs_PARM_1
                                    126 ;	Raw cost for generated ic 29 : (17, 24.000000) count=0.750000
                                    127 ;	genCall
      00003C 20r00r00         [ 6]  128 	jsr	___slong2fs
                                    129 ;	assignResultValue
      00003F 85*04            [ 3]  130 	sta	*_ceilf_sloc1_1_0
      000041 86*05            [ 3]  131 	stx	*(_ceilf_sloc1_1_0 + 1)
      000043 A5*00            [ 3]  132 	lda	*___SDCC_m6502_ret2
      000045 85*06            [ 3]  133 	sta	*(_ceilf_sloc1_1_0 + 2)
      000047 A5*00            [ 3]  134 	lda	*___SDCC_m6502_ret3
      000049 85*07            [ 3]  135 	sta	*(_ceilf_sloc1_1_0 + 3)
                                    136 ;	Raw cost for generated ic 30 : (15, 24.000000) count=0.750000
                                    137 ;	genRet
      00004B 85*00            [ 3]  138 	sta	*___SDCC_m6502_ret3
      00004D A5*06            [ 3]  139 	lda	*(_ceilf_sloc1_1_0 + 2)
      00004F 85*00            [ 3]  140 	sta	*___SDCC_m6502_ret2
      000051 A5*04            [ 3]  141 	lda	*_ceilf_sloc1_1_0
      000053 60               [ 6]  142 	rts
                                    143 ;	Raw cost for generated ic 9 : (11, 15.000000) count=0.750000
                                    144 ;	genLabel
      000054                        145 00102$:
                                    146 ;	Raw cost for generated ic 11 : (0, 0.000000) count=1.000000
                                    147 ;	../ceilf.c: 40: return (r+((r<x)?1:0));
                                    148 ;	genAssign
                                    149 ;	genCopy
      000054 A5*03            [ 3]  150 	lda	*(_ceilf_sloc0_1_0 + 3)
      000056 8Dr03r00         [ 4]  151 	sta	(___slong2fs_PARM_1 + 3)
      000059 A5*02            [ 3]  152 	lda	*(_ceilf_sloc0_1_0 + 2)
      00005B 8Dr02r00         [ 4]  153 	sta	(___slong2fs_PARM_1 + 2)
      00005E A5*01            [ 3]  154 	lda	*(_ceilf_sloc0_1_0 + 1)
      000060 8Dr01r00         [ 4]  155 	sta	(___slong2fs_PARM_1 + 1)
      000063 A5*00            [ 3]  156 	lda	*_ceilf_sloc0_1_0
      000065 8Dr00r00         [ 4]  157 	sta	___slong2fs_PARM_1
                                    158 ;	Raw cost for generated ic 31 : (20, 28.000000) count=1.000000
                                    159 ;	genCall
      000068 20r00r00         [ 6]  160 	jsr	___slong2fs
                                    161 ;	assignResultValue
      00006B 8Dr00r00         [ 4]  162 	sta	___fslt_PARM_1
      00006E 8Er01r00         [ 4]  163 	stx	(___fslt_PARM_1 + 1)
      000071 A5*00            [ 3]  164 	lda	*___SDCC_m6502_ret2
      000073 8Dr02r00         [ 4]  165 	sta	(___fslt_PARM_1 + 2)
      000076 A5*00            [ 3]  166 	lda	*___SDCC_m6502_ret3
      000078 8Dr03r00         [ 4]  167 	sta	(___fslt_PARM_1 + 3)
                                    168 ;	Raw cost for generated ic 32 : (19, 28.000000) count=1.000000
                                    169 ;	genAssign
                                    170 ;	genCopy
      00007B ADr03r00         [ 4]  171 	lda	(_ceilf_PARM_1 + 3)
      00007E 8Dr03r00         [ 4]  172 	sta	(___fslt_PARM_2 + 3)
      000081 ADr02r00         [ 4]  173 	lda	(_ceilf_PARM_1 + 2)
      000084 8Dr02r00         [ 4]  174 	sta	(___fslt_PARM_2 + 2)
      000087 ADr01r00         [ 4]  175 	lda	(_ceilf_PARM_1 + 1)
      00008A 8Dr01r00         [ 4]  176 	sta	(___fslt_PARM_2 + 1)
      00008D ADr00r00         [ 4]  177 	lda	_ceilf_PARM_1
      000090 8Dr00r00         [ 4]  178 	sta	___fslt_PARM_2
                                    179 ;	Raw cost for generated ic 34 : (24, 32.000000) count=1.000000
                                    180 ;	genCall
      000093 20r00r00         [ 6]  181 	jsr	___fslt
                                    182 ;	assignResultValue
                                    183 ;	Raw cost for generated ic 35 : (3, 6.000000) count=1.000000
                                    184 ;	genIfx
      000096 C9 00            [ 2]  185 	cmp	#0x00
                                    186 ;	genIfxJump : z
      000098 F0 05            [ 4]  187 	beq	00106$
                                    188 ;	Raw cost for generated ic 14 : (7, 7.600000) count=1.000000
                                    189 ;	genAssign
                                    190 ;	genCopy
      00009A A9 01            [ 2]  191 	lda	#0x01
                                    192 ;	Raw cost for generated ic 15 : (2, 2.000000) count=0.750000
                                    193 ;	genGoto
      00009C 4CrA1r00         [ 3]  194 	jmp	00107$
                                    195 ;	Raw cost for generated ic 16 : (3, 3.000000) count=0.750000
                                    196 ;	genLabel
      00009F                        197 00106$:
                                    198 ;	Raw cost for generated ic 17 : (0, 0.000000) count=0.250000
                                    199 ;	genAssign
                                    200 ;	genCopy
      00009F A9 00            [ 2]  201 	lda	#0x00
                                    202 ;	Raw cost for generated ic 18 : (2, 2.000000) count=0.250000
                                    203 ;	genLabel
      0000A1                        204 00107$:
                                    205 ;	Raw cost for generated ic 19 : (0, 0.000000) count=1.000000
                                    206 ;	genCast
      0000A1 85*04            [ 3]  207 	sta	*_ceilf_sloc1_1_0
      0000A3 A0 00            [ 2]  208 	ldy	#0x00
      0000A5 84*05            [ 3]  209 	sty	*(_ceilf_sloc1_1_0 + 1)
      0000A7 84*06            [ 3]  210 	sty	*(_ceilf_sloc1_1_0 + 2)
      0000A9 84*07            [ 3]  211 	sty	*(_ceilf_sloc1_1_0 + 3)
                                    212 ;	Raw cost for generated ic 20 : (10, 14.000000) count=1.000000
                                    213 ;	genPlus
      0000AB A5*00            [ 3]  214 	lda	*_ceilf_sloc0_1_0
      0000AD 18               [ 2]  215 	clc
      0000AE 65*04            [ 3]  216 	adc	*_ceilf_sloc1_1_0
      0000B0 8Dr00r00         [ 4]  217 	sta	___slong2fs_PARM_1
      0000B3 A5*01            [ 3]  218 	lda	*(_ceilf_sloc0_1_0 + 1)
      0000B5 65*05            [ 3]  219 	adc	*(_ceilf_sloc1_1_0 + 1)
      0000B7 8Dr01r00         [ 4]  220 	sta	(___slong2fs_PARM_1 + 1)
      0000BA A5*02            [ 3]  221 	lda	*(_ceilf_sloc0_1_0 + 2)
      0000BC 65*06            [ 3]  222 	adc	*(_ceilf_sloc1_1_0 + 2)
      0000BE 8Dr02r00         [ 4]  223 	sta	(___slong2fs_PARM_1 + 2)
      0000C1 A5*03            [ 3]  224 	lda	*(_ceilf_sloc0_1_0 + 3)
      0000C3 65*07            [ 3]  225 	adc	*(_ceilf_sloc1_1_0 + 3)
      0000C5 8Dr03r00         [ 4]  226 	sta	(___slong2fs_PARM_1 + 3)
                                    227 ;	Raw cost for generated ic 21 : (29, 42.000000) count=1.000000
                                    228 ;	genCall
      0000C8 20r00r00         [ 6]  229 	jsr	___slong2fs
                                    230 ;	assignResultValue
      0000CB 85*04            [ 3]  231 	sta	*_ceilf_sloc1_1_0
      0000CD 86*05            [ 3]  232 	stx	*(_ceilf_sloc1_1_0 + 1)
      0000CF A5*00            [ 3]  233 	lda	*___SDCC_m6502_ret2
      0000D1 85*06            [ 3]  234 	sta	*(_ceilf_sloc1_1_0 + 2)
      0000D3 A5*00            [ 3]  235 	lda	*___SDCC_m6502_ret3
      0000D5 85*07            [ 3]  236 	sta	*(_ceilf_sloc1_1_0 + 3)
                                    237 ;	Raw cost for generated ic 37 : (15, 24.000000) count=1.000000
                                    238 ;	genRet
      0000D7 85*00            [ 3]  239 	sta	*___SDCC_m6502_ret3
      0000D9 A5*06            [ 3]  240 	lda	*(_ceilf_sloc1_1_0 + 2)
      0000DB 85*00            [ 3]  241 	sta	*___SDCC_m6502_ret2
      0000DD A5*04            [ 3]  242 	lda	*_ceilf_sloc1_1_0
                                    243 ;	Raw cost for generated ic 23 : (8, 12.000000) count=1.000000
                                    244 ;	genLabel
                                    245 ;	Raw cost for generated ic 25 : (0, 0.000000) count=1.000000
                                    246 ;	../ceilf.c: 41: }
                                    247 ;	genEndFunction
      0000DF 60               [ 6]  248 	rts
                                    249 ;	Raw cost for generated ic 26 : (1, 6.000000) count=1.000000
                                    250 	.area CODE
                                    251 	.area RODATA
                                    252 	.area XINIT
                                    253 	.area CABS    (ABS)
