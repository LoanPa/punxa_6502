                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler
                                      3 ; Version 4.5.10 #15691 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module atomic_flag_test_and_set
                                      6 	
                                      7 	.optsdcc -mmos6502
                                      8 
                                      9 ;--------------------------------------------------------
                                     10 ;  Ordering of segments for the linker.
                                     11 ;--------------------------------------------------------
                                     12 	.area ZP      (PAG)
                                     13 	.area OSEG    (PAG, OVR)
                                     14 	.area _CODE
                                     15 	.area GSINIT
                                     16 	.area GSFINAL
                                     17 	.area CODE
                                     18 	.area RODATA
                                     19 	.area XINIT
                                     20 	.area _DATA
                                     21 	.area DATA
                                     22 	.area BSS
                                     23 ;--------------------------------------------------------
                                     24 ; Public variables in this module
                                     25 ;--------------------------------------------------------
                                     26 	.globl _atomic_flag_test_and_set
                                     27 ;--------------------------------------------------------
                                     28 ; ZP ram data
                                     29 ;--------------------------------------------------------
                                     30 	.area ZP      (PAG)
                                     31 ;--------------------------------------------------------
                                     32 ; overlayable items in ram
                                     33 ;--------------------------------------------------------
                                     34 	.area	OSEG    (PAG, OVR)
      000000                         35 _atomic_flag_test_and_set_sloc0_1_0:
      000000                         36 	.ds 2
                                     37 ;--------------------------------------------------------
                                     38 ; uninitialized external ram data
                                     39 ;--------------------------------------------------------
                                     40 	.area BSS
      000000                         41 _atomic_flag_test_and_set_object_10000_4:
      000000                         42 	.ds 2
                                     43 ;--------------------------------------------------------
                                     44 ; absolute external ram data
                                     45 ;--------------------------------------------------------
                                     46 	.area DABS    (ABS)
                                     47 ;--------------------------------------------------------
                                     48 ; initialized external ram data
                                     49 ;--------------------------------------------------------
                                     50 	.area DATA
                                     51 ;--------------------------------------------------------
                                     52 ; global & static initialisations
                                     53 ;--------------------------------------------------------
                                     54 	.area _CODE
                                     55 	.area GSINIT
                                     56 	.area GSFINAL
                                     57 	.area GSINIT
                                     58 ;--------------------------------------------------------
                                     59 ; Home
                                     60 ;--------------------------------------------------------
                                     61 	.area _CODE
                                     62 	.area _CODE
                                     63 ;--------------------------------------------------------
                                     64 ; code
                                     65 ;--------------------------------------------------------
                                     66 	.area CODE
                                     67 ;------------------------------------------------------------
                                     68 ;Allocation info for local variables in function 'atomic_flag_test_and_set'
                                     69 ;------------------------------------------------------------
                                     70 ;object        Allocated with name '_atomic_flag_test_and_set_object_10000_4'
                                     71 ;t             Allocated to registers x 
                                     72 ;sloc0         Allocated with name '_atomic_flag_test_and_set_sloc0_1_0'
                                     73 ;------------------------------------------------------------
                                     74 ;	atomic_flag_test_and_set.c: 31: _Bool atomic_flag_test_and_set(volatile atomic_flag *object)
                                     75 ;	genLabel
                                     76 ;	Raw cost for generated ic 0 : (0, 0.000000) count=1.000000
                                     77 ;	-----------------------------------------
                                     78 ;	 function atomic_flag_test_and_set
                                     79 ;	-----------------------------------------
                                     80 ;	Register assignment is optimal.
                                     81 ;	Stack space usage: 0 bytes.
      000000                         82 _atomic_flag_test_and_set:
                                     83 ;	Raw cost for generated ic 1 : (0, 0.000000) count=1.000000
                                     84 ;	genReceive
      000000 8Dr00r00         [ 4]   85 	sta	_atomic_flag_test_and_set_object_10000_4
      000003 8Er01r00         [ 4]   86 	stx	(_atomic_flag_test_and_set_object_10000_4 + 1)
                                     87 ;	Raw cost for generated ic 2 : (6, 8.000000) count=1.000000
                                     88 ;	atomic_flag_test_and_set.c: 34: t=object->flag;
                                     89 ;	genAssign
                                     90 ;	genCopy
      000006 85*00            [ 3]   91 	sta	*_atomic_flag_test_and_set_sloc0_1_0
      000008 86*01            [ 3]   92 	stx	*(_atomic_flag_test_and_set_sloc0_1_0 + 1)
                                     93 ;	Raw cost for generated ic 3 : (4, 6.000000) count=1.000000
                                     94 ;	genPointerGet
      00000A A0 00            [ 2]   95 	ldy	#0x00
      00000C B1*00            [ 6]   96 	lda	[*_atomic_flag_test_and_set_sloc0_1_0],y
      00000E AA               [ 2]   97 	tax
                                     98 ;	Raw cost for generated ic 5 : (5, 9.000000) count=1.000000
                                     99 ;	atomic_flag_test_and_set.c: 35: object->flag=0;
                                    100 ;	genPointerSet
      00000F 98               [ 2]  101 	tya
      000010 91*00            [ 6]  102 	sta	[*_atomic_flag_test_and_set_sloc0_1_0],y
                                    103 ;	Raw cost for generated ic 9 : (3, 8.000000) count=1.000000
                                    104 ;	atomic_flag_test_and_set.c: 36: return t^0x01;
                                    105 ;	genXor
      000012 8A               [ 2]  106 	txa
      000013 49 01            [ 2]  107 	eor	#0x01
                                    108 ;	Raw cost for generated ic 10 : (3, 4.000000) count=1.000000
                                    109 ;	genCast
      000015 F0 02            [ 4]  110 	beq	00104$
      000017 A9 01            [ 2]  111 	lda	#0x01
      000019                        112 00104$:
                                    113 ;	Raw cost for generated ic 11 : (4, 4.600000) count=1.000000
                                    114 ;	genRet
                                    115 ;	Raw cost for generated ic 12 : (0, 0.000000) count=1.000000
                                    116 ;	genLabel
                                    117 ;	Raw cost for generated ic 13 : (0, 0.000000) count=1.000000
                                    118 ;	atomic_flag_test_and_set.c: 37: }
                                    119 ;	genEndFunction
      000019 60               [ 6]  120 	rts
                                    121 ;	Raw cost for generated ic 14 : (1, 6.000000) count=1.000000
                                    122 	.area CODE
                                    123 	.area RODATA
                                    124 	.area XINIT
                                    125 	.area CABS    (ABS)
