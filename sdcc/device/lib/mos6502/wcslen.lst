                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler
                                      3 ; Version 4.5.10 #15691 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module wcslen
                                      6 	
                                      7 	.optsdcc -mmos6502
                                      8 
                                      9 ;--------------------------------------------------------
                                     10 ;  Ordering of segments for the linker.
                                     11 ;--------------------------------------------------------
                                     12 	.area ZP      (PAG)
                                     13 	.area OSEG    (PAG, OVR)
                                     14 	.area _CODE
                                     15 	.area GSINIT
                                     16 	.area GSFINAL
                                     17 	.area CODE
                                     18 	.area RODATA
                                     19 	.area XINIT
                                     20 	.area _DATA
                                     21 	.area DATA
                                     22 	.area BSS
                                     23 ;--------------------------------------------------------
                                     24 ; Public variables in this module
                                     25 ;--------------------------------------------------------
                                     26 	.globl _wcslen
                                     27 ;--------------------------------------------------------
                                     28 ; ZP ram data
                                     29 ;--------------------------------------------------------
                                     30 	.area ZP      (PAG)
                                     31 ;--------------------------------------------------------
                                     32 ; overlayable items in ram
                                     33 ;--------------------------------------------------------
                                     34 	.area	OSEG    (PAG, OVR)
      000000                         35 _wcslen_n_10000_16:
      000000                         36 	.ds 2
      000002                         37 _wcslen_sloc0_1_0:
      000002                         38 	.ds 2
      000004                         39 _wcslen_sloc1_1_0:
      000004                         40 	.ds 4
                                     41 ;--------------------------------------------------------
                                     42 ; uninitialized external ram data
                                     43 ;--------------------------------------------------------
                                     44 	.area BSS
                                     45 ;--------------------------------------------------------
                                     46 ; absolute external ram data
                                     47 ;--------------------------------------------------------
                                     48 	.area DABS    (ABS)
                                     49 ;--------------------------------------------------------
                                     50 ; initialized external ram data
                                     51 ;--------------------------------------------------------
                                     52 	.area DATA
                                     53 ;--------------------------------------------------------
                                     54 ; global & static initialisations
                                     55 ;--------------------------------------------------------
                                     56 	.area _CODE
                                     57 	.area GSINIT
                                     58 	.area GSFINAL
                                     59 	.area GSINIT
                                     60 ;--------------------------------------------------------
                                     61 ; Home
                                     62 ;--------------------------------------------------------
                                     63 	.area _CODE
                                     64 	.area _CODE
                                     65 ;--------------------------------------------------------
                                     66 ; code
                                     67 ;--------------------------------------------------------
                                     68 	.area CODE
                                     69 ;------------------------------------------------------------
                                     70 ;Allocation info for local variables in function 'wcslen'
                                     71 ;------------------------------------------------------------
                                     72 ;s             Allocated to registers 
                                     73 ;n             Allocated with name '_wcslen_n_10000_16'
                                     74 ;sloc0         Allocated with name '_wcslen_sloc0_1_0'
                                     75 ;sloc1         Allocated with name '_wcslen_sloc1_1_0'
                                     76 ;------------------------------------------------------------
                                     77 ;	../wcslen.c: 31: size_t wcslen(const wchar_t *s)
                                     78 ;	genLabel
                                     79 ;	Raw cost for generated ic 0 : (0, 0.000000) count=1.000000
                                     80 ;	-----------------------------------------
                                     81 ;	 function wcslen
                                     82 ;	-----------------------------------------
                                     83 ;	Register assignment is optimal.
                                     84 ;	Stack space usage: 0 bytes.
      000000                         85 _wcslen:
                                     86 ;	Raw cost for generated ic 1 : (0, 0.000000) count=1.000000
                                     87 ;	genReceive
      000000 85*02            [ 3]   88 	sta	*_wcslen_sloc0_1_0
      000002 86*03            [ 3]   89 	stx	*(_wcslen_sloc0_1_0 + 1)
                                     90 ;	Raw cost for generated ic 2 : (4, 6.000000) count=1.000000
                                     91 ;	../wcslen.c: 34: while (*s)
                                     92 ;	genAssign
                                     93 ;	genAssignLit
      000004 A0 00            [ 2]   94 	ldy	#0x00
      000006 84*00            [ 3]   95 	sty	*_wcslen_n_10000_16
      000008 84*01            [ 3]   96 	sty	*(_wcslen_n_10000_16 + 1)
                                     97 ;	Raw cost for generated ic 22 : (6, 8.000000) count=1.000000
                                     98 ;	genLabel
      00000A                         99 00101$:
                                    100 ;	Raw cost for generated ic 4 : (0, 0.000000) count=3.999997
                                    101 ;	genPointerGet
      00000A A0 00            [ 2]  102 	ldy	#0x00
      00000C B1*02            [ 6]  103 	lda	[*_wcslen_sloc0_1_0],y
      00000E 85*04            [ 3]  104 	sta	*_wcslen_sloc1_1_0
      000010 C8               [ 2]  105 	iny
      000011 B1*02            [ 6]  106 	lda	[*_wcslen_sloc0_1_0],y
      000013 85*05            [ 3]  107 	sta	*(_wcslen_sloc1_1_0 + 1)
      000015 C8               [ 2]  108 	iny
      000016 B1*02            [ 6]  109 	lda	[*_wcslen_sloc0_1_0],y
      000018 85*06            [ 3]  110 	sta	*(_wcslen_sloc1_1_0 + 2)
      00001A C8               [ 2]  111 	iny
      00001B B1*02            [ 6]  112 	lda	[*_wcslen_sloc0_1_0],y
      00001D 85*07            [ 3]  113 	sta	*(_wcslen_sloc1_1_0 + 3)
                                    114 ;	Raw cost for generated ic 6 : (21, 40.000000) count=3.999997
                                    115 ;	genIfx
      00001F 05*06            [ 3]  116 	ora	*(_wcslen_sloc1_1_0 + 2)
      000021 05*05            [ 3]  117 	ora	*(_wcslen_sloc1_1_0 + 1)
      000023 05*04            [ 3]  118 	ora	*_wcslen_sloc1_1_0
                                    119 ;	genIfxJump : z
      000025 F0 14            [ 4]  120 	beq	00103$
                                    121 ;	Raw cost for generated ic 7 : (11, 14.600000) count=3.999997
                                    122 ;	../wcslen.c: 36: n++;
                                    123 ;	genPlus
                                    124 ;	  genPlusInc
      000027 E6*00            [ 5]  125 	inc	*_wcslen_n_10000_16
      000029 D0 02            [ 4]  126 	bne	00121$
      00002B E6*01            [ 5]  127 	inc	*(_wcslen_n_10000_16 + 1)
      00002D                        128 00121$:
                                    129 ;	Raw cost for generated ic 11 : (6, 12.600000) count=2.999997
                                    130 ;	../wcslen.c: 37: s++;
                                    131 ;	genPlus
                                    132 ;	  genPlusInc
      00002D A5*02            [ 3]  133 	lda	*_wcslen_sloc0_1_0
      00002F 18               [ 2]  134 	clc
      000030 69 04            [ 2]  135 	adc	#0x04
      000032 85*02            [ 3]  136 	sta	*_wcslen_sloc0_1_0
      000034 90 D4            [ 4]  137 	bcc	00101$
      000036 E6*03            [ 5]  138 	inc	*(_wcslen_sloc0_1_0 + 1)
                                    139 ;	Raw cost for generated ic 14 : (11, 17.600000) count=2.999997
                                    140 ;	genGoto
      000038 4Cr0Ar00         [ 3]  141 	jmp	00101$
                                    142 ;	Raw cost for generated ic 16 : (3, 3.000000) count=2.999997
                                    143 ;	genLabel
      00003B                        144 00103$:
                                    145 ;	Raw cost for generated ic 17 : (0, 0.000000) count=0.999999
                                    146 ;	../wcslen.c: 40: return n;
                                    147 ;	genRet
      00003B A6*01            [ 3]  148 	ldx	*(_wcslen_n_10000_16 + 1)
      00003D A5*00            [ 3]  149 	lda	*_wcslen_n_10000_16
                                    150 ;	Raw cost for generated ic 18 : (4, 6.000000) count=0.999999
                                    151 ;	genLabel
                                    152 ;	Raw cost for generated ic 19 : (0, 0.000000) count=0.999999
                                    153 ;	../wcslen.c: 41: }
                                    154 ;	genEndFunction
      00003F 60               [ 6]  155 	rts
                                    156 ;	Raw cost for generated ic 20 : (1, 6.000000) count=0.999999
                                    157 	.area CODE
                                    158 	.area RODATA
                                    159 	.area XINIT
                                    160 	.area CABS    (ABS)
