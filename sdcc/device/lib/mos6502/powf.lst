                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler
                                      3 ; Version 4.5.10 #15691 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module powf
                                      6 	
                                      7 	.optsdcc -mmos6502
                                      8 
                                      9 ;--------------------------------------------------------
                                     10 ;  Ordering of segments for the linker.
                                     11 ;--------------------------------------------------------
                                     12 	.area ZP      (PAG)
                                     13 	.area OSEG    (PAG, OVR)
                                     14 	.area _CODE
                                     15 	.area GSINIT
                                     16 	.area GSFINAL
                                     17 	.area CODE
                                     18 	.area RODATA
                                     19 	.area XINIT
                                     20 	.area _DATA
                                     21 	.area DATA
                                     22 	.area BSS
                                     23 ;--------------------------------------------------------
                                     24 ; Public variables in this module
                                     25 ;--------------------------------------------------------
                                     26 	.globl _logf
                                     27 	.globl _expf
                                     28 	.globl _powf_PARM_2
                                     29 	.globl _powf_PARM_1
                                     30 	.globl _powf
                                     31 ;--------------------------------------------------------
                                     32 ; ZP ram data
                                     33 ;--------------------------------------------------------
                                     34 	.area ZP      (PAG)
      000000                         35 _powf_sloc0_1_0:
      000000                         36 	.ds 4
                                     37 ;--------------------------------------------------------
                                     38 ; overlayable items in ram
                                     39 ;--------------------------------------------------------
                                     40 ;--------------------------------------------------------
                                     41 ; uninitialized external ram data
                                     42 ;--------------------------------------------------------
                                     43 	.area BSS
      000000                         44 _powf_PARM_1:
      000000                         45 	.ds 4
      000004                         46 _powf_PARM_2:
      000004                         47 	.ds 4
                                     48 ;--------------------------------------------------------
                                     49 ; absolute external ram data
                                     50 ;--------------------------------------------------------
                                     51 	.area DABS    (ABS)
                                     52 ;--------------------------------------------------------
                                     53 ; initialized external ram data
                                     54 ;--------------------------------------------------------
                                     55 	.area DATA
                                     56 ;--------------------------------------------------------
                                     57 ; global & static initialisations
                                     58 ;--------------------------------------------------------
                                     59 	.area _CODE
                                     60 	.area GSINIT
                                     61 	.area GSFINAL
                                     62 	.area GSINIT
                                     63 ;--------------------------------------------------------
                                     64 ; Home
                                     65 ;--------------------------------------------------------
                                     66 	.area _CODE
                                     67 	.area _CODE
                                     68 ;--------------------------------------------------------
                                     69 ; code
                                     70 ;--------------------------------------------------------
                                     71 	.area CODE
                                     72 ;------------------------------------------------------------
                                     73 ;Allocation info for local variables in function 'powf'
                                     74 ;------------------------------------------------------------
                                     75 ;sloc0         Allocated with name '_powf_sloc0_1_0'
                                     76 ;x             Allocated with name '_powf_PARM_1'
                                     77 ;y             Allocated with name '_powf_PARM_2'
                                     78 ;------------------------------------------------------------
                                     79 ;	../powf.c: 35: float powf(float x, float y)
                                     80 ;	genLabel
                                     81 ;	Raw cost for generated ic 0 : (0, 0.000000) count=1.000000
                                     82 ;	-----------------------------------------
                                     83 ;	 function powf
                                     84 ;	-----------------------------------------
                                     85 ;	Register assignment is optimal.
                                     86 ;	Stack space usage: 0 bytes.
      000000                         87 _powf:
                                     88 ;	Raw cost for generated ic 1 : (0, 0.000000) count=1.000000
                                     89 ;	../powf.c: 37: if(y == 0.0) return 1.0;
                                     90 ;	genIfx
      000000 ADr07r00         [ 4]   91 	lda	(_powf_PARM_2 + 3)
      000003 29 7F            [ 2]   92 	and	#0x7F
      000005 0Dr06r00         [ 4]   93 	ora	(_powf_PARM_2 + 2)
      000008 0Dr05r00         [ 4]   94 	ora	(_powf_PARM_2 + 1)
      00000B 0Dr04r00         [ 4]   95 	ora	_powf_PARM_2
                                     96 ;	genIfxJump : z
      00000E D0 0C            [ 4]   97 	bne	00102$
                                     98 ;	Raw cost for generated ic 2 : (19, 23.600000) count=1.000000
                                     99 ;	genRet
      000010 A9 00            [ 2]  100 	lda	#0x00
      000012 AA               [ 2]  101 	tax
      000013 A0 80            [ 2]  102 	ldy	#0x80
      000015 84*00            [ 3]  103 	sty	*___SDCC_m6502_ret2
      000017 A0 3F            [ 2]  104 	ldy	#0x3f
      000019 84*00            [ 3]  105 	sty	*___SDCC_m6502_ret3
      00001B 60               [ 6]  106 	rts
                                    107 ;	Raw cost for generated ic 5 : (14, 17.000000) count=0.750000
                                    108 ;	genLabel
      00001C                        109 00102$:
                                    110 ;	Raw cost for generated ic 6 : (0, 0.000000) count=1.000000
                                    111 ;	../powf.c: 38: if(y == 1.0) return x;
                                    112 ;	genAssign
                                    113 ;	genCopy
      00001C ADr07r00         [ 4]  114 	lda	(_powf_PARM_2 + 3)
      00001F 8Dr03r00         [ 4]  115 	sta	(___fseq_PARM_1 + 3)
      000022 ADr06r00         [ 4]  116 	lda	(_powf_PARM_2 + 2)
      000025 8Dr02r00         [ 4]  117 	sta	(___fseq_PARM_1 + 2)
      000028 ADr05r00         [ 4]  118 	lda	(_powf_PARM_2 + 1)
      00002B 8Dr01r00         [ 4]  119 	sta	(___fseq_PARM_1 + 1)
      00002E ADr04r00         [ 4]  120 	lda	_powf_PARM_2
      000031 8Dr00r00         [ 4]  121 	sta	___fseq_PARM_1
                                    122 ;	Raw cost for generated ic 27 : (24, 32.000000) count=1.000000
                                    123 ;	genAssign
                                    124 ;	genAssignLit
      000034 A0 00            [ 2]  125 	ldy	#0x00
      000036 8Cr00r00         [ 4]  126 	sty	___fseq_PARM_2
      000039 8Cr01r00         [ 4]  127 	sty	(___fseq_PARM_2 + 1)
      00003C A2 80            [ 2]  128 	ldx	#0x80
      00003E 8Er02r00         [ 4]  129 	stx	(___fseq_PARM_2 + 2)
      000041 A2 3F            [ 2]  130 	ldx	#0x3f
      000043 8Er03r00         [ 4]  131 	stx	(___fseq_PARM_2 + 3)
                                    132 ;	Raw cost for generated ic 28 : (18, 22.000000) count=1.000000
                                    133 ;	genCall
      000046 20r00r00         [ 6]  134 	jsr	___fseq
                                    135 ;	assignResultValue
                                    136 ;	Raw cost for generated ic 29 : (3, 6.000000) count=1.000000
                                    137 ;	genIfx
      000049 C9 00            [ 2]  138 	cmp	#0x00
                                    139 ;	genIfxJump : z
      00004B F0 11            [ 4]  140 	beq	00104$
                                    141 ;	Raw cost for generated ic 8 : (7, 7.600000) count=1.000000
                                    142 ;	genRet
      00004D ADr03r00         [ 4]  143 	lda	(_powf_PARM_1 + 3)
      000050 85*00            [ 3]  144 	sta	*___SDCC_m6502_ret3
      000052 ADr02r00         [ 4]  145 	lda	(_powf_PARM_1 + 2)
      000055 85*00            [ 3]  146 	sta	*___SDCC_m6502_ret2
      000057 AEr01r00         [ 4]  147 	ldx	(_powf_PARM_1 + 1)
      00005A ADr00r00         [ 4]  148 	lda	_powf_PARM_1
      00005D 60               [ 6]  149 	rts
                                    150 ;	Raw cost for generated ic 11 : (19, 25.000000) count=0.750000
                                    151 ;	genLabel
      00005E                        152 00104$:
                                    153 ;	Raw cost for generated ic 12 : (0, 0.000000) count=1.000000
                                    154 ;	../powf.c: 39: if(x <= 0.0) return 0.0;
                                    155 ;	genAssign
                                    156 ;	genAssignLit
      00005E A0 00            [ 2]  157 	ldy	#0x00
      000060 8Cr00r00         [ 4]  158 	sty	___fslt_PARM_1
      000063 8Cr01r00         [ 4]  159 	sty	(___fslt_PARM_1 + 1)
      000066 8Cr02r00         [ 4]  160 	sty	(___fslt_PARM_1 + 2)
      000069 8Cr03r00         [ 4]  161 	sty	(___fslt_PARM_1 + 3)
                                    162 ;	Raw cost for generated ic 30 : (14, 18.000000) count=1.000000
                                    163 ;	genAssign
                                    164 ;	genCopy
      00006C ADr03r00         [ 4]  165 	lda	(_powf_PARM_1 + 3)
      00006F 8Dr03r00         [ 4]  166 	sta	(___fslt_PARM_2 + 3)
      000072 ADr02r00         [ 4]  167 	lda	(_powf_PARM_1 + 2)
      000075 8Dr02r00         [ 4]  168 	sta	(___fslt_PARM_2 + 2)
      000078 ADr01r00         [ 4]  169 	lda	(_powf_PARM_1 + 1)
      00007B 8Dr01r00         [ 4]  170 	sta	(___fslt_PARM_2 + 1)
      00007E ADr00r00         [ 4]  171 	lda	_powf_PARM_1
      000081 8Dr00r00         [ 4]  172 	sta	___fslt_PARM_2
                                    173 ;	Raw cost for generated ic 31 : (24, 32.000000) count=1.000000
                                    174 ;	genCall
      000084 20r00r00         [ 6]  175 	jsr	___fslt
                                    176 ;	assignResultValue
                                    177 ;	Raw cost for generated ic 32 : (3, 6.000000) count=1.000000
                                    178 ;	genIfx
      000087 C9 00            [ 2]  179 	cmp	#0x00
                                    180 ;	genIfxJump : z
      000089 D0 08            [ 4]  181 	bne	00106$
                                    182 ;	Raw cost for generated ic 14 : (7, 7.600000) count=1.000000
                                    183 ;	genRet
      00008B A9 00            [ 2]  184 	lda	#0x00
      00008D AA               [ 2]  185 	tax
      00008E 85*00            [ 3]  186 	sta	*___SDCC_m6502_ret2
      000090 85*00            [ 3]  187 	sta	*___SDCC_m6502_ret3
      000092 60               [ 6]  188 	rts
                                    189 ;	Raw cost for generated ic 17 : (10, 13.000000) count=0.750000
                                    190 ;	genLabel
      000093                        191 00106$:
                                    192 ;	Raw cost for generated ic 18 : (0, 0.000000) count=1.000000
                                    193 ;	../powf.c: 40: return expf(logf(x) * y);
                                    194 ;	genAssign
                                    195 ;	genCopy
      000093 ADr03r00         [ 4]  196 	lda	(_powf_PARM_1 + 3)
      000096 8Dr03r00         [ 4]  197 	sta	(_logf_PARM_1 + 3)
      000099 ADr02r00         [ 4]  198 	lda	(_powf_PARM_1 + 2)
      00009C 8Dr02r00         [ 4]  199 	sta	(_logf_PARM_1 + 2)
      00009F ADr01r00         [ 4]  200 	lda	(_powf_PARM_1 + 1)
      0000A2 8Dr01r00         [ 4]  201 	sta	(_logf_PARM_1 + 1)
      0000A5 ADr00r00         [ 4]  202 	lda	_powf_PARM_1
      0000A8 8Dr00r00         [ 4]  203 	sta	_logf_PARM_1
                                    204 ;	Raw cost for generated ic 19 : (24, 32.000000) count=1.000000
                                    205 ;	genCall
      0000AB 20r00r00         [ 6]  206 	jsr	_logf
                                    207 ;	assignResultValue
      0000AE 8Dr00r00         [ 4]  208 	sta	___fsmul_PARM_1
      0000B1 8Er01r00         [ 4]  209 	stx	(___fsmul_PARM_1 + 1)
      0000B4 A5*00            [ 3]  210 	lda	*___SDCC_m6502_ret2
      0000B6 8Dr02r00         [ 4]  211 	sta	(___fsmul_PARM_1 + 2)
      0000B9 A5*00            [ 3]  212 	lda	*___SDCC_m6502_ret3
      0000BB 8Dr03r00         [ 4]  213 	sta	(___fsmul_PARM_1 + 3)
                                    214 ;	Raw cost for generated ic 20 : (19, 28.000000) count=1.000000
                                    215 ;	genAssign
                                    216 ;	genCopy
      0000BE ADr07r00         [ 4]  217 	lda	(_powf_PARM_2 + 3)
      0000C1 8Dr03r00         [ 4]  218 	sta	(___fsmul_PARM_2 + 3)
      0000C4 ADr06r00         [ 4]  219 	lda	(_powf_PARM_2 + 2)
      0000C7 8Dr02r00         [ 4]  220 	sta	(___fsmul_PARM_2 + 2)
      0000CA ADr05r00         [ 4]  221 	lda	(_powf_PARM_2 + 1)
      0000CD 8Dr01r00         [ 4]  222 	sta	(___fsmul_PARM_2 + 1)
      0000D0 ADr04r00         [ 4]  223 	lda	_powf_PARM_2
      0000D3 8Dr00r00         [ 4]  224 	sta	___fsmul_PARM_2
                                    225 ;	Raw cost for generated ic 34 : (24, 32.000000) count=1.000000
                                    226 ;	genCall
      0000D6 20r00r00         [ 6]  227 	jsr	___fsmul
                                    228 ;	assignResultValue
      0000D9 8Dr00r00         [ 4]  229 	sta	_expf_PARM_1
      0000DC 8Er01r00         [ 4]  230 	stx	(_expf_PARM_1 + 1)
      0000DF A5*00            [ 3]  231 	lda	*___SDCC_m6502_ret2
      0000E1 8Dr02r00         [ 4]  232 	sta	(_expf_PARM_1 + 2)
      0000E4 A5*00            [ 3]  233 	lda	*___SDCC_m6502_ret3
      0000E6 8Dr03r00         [ 4]  234 	sta	(_expf_PARM_1 + 3)
                                    235 ;	Raw cost for generated ic 35 : (19, 28.000000) count=1.000000
                                    236 ;	genCall
      0000E9 20r00r00         [ 6]  237 	jsr	_expf
                                    238 ;	assignResultValue
      0000EC 85*00            [ 3]  239 	sta	*_powf_sloc0_1_0
      0000EE 86*01            [ 3]  240 	stx	*(_powf_sloc0_1_0 + 1)
      0000F0 A5*00            [ 3]  241 	lda	*___SDCC_m6502_ret2
      0000F2 85*02            [ 3]  242 	sta	*(_powf_sloc0_1_0 + 2)
      0000F4 A5*00            [ 3]  243 	lda	*___SDCC_m6502_ret3
      0000F6 85*03            [ 3]  244 	sta	*(_powf_sloc0_1_0 + 3)
                                    245 ;	Raw cost for generated ic 23 : (15, 24.000000) count=1.000000
                                    246 ;	genRet
      0000F8 85*00            [ 3]  247 	sta	*___SDCC_m6502_ret3
      0000FA A5*02            [ 3]  248 	lda	*(_powf_sloc0_1_0 + 2)
      0000FC 85*00            [ 3]  249 	sta	*___SDCC_m6502_ret2
      0000FE A5*00            [ 3]  250 	lda	*_powf_sloc0_1_0
                                    251 ;	Raw cost for generated ic 24 : (8, 12.000000) count=1.000000
                                    252 ;	genLabel
                                    253 ;	Raw cost for generated ic 25 : (0, 0.000000) count=1.000000
                                    254 ;	../powf.c: 41: }
                                    255 ;	genEndFunction
      000100 60               [ 6]  256 	rts
                                    257 ;	Raw cost for generated ic 26 : (1, 6.000000) count=1.000000
                                    258 	.area CODE
                                    259 	.area RODATA
                                    260 	.area XINIT
                                    261 	.area CABS    (ABS)
