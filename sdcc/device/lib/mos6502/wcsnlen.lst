                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler
                                      3 ; Version 4.5.10 #15691 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module wcsnlen
                                      6 	
                                      7 	.optsdcc -mmos6502
                                      8 
                                      9 ;--------------------------------------------------------
                                     10 ;  Ordering of segments for the linker.
                                     11 ;--------------------------------------------------------
                                     12 	.area ZP      (PAG)
                                     13 	.area OSEG    (PAG, OVR)
                                     14 	.area _CODE
                                     15 	.area GSINIT
                                     16 	.area GSFINAL
                                     17 	.area CODE
                                     18 	.area RODATA
                                     19 	.area XINIT
                                     20 	.area _DATA
                                     21 	.area DATA
                                     22 	.area BSS
                                     23 ;--------------------------------------------------------
                                     24 ; Public variables in this module
                                     25 ;--------------------------------------------------------
                                     26 	.globl _wcsnlen_PARM_2
                                     27 	.globl _wcsnlen
                                     28 ;--------------------------------------------------------
                                     29 ; ZP ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area ZP      (PAG)
                                     32 ;--------------------------------------------------------
                                     33 ; overlayable items in ram
                                     34 ;--------------------------------------------------------
                                     35 	.area	OSEG    (PAG, OVR)
      000000                         36 _wcsnlen_i_10000_16:
      000000                         37 	.ds 2
      000002                         38 _wcsnlen_sloc0_1_0:
      000002                         39 	.ds 2
      000004                         40 _wcsnlen_sloc1_1_0:
      000004                         41 	.ds 2
      000006                         42 _wcsnlen_sloc2_1_0:
      000006                         43 	.ds 4
                                     44 ;--------------------------------------------------------
                                     45 ; uninitialized external ram data
                                     46 ;--------------------------------------------------------
                                     47 	.area BSS
      000000                         48 _wcsnlen_PARM_2:
      000000                         49 	.ds 2
                                     50 ;--------------------------------------------------------
                                     51 ; absolute external ram data
                                     52 ;--------------------------------------------------------
                                     53 	.area DABS    (ABS)
                                     54 ;--------------------------------------------------------
                                     55 ; initialized external ram data
                                     56 ;--------------------------------------------------------
                                     57 	.area DATA
                                     58 ;--------------------------------------------------------
                                     59 ; global & static initialisations
                                     60 ;--------------------------------------------------------
                                     61 	.area _CODE
                                     62 	.area GSINIT
                                     63 	.area GSFINAL
                                     64 	.area GSINIT
                                     65 ;--------------------------------------------------------
                                     66 ; Home
                                     67 ;--------------------------------------------------------
                                     68 	.area _CODE
                                     69 	.area _CODE
                                     70 ;--------------------------------------------------------
                                     71 ; code
                                     72 ;--------------------------------------------------------
                                     73 	.area CODE
                                     74 ;------------------------------------------------------------
                                     75 ;Allocation info for local variables in function 'wcsnlen'
                                     76 ;------------------------------------------------------------
                                     77 ;n             Allocated with name '_wcsnlen_PARM_2'
                                     78 ;s             Allocated to registers 
                                     79 ;i             Allocated with name '_wcsnlen_i_10000_16'
                                     80 ;sloc0         Allocated with name '_wcsnlen_sloc0_1_0'
                                     81 ;sloc1         Allocated with name '_wcsnlen_sloc1_1_0'
                                     82 ;sloc2         Allocated with name '_wcsnlen_sloc2_1_0'
                                     83 ;------------------------------------------------------------
                                     84 ;	../wcsnlen.c: 32: size_t wcsnlen (const wchar_t *s, size_t n)
                                     85 ;	genLabel
                                     86 ;	Raw cost for generated ic 0 : (0, 0.000000) count=1.000000
                                     87 ;	-----------------------------------------
                                     88 ;	 function wcsnlen
                                     89 ;	-----------------------------------------
                                     90 ;	Register assignment is optimal.
                                     91 ;	Stack space usage: 0 bytes.
      000000                         92 _wcsnlen:
                                     93 ;	Raw cost for generated ic 1 : (0, 0.000000) count=1.000000
                                     94 ;	genReceive
      000000 85*02            [ 3]   95 	sta	*_wcsnlen_sloc0_1_0
      000002 86*03            [ 3]   96 	stx	*(_wcsnlen_sloc0_1_0 + 1)
                                     97 ;	Raw cost for generated ic 2 : (4, 6.000000) count=1.000000
                                     98 ;	../wcsnlen.c: 36: while (n-- && *s++)
                                     99 ;	genAssign
                                    100 ;	genAssignLit
      000004 A0 00            [ 2]  101 	ldy	#0x00
      000006 84*00            [ 3]  102 	sty	*_wcsnlen_i_10000_16
      000008 84*01            [ 3]  103 	sty	*(_wcsnlen_i_10000_16 + 1)
                                    104 ;	Raw cost for generated ic 30 : (6, 8.000000) count=1.000000
                                    105 ;	genAssign
                                    106 ;	genCopy
      00000A ADr01r00         [ 4]  107 	lda	(_wcsnlen_PARM_2 + 1)
      00000D 85*05            [ 3]  108 	sta	*(_wcsnlen_sloc1_1_0 + 1)
      00000F ADr00r00         [ 4]  109 	lda	_wcsnlen_PARM_2
      000012 85*04            [ 3]  110 	sta	*_wcsnlen_sloc1_1_0
                                    111 ;	Raw cost for generated ic 32 : (10, 14.000000) count=1.000000
                                    112 ;	genLabel
      000014                        113 00102$:
                                    114 ;	Raw cost for generated ic 4 : (0, 0.000000) count=2.285713
                                    115 ;	genAssign
                                    116 ;	genCopy
      000014 A6*05            [ 3]  117 	ldx	*(_wcsnlen_sloc1_1_0 + 1)
      000016 A5*04            [ 3]  118 	lda	*_wcsnlen_sloc1_1_0
                                    119 ;	Raw cost for generated ic 5 : (4, 6.000000) count=2.285713
                                    120 ;	genMinus
                                    121 ;	  genMinusDec - size=2  icount=1
      000018 A4*04            [ 3]  122 	ldy	*_wcsnlen_sloc1_1_0
      00001A D0 02            [ 4]  123 	bne	00126$
      00001C C6*05            [ 5]  124 	dec	*(_wcsnlen_sloc1_1_0 + 1)
      00001E                        125 00126$:
      00001E C6*04            [ 5]  126 	dec	*_wcsnlen_sloc1_1_0
                                    127 ;	Raw cost for generated ic 6 : (8, 15.600000) count=2.285713
                                    128 ;	genIfx
      000020 C9 00            [ 2]  129 	cmp	#0x00
                                    130 ;	genIfxJump : z
      000022 D0 04            [ 4]  131 	bne	00128$
      000024 E0 00            [ 2]  132 	cpx	#0x00
      000026 F0 33            [ 4]  133 	beq	00104$
      000028                        134 00128$:
                                    135 ;	Raw cost for generated ic 8 : (11, 12.200000) count=2.285713
                                    136 ;	genPointerGet
      000028 A0 00            [ 2]  137 	ldy	#0x00
      00002A B1*02            [ 6]  138 	lda	[*_wcsnlen_sloc0_1_0],y
      00002C 85*06            [ 3]  139 	sta	*_wcsnlen_sloc2_1_0
      00002E C8               [ 2]  140 	iny
      00002F B1*02            [ 6]  141 	lda	[*_wcsnlen_sloc0_1_0],y
      000031 85*07            [ 3]  142 	sta	*(_wcsnlen_sloc2_1_0 + 1)
      000033 C8               [ 2]  143 	iny
      000034 B1*02            [ 6]  144 	lda	[*_wcsnlen_sloc0_1_0],y
      000036 85*08            [ 3]  145 	sta	*(_wcsnlen_sloc2_1_0 + 2)
      000038 C8               [ 2]  146 	iny
      000039 B1*02            [ 6]  147 	lda	[*_wcsnlen_sloc0_1_0],y
      00003B 85*09            [ 3]  148 	sta	*(_wcsnlen_sloc2_1_0 + 3)
                                    149 ;	Raw cost for generated ic 14 : (21, 40.000000) count=1.714284
                                    150 ;	genPlus
                                    151 ;	  genPlusInc
      00003D A5*02            [ 3]  152 	lda	*_wcsnlen_sloc0_1_0
      00003F 18               [ 2]  153 	clc
      000040 69 04            [ 2]  154 	adc	#0x04
      000042 85*02            [ 3]  155 	sta	*_wcsnlen_sloc0_1_0
      000044 90 02            [ 4]  156 	bcc	00129$
      000046 E6*03            [ 5]  157 	inc	*(_wcsnlen_sloc0_1_0 + 1)
      000048                        158 00129$:
                                    159 ;	Raw cost for generated ic 12 : (11, 17.600000) count=1.714284
                                    160 ;	genIfx
      000048 A5*09            [ 3]  161 	lda	*(_wcsnlen_sloc2_1_0 + 3)
      00004A 05*08            [ 3]  162 	ora	*(_wcsnlen_sloc2_1_0 + 2)
      00004C 05*07            [ 3]  163 	ora	*(_wcsnlen_sloc2_1_0 + 1)
      00004E 05*06            [ 3]  164 	ora	*_wcsnlen_sloc2_1_0
                                    165 ;	genIfxJump : z
      000050 F0 09            [ 4]  166 	beq	00104$
                                    167 ;	Raw cost for generated ic 15 : (13, 17.600000) count=1.714284
                                    168 ;	../wcsnlen.c: 37: i++ ;
                                    169 ;	genPlus
                                    170 ;	  genPlusInc
      000052 E6*00            [ 5]  171 	inc	*_wcsnlen_i_10000_16
      000054 D0 BE            [ 4]  172 	bne	00102$
      000056 E6*01            [ 5]  173 	inc	*(_wcsnlen_i_10000_16 + 1)
                                    174 ;	Raw cost for generated ic 19 : (6, 12.600000) count=1.285713
                                    175 ;	genGoto
      000058 4Cr14r00         [ 3]  176 	jmp	00102$
                                    177 ;	Raw cost for generated ic 21 : (3, 3.000000) count=1.285713
                                    178 ;	genLabel
      00005B                        179 00104$:
                                    180 ;	Raw cost for generated ic 22 : (0, 0.000000) count=0.999999
                                    181 ;	../wcsnlen.c: 39: return i;
                                    182 ;	genRet
      00005B A6*01            [ 3]  183 	ldx	*(_wcsnlen_i_10000_16 + 1)
      00005D A5*00            [ 3]  184 	lda	*_wcsnlen_i_10000_16
                                    185 ;	Raw cost for generated ic 23 : (4, 6.000000) count=0.999999
                                    186 ;	genLabel
                                    187 ;	Raw cost for generated ic 24 : (0, 0.000000) count=0.999999
                                    188 ;	../wcsnlen.c: 40: }
                                    189 ;	genEndFunction
      00005F 60               [ 6]  190 	rts
                                    191 ;	Raw cost for generated ic 25 : (1, 6.000000) count=0.999999
                                    192 	.area CODE
                                    193 	.area RODATA
                                    194 	.area XINIT
                                    195 	.area CABS    (ABS)
